// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: camera_server/camera_server.proto

#include "camera_server/camera_server.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mavsdk {
namespace rpc {
namespace camera_server {

inline constexpr ZoomRangeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : factor_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ZoomRangeResponse::ZoomRangeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoomRangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomRangeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomRangeResponseDefaultTypeInternal() {}
  union {
    ZoomRangeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomRangeResponseDefaultTypeInternal _ZoomRangeResponse_default_instance_;

inline constexpr VideoStreamSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uri_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frame_rate_hz_{0},
        horizontal_resolution_pix_{0u},
        vertical_resolution_pix_{0u},
        bit_rate_b_s_{0u},
        rotation_deg_{0u},
        horizontal_fov_deg_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VideoStreamSettings::VideoStreamSettings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VideoStreamSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoStreamSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoStreamSettingsDefaultTypeInternal() {}
  union {
    VideoStreamSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoStreamSettingsDefaultTypeInternal _VideoStreamSettings_default_instance_;

inline constexpr TakePhotoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : index_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TakePhotoResponse::TakePhotoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TakePhotoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TakePhotoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TakePhotoResponseDefaultTypeInternal() {}
  union {
    TakePhotoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TakePhotoResponseDefaultTypeInternal _TakePhotoResponse_default_instance_;

inline constexpr SystemTimeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : utc_time_in_ms_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SystemTimeResponse::SystemTimeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SystemTimeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SystemTimeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SystemTimeResponseDefaultTypeInternal() {}
  union {
    SystemTimeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SystemTimeResponseDefaultTypeInternal _SystemTimeResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeZoomRangeRequest::SubscribeZoomRangeRequest(::_pbi::ConstantInitialized) {}
struct SubscribeZoomRangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeZoomRangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeZoomRangeRequestDefaultTypeInternal() {}
  union {
    SubscribeZoomRangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeZoomRangeRequestDefaultTypeInternal _SubscribeZoomRangeRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeTakePhotoRequest::SubscribeTakePhotoRequest(::_pbi::ConstantInitialized) {}
struct SubscribeTakePhotoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeTakePhotoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeTakePhotoRequestDefaultTypeInternal() {}
  union {
    SubscribeTakePhotoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeTakePhotoRequestDefaultTypeInternal _SubscribeTakePhotoRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeSystemTimeRequest::SubscribeSystemTimeRequest(::_pbi::ConstantInitialized) {}
struct SubscribeSystemTimeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeSystemTimeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeSystemTimeRequestDefaultTypeInternal() {}
  union {
    SubscribeSystemTimeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeSystemTimeRequestDefaultTypeInternal _SubscribeSystemTimeRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeStorageInformationRequest::SubscribeStorageInformationRequest(::_pbi::ConstantInitialized) {}
struct SubscribeStorageInformationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStorageInformationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStorageInformationRequestDefaultTypeInternal() {}
  union {
    SubscribeStorageInformationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStorageInformationRequestDefaultTypeInternal _SubscribeStorageInformationRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeStopVideoStreamingRequest::SubscribeStopVideoStreamingRequest(::_pbi::ConstantInitialized) {}
struct SubscribeStopVideoStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStopVideoStreamingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStopVideoStreamingRequestDefaultTypeInternal() {}
  union {
    SubscribeStopVideoStreamingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStopVideoStreamingRequestDefaultTypeInternal _SubscribeStopVideoStreamingRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeStopVideoRequest::SubscribeStopVideoRequest(::_pbi::ConstantInitialized) {}
struct SubscribeStopVideoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStopVideoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStopVideoRequestDefaultTypeInternal() {}
  union {
    SubscribeStopVideoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStopVideoRequestDefaultTypeInternal _SubscribeStopVideoRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeStartVideoStreamingRequest::SubscribeStartVideoStreamingRequest(::_pbi::ConstantInitialized) {}
struct SubscribeStartVideoStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStartVideoStreamingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStartVideoStreamingRequestDefaultTypeInternal() {}
  union {
    SubscribeStartVideoStreamingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStartVideoStreamingRequestDefaultTypeInternal _SubscribeStartVideoStreamingRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeStartVideoRequest::SubscribeStartVideoRequest(::_pbi::ConstantInitialized) {}
struct SubscribeStartVideoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeStartVideoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeStartVideoRequestDefaultTypeInternal() {}
  union {
    SubscribeStartVideoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeStartVideoRequestDefaultTypeInternal _SubscribeStartVideoRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeSettingsRequest::SubscribeSettingsRequest(::_pbi::ConstantInitialized) {}
struct SubscribeSettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeSettingsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeSettingsRequestDefaultTypeInternal() {}
  union {
    SubscribeSettingsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeSettingsRequestDefaultTypeInternal _SubscribeSettingsRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeSetModeRequest::SubscribeSetModeRequest(::_pbi::ConstantInitialized) {}
struct SubscribeSetModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeSetModeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeSetModeRequestDefaultTypeInternal() {}
  union {
    SubscribeSetModeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeSetModeRequestDefaultTypeInternal _SubscribeSetModeRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeResetSettingsRequest::SubscribeResetSettingsRequest(::_pbi::ConstantInitialized) {}
struct SubscribeResetSettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeResetSettingsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeResetSettingsRequestDefaultTypeInternal() {}
  union {
    SubscribeResetSettingsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeResetSettingsRequestDefaultTypeInternal _SubscribeResetSettingsRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeFormatStorageRequest::SubscribeFormatStorageRequest(::_pbi::ConstantInitialized) {}
struct SubscribeFormatStorageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeFormatStorageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeFormatStorageRequestDefaultTypeInternal() {}
  union {
    SubscribeFormatStorageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeFormatStorageRequestDefaultTypeInternal _SubscribeFormatStorageRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscribeCaptureStatusRequest::SubscribeCaptureStatusRequest(::_pbi::ConstantInitialized) {}
struct SubscribeCaptureStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeCaptureStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeCaptureStatusRequestDefaultTypeInternal() {}
  union {
    SubscribeCaptureStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeCaptureStatusRequestDefaultTypeInternal _SubscribeCaptureStatusRequest_default_instance_;

inline constexpr StorageInformationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : storage_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StorageInformationResponse::StorageInformationResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StorageInformationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageInformationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageInformationResponseDefaultTypeInternal() {}
  union {
    StorageInformationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageInformationResponseDefaultTypeInternal _StorageInformationResponse_default_instance_;

inline constexpr StorageInformation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : used_storage_mib_{0},
        available_storage_mib_{0},
        total_storage_mib_{0},
        storage_status_{static_cast< ::mavsdk::rpc::camera_server::StorageInformation_StorageStatus >(0)},
        storage_id_{0u},
        storage_type_{static_cast< ::mavsdk::rpc::camera_server::StorageInformation_StorageType >(0)},
        read_speed_mib_s_{0},
        write_speed_mib_s_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StorageInformation::StorageInformation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StorageInformationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageInformationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageInformationDefaultTypeInternal() {}
  union {
    StorageInformation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageInformationDefaultTypeInternal _StorageInformation_default_instance_;

inline constexpr StopVideoStreamingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stream_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StopVideoStreamingResponse::StopVideoStreamingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StopVideoStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopVideoStreamingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopVideoStreamingResponseDefaultTypeInternal() {}
  union {
    StopVideoStreamingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopVideoStreamingResponseDefaultTypeInternal _StopVideoStreamingResponse_default_instance_;

inline constexpr StopVideoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stream_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StopVideoResponse::StopVideoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StopVideoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopVideoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopVideoResponseDefaultTypeInternal() {}
  union {
    StopVideoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopVideoResponseDefaultTypeInternal _StopVideoResponse_default_instance_;

inline constexpr StartVideoStreamingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stream_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StartVideoStreamingResponse::StartVideoStreamingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartVideoStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartVideoStreamingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartVideoStreamingResponseDefaultTypeInternal() {}
  union {
    StartVideoStreamingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartVideoStreamingResponseDefaultTypeInternal _StartVideoStreamingResponse_default_instance_;

inline constexpr StartVideoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stream_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StartVideoResponse::StartVideoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartVideoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartVideoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartVideoResponseDefaultTypeInternal() {}
  union {
    StartVideoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartVideoResponseDefaultTypeInternal _StartVideoResponse_default_instance_;

inline constexpr SettingsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reserved_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SettingsResponse::SettingsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SettingsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SettingsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SettingsResponseDefaultTypeInternal() {}
  union {
    SettingsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SettingsResponseDefaultTypeInternal _SettingsResponse_default_instance_;

inline constexpr Settings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mode_{static_cast< ::mavsdk::rpc::camera_server::Mode >(0)},
        zoom_level_{0},
        focus_level_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Settings::Settings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SettingsDefaultTypeInternal() {}
  union {
    Settings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SettingsDefaultTypeInternal _Settings_default_instance_;

inline constexpr SetModeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mode_{static_cast< ::mavsdk::rpc::camera_server::Mode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetModeResponse::SetModeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetModeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetModeResponseDefaultTypeInternal() {}
  union {
    SetModeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetModeResponseDefaultTypeInternal _SetModeResponse_default_instance_;

inline constexpr SetInProgressRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : in_progress_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetInProgressRequest::SetInProgressRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetInProgressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInProgressRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInProgressRequestDefaultTypeInternal() {}
  union {
    SetInProgressRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInProgressRequestDefaultTypeInternal _SetInProgressRequest_default_instance_;

inline constexpr RespondZoomRangeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : zoom_range_feedback_{static_cast< ::mavsdk::rpc::camera_server::CameraFeedback >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RespondZoomRangeRequest::RespondZoomRangeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondZoomRangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondZoomRangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondZoomRangeRequestDefaultTypeInternal() {}
  union {
    RespondZoomRangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondZoomRangeRequestDefaultTypeInternal _RespondZoomRangeRequest_default_instance_;

inline constexpr RespondSystemTimeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : system_time_feedback_{static_cast< ::mavsdk::rpc::camera_server::CameraFeedback >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RespondSystemTimeRequest::RespondSystemTimeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondSystemTimeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondSystemTimeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondSystemTimeRequestDefaultTypeInternal() {}
  union {
    RespondSystemTimeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondSystemTimeRequestDefaultTypeInternal _RespondSystemTimeRequest_default_instance_;

inline constexpr RespondStopVideoStreamingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stop_video_streaming_feedback_{static_cast< ::mavsdk::rpc::camera_server::CameraFeedback >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RespondStopVideoStreamingRequest::RespondStopVideoStreamingRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondStopVideoStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStopVideoStreamingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStopVideoStreamingRequestDefaultTypeInternal() {}
  union {
    RespondStopVideoStreamingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStopVideoStreamingRequestDefaultTypeInternal _RespondStopVideoStreamingRequest_default_instance_;

inline constexpr RespondStopVideoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stop_video_feedback_{static_cast< ::mavsdk::rpc::camera_server::CameraFeedback >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RespondStopVideoRequest::RespondStopVideoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondStopVideoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStopVideoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStopVideoRequestDefaultTypeInternal() {}
  union {
    RespondStopVideoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStopVideoRequestDefaultTypeInternal _RespondStopVideoRequest_default_instance_;

inline constexpr RespondStartVideoStreamingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : start_video_streaming_feedback_{static_cast< ::mavsdk::rpc::camera_server::CameraFeedback >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RespondStartVideoStreamingRequest::RespondStartVideoStreamingRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondStartVideoStreamingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStartVideoStreamingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStartVideoStreamingRequestDefaultTypeInternal() {}
  union {
    RespondStartVideoStreamingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStartVideoStreamingRequestDefaultTypeInternal _RespondStartVideoStreamingRequest_default_instance_;

inline constexpr RespondStartVideoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : start_video_feedback_{static_cast< ::mavsdk::rpc::camera_server::CameraFeedback >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RespondStartVideoRequest::RespondStartVideoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondStartVideoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStartVideoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStartVideoRequestDefaultTypeInternal() {}
  union {
    RespondStartVideoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStartVideoRequestDefaultTypeInternal _RespondStartVideoRequest_default_instance_;

inline constexpr RespondSetModeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : set_mode_feedback_{static_cast< ::mavsdk::rpc::camera_server::CameraFeedback >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RespondSetModeRequest::RespondSetModeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondSetModeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondSetModeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondSetModeRequestDefaultTypeInternal() {}
  union {
    RespondSetModeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondSetModeRequestDefaultTypeInternal _RespondSetModeRequest_default_instance_;

inline constexpr RespondResetSettingsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reset_settings_feedback_{static_cast< ::mavsdk::rpc::camera_server::CameraFeedback >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RespondResetSettingsRequest::RespondResetSettingsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondResetSettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondResetSettingsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondResetSettingsRequestDefaultTypeInternal() {}
  union {
    RespondResetSettingsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondResetSettingsRequestDefaultTypeInternal _RespondResetSettingsRequest_default_instance_;

inline constexpr RespondFormatStorageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : format_storage_feedback_{static_cast< ::mavsdk::rpc::camera_server::CameraFeedback >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RespondFormatStorageRequest::RespondFormatStorageRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondFormatStorageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondFormatStorageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondFormatStorageRequestDefaultTypeInternal() {}
  union {
    RespondFormatStorageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondFormatStorageRequestDefaultTypeInternal _RespondFormatStorageRequest_default_instance_;

inline constexpr ResetSettingsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reserved_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResetSettingsResponse::ResetSettingsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResetSettingsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetSettingsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetSettingsResponseDefaultTypeInternal() {}
  union {
    ResetSettingsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetSettingsResponseDefaultTypeInternal _ResetSettingsResponse_default_instance_;

inline constexpr Quaternion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : w_{0},
        x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Quaternion::Quaternion(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QuaternionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuaternionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuaternionDefaultTypeInternal() {}
  union {
    Quaternion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuaternionDefaultTypeInternal _Quaternion_default_instance_;

inline constexpr Position::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : latitude_deg_{0},
        longitude_deg_{0},
        absolute_altitude_m_{0},
        relative_altitude_m_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Position::Position(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDefaultTypeInternal() {}
  union {
    Position _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDefaultTypeInternal _Position_default_instance_;

inline constexpr Information::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : camera_cap_flags_{},
        _camera_cap_flags_cached_byte_size_{0},
        vendor_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        firmware_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        definition_file_uri_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        focal_length_mm_{0},
        horizontal_sensor_size_mm_{0},
        vertical_sensor_size_mm_{0},
        horizontal_resolution_px_{0u},
        vertical_resolution_px_{0u},
        lens_id_{0u},
        definition_file_version_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Information::Information(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InformationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InformationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InformationDefaultTypeInternal() {}
  union {
    Information _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InformationDefaultTypeInternal _Information_default_instance_;

inline constexpr FormatStorageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : storage_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FormatStorageResponse::FormatStorageResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FormatStorageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FormatStorageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FormatStorageResponseDefaultTypeInternal() {}
  union {
    FormatStorageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FormatStorageResponseDefaultTypeInternal _FormatStorageResponse_default_instance_;

inline constexpr CaptureStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reserved_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CaptureStatusResponse::CaptureStatusResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CaptureStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CaptureStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CaptureStatusResponseDefaultTypeInternal() {}
  union {
    CaptureStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CaptureStatusResponseDefaultTypeInternal _CaptureStatusResponse_default_instance_;

inline constexpr CaptureStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : image_interval_s_{0},
        recording_time_s_{0},
        available_capacity_mib_{0},
        image_status_{static_cast< ::mavsdk::rpc::camera_server::CaptureStatus_ImageStatus >(0)},
        video_status_{static_cast< ::mavsdk::rpc::camera_server::CaptureStatus_VideoStatus >(0)},
        image_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CaptureStatus::CaptureStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CaptureStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CaptureStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CaptureStatusDefaultTypeInternal() {}
  union {
    CaptureStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CaptureStatusDefaultTypeInternal _CaptureStatus_default_instance_;

inline constexpr CameraServerResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::mavsdk::rpc::camera_server::CameraServerResult_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CameraServerResult::CameraServerResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CameraServerResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraServerResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraServerResultDefaultTypeInternal() {}
  union {
    CameraServerResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraServerResultDefaultTypeInternal _CameraServerResult_default_instance_;

inline constexpr VideoStreamInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        settings_{nullptr},
        stream_id_{0},
        status_{static_cast< ::mavsdk::rpc::camera_server::VideoStreamInfo_VideoStreamStatus >(0)},
        spectrum_{static_cast< ::mavsdk::rpc::camera_server::VideoStreamInfo_VideoStreamSpectrum >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR VideoStreamInfo::VideoStreamInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VideoStreamInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoStreamInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoStreamInfoDefaultTypeInternal() {}
  union {
    VideoStreamInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoStreamInfoDefaultTypeInternal _VideoStreamInfo_default_instance_;

inline constexpr SetVideoStreamInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetVideoStreamInfoResponse::SetVideoStreamInfoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetVideoStreamInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVideoStreamInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVideoStreamInfoResponseDefaultTypeInternal() {}
  union {
    SetVideoStreamInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVideoStreamInfoResponseDefaultTypeInternal _SetVideoStreamInfoResponse_default_instance_;

inline constexpr SetInformationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetInformationResponse::SetInformationResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetInformationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInformationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInformationResponseDefaultTypeInternal() {}
  union {
    SetInformationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInformationResponseDefaultTypeInternal _SetInformationResponse_default_instance_;

inline constexpr SetInformationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        information_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetInformationRequest::SetInformationRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetInformationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInformationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInformationRequestDefaultTypeInternal() {}
  union {
    SetInformationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInformationRequestDefaultTypeInternal _SetInformationRequest_default_instance_;

inline constexpr SetInProgressResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SetInProgressResponse::SetInProgressResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetInProgressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInProgressResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInProgressResponseDefaultTypeInternal() {}
  union {
    SetInProgressResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInProgressResponseDefaultTypeInternal _SetInProgressResponse_default_instance_;

inline constexpr RespondZoomRangeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondZoomRangeResponse::RespondZoomRangeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondZoomRangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondZoomRangeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondZoomRangeResponseDefaultTypeInternal() {}
  union {
    RespondZoomRangeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondZoomRangeResponseDefaultTypeInternal _RespondZoomRangeResponse_default_instance_;

inline constexpr RespondTakePhotoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondTakePhotoResponse::RespondTakePhotoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondTakePhotoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondTakePhotoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondTakePhotoResponseDefaultTypeInternal() {}
  union {
    RespondTakePhotoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondTakePhotoResponseDefaultTypeInternal _RespondTakePhotoResponse_default_instance_;

inline constexpr RespondSystemTimeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondSystemTimeResponse::RespondSystemTimeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondSystemTimeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondSystemTimeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondSystemTimeResponseDefaultTypeInternal() {}
  union {
    RespondSystemTimeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondSystemTimeResponseDefaultTypeInternal _RespondSystemTimeResponse_default_instance_;

inline constexpr RespondStorageInformationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondStorageInformationResponse::RespondStorageInformationResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondStorageInformationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStorageInformationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStorageInformationResponseDefaultTypeInternal() {}
  union {
    RespondStorageInformationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStorageInformationResponseDefaultTypeInternal _RespondStorageInformationResponse_default_instance_;

inline constexpr RespondStorageInformationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        storage_information_{nullptr},
        storage_information_feedback_{static_cast< ::mavsdk::rpc::camera_server::CameraFeedback >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RespondStorageInformationRequest::RespondStorageInformationRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondStorageInformationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStorageInformationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStorageInformationRequestDefaultTypeInternal() {}
  union {
    RespondStorageInformationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStorageInformationRequestDefaultTypeInternal _RespondStorageInformationRequest_default_instance_;

inline constexpr RespondStopVideoStreamingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondStopVideoStreamingResponse::RespondStopVideoStreamingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondStopVideoStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStopVideoStreamingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStopVideoStreamingResponseDefaultTypeInternal() {}
  union {
    RespondStopVideoStreamingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStopVideoStreamingResponseDefaultTypeInternal _RespondStopVideoStreamingResponse_default_instance_;

inline constexpr RespondStopVideoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondStopVideoResponse::RespondStopVideoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondStopVideoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStopVideoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStopVideoResponseDefaultTypeInternal() {}
  union {
    RespondStopVideoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStopVideoResponseDefaultTypeInternal _RespondStopVideoResponse_default_instance_;

inline constexpr RespondStartVideoStreamingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondStartVideoStreamingResponse::RespondStartVideoStreamingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondStartVideoStreamingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStartVideoStreamingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStartVideoStreamingResponseDefaultTypeInternal() {}
  union {
    RespondStartVideoStreamingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStartVideoStreamingResponseDefaultTypeInternal _RespondStartVideoStreamingResponse_default_instance_;

inline constexpr RespondStartVideoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondStartVideoResponse::RespondStartVideoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondStartVideoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondStartVideoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondStartVideoResponseDefaultTypeInternal() {}
  union {
    RespondStartVideoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondStartVideoResponseDefaultTypeInternal _RespondStartVideoResponse_default_instance_;

inline constexpr RespondSettingsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondSettingsResponse::RespondSettingsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondSettingsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondSettingsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondSettingsResponseDefaultTypeInternal() {}
  union {
    RespondSettingsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondSettingsResponseDefaultTypeInternal _RespondSettingsResponse_default_instance_;

inline constexpr RespondSettingsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        settings_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondSettingsRequest::RespondSettingsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondSettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondSettingsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondSettingsRequestDefaultTypeInternal() {}
  union {
    RespondSettingsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondSettingsRequestDefaultTypeInternal _RespondSettingsRequest_default_instance_;

inline constexpr RespondSetModeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondSetModeResponse::RespondSetModeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondSetModeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondSetModeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondSetModeResponseDefaultTypeInternal() {}
  union {
    RespondSetModeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondSetModeResponseDefaultTypeInternal _RespondSetModeResponse_default_instance_;

inline constexpr RespondResetSettingsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondResetSettingsResponse::RespondResetSettingsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondResetSettingsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondResetSettingsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondResetSettingsResponseDefaultTypeInternal() {}
  union {
    RespondResetSettingsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondResetSettingsResponseDefaultTypeInternal _RespondResetSettingsResponse_default_instance_;

inline constexpr RespondFormatStorageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondFormatStorageResponse::RespondFormatStorageResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondFormatStorageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondFormatStorageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondFormatStorageResponseDefaultTypeInternal() {}
  union {
    RespondFormatStorageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondFormatStorageResponseDefaultTypeInternal _RespondFormatStorageResponse_default_instance_;

inline constexpr RespondCaptureStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        camera_server_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RespondCaptureStatusResponse::RespondCaptureStatusResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondCaptureStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondCaptureStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondCaptureStatusResponseDefaultTypeInternal() {}
  union {
    RespondCaptureStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondCaptureStatusResponseDefaultTypeInternal _RespondCaptureStatusResponse_default_instance_;

inline constexpr RespondCaptureStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        capture_status_{nullptr},
        capture_status_feedback_{static_cast< ::mavsdk::rpc::camera_server::CameraFeedback >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RespondCaptureStatusRequest::RespondCaptureStatusRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondCaptureStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondCaptureStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondCaptureStatusRequestDefaultTypeInternal() {}
  union {
    RespondCaptureStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondCaptureStatusRequestDefaultTypeInternal _RespondCaptureStatusRequest_default_instance_;

inline constexpr CaptureInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        file_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr},
        attitude_quaternion_{nullptr},
        time_utc_us_{::uint64_t{0u}},
        is_success_{false},
        index_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CaptureInfo::CaptureInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CaptureInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CaptureInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CaptureInfoDefaultTypeInternal() {}
  union {
    CaptureInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CaptureInfoDefaultTypeInternal _CaptureInfo_default_instance_;

inline constexpr SetVideoStreamInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : video_stream_infos_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetVideoStreamInfoRequest::SetVideoStreamInfoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetVideoStreamInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetVideoStreamInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetVideoStreamInfoRequestDefaultTypeInternal() {}
  union {
    SetVideoStreamInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetVideoStreamInfoRequestDefaultTypeInternal _SetVideoStreamInfoRequest_default_instance_;

inline constexpr RespondTakePhotoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        capture_info_{nullptr},
        take_photo_feedback_{static_cast< ::mavsdk::rpc::camera_server::CameraFeedback >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RespondTakePhotoRequest::RespondTakePhotoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RespondTakePhotoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespondTakePhotoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespondTakePhotoRequestDefaultTypeInternal() {}
  union {
    RespondTakePhotoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespondTakePhotoRequestDefaultTypeInternal _RespondTakePhotoRequest_default_instance_;
}  // namespace camera_server
}  // namespace rpc
}  // namespace mavsdk
static ::_pb::Metadata file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[68];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[10];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_camera_5fserver_2fcamera_5fserver_2eproto = nullptr;
const ::uint32_t TableStruct_camera_5fserver_2fcamera_5fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInformationRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInformationRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInformationRequest, _impl_.information_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInformationResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInformationResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInformationResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetVideoStreamInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetVideoStreamInfoRequest, _impl_.video_stream_infos_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetVideoStreamInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetVideoStreamInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetVideoStreamInfoResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInProgressRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInProgressRequest, _impl_.in_progress_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInProgressResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInProgressResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetInProgressResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeTakePhotoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TakePhotoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::TakePhotoResponse, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTakePhotoRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTakePhotoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTakePhotoRequest, _impl_.take_photo_feedback_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTakePhotoRequest, _impl_.capture_info_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTakePhotoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTakePhotoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondTakePhotoResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeStartVideoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StartVideoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StartVideoResponse, _impl_.stream_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoRequest, _impl_.start_video_feedback_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeStopVideoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StopVideoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StopVideoResponse, _impl_.stream_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoRequest, _impl_.stop_video_feedback_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeStartVideoStreamingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StartVideoStreamingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StartVideoStreamingResponse, _impl_.stream_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoStreamingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoStreamingRequest, _impl_.start_video_streaming_feedback_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoStreamingResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoStreamingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStartVideoStreamingResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeStopVideoStreamingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StopVideoStreamingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StopVideoStreamingResponse, _impl_.stream_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoStreamingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoStreamingRequest, _impl_.stop_video_streaming_feedback_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoStreamingResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoStreamingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStopVideoStreamingResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeSetModeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetModeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SetModeResponse, _impl_.mode_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSetModeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSetModeRequest, _impl_.set_mode_feedback_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSetModeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSetModeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSetModeResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeStorageInformationRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformationResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformationResponse, _impl_.storage_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStorageInformationRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStorageInformationRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStorageInformationRequest, _impl_.storage_information_feedback_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStorageInformationRequest, _impl_.storage_information_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStorageInformationResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStorageInformationResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondStorageInformationResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeCaptureStatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatusResponse, _impl_.reserved_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondCaptureStatusRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondCaptureStatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondCaptureStatusRequest, _impl_.capture_status_feedback_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondCaptureStatusRequest, _impl_.capture_status_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondCaptureStatusResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondCaptureStatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondCaptureStatusResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeFormatStorageRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::FormatStorageResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::FormatStorageResponse, _impl_.storage_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondFormatStorageRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondFormatStorageRequest, _impl_.format_storage_feedback_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondFormatStorageResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondFormatStorageResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondFormatStorageResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeResetSettingsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ResetSettingsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ResetSettingsResponse, _impl_.reserved_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondResetSettingsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondResetSettingsRequest, _impl_.reset_settings_feedback_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondResetSettingsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondResetSettingsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondResetSettingsResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeSettingsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SettingsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SettingsResponse, _impl_.reserved_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSettingsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSettingsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSettingsRequest, _impl_.settings_),
    0,
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSettingsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSettingsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSettingsResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeSystemTimeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SystemTimeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SystemTimeResponse, _impl_.utc_time_in_ms_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSystemTimeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSystemTimeRequest, _impl_.system_time_feedback_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSystemTimeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSystemTimeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondSystemTimeResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::SubscribeZoomRangeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ZoomRangeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::ZoomRangeResponse, _impl_.factor_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomRangeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomRangeRequest, _impl_.zoom_range_feedback_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomRangeResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomRangeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::RespondZoomRangeResponse, _impl_.camera_server_result_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.vendor_name_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.model_name_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.firmware_version_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.focal_length_mm_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.horizontal_sensor_size_mm_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.vertical_sensor_size_mm_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.horizontal_resolution_px_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.vertical_resolution_px_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.lens_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.definition_file_version_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.definition_file_uri_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Information, _impl_.camera_cap_flags_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamSettings, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamSettings, _impl_.frame_rate_hz_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamSettings, _impl_.horizontal_resolution_pix_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamSettings, _impl_.vertical_resolution_pix_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamSettings, _impl_.bit_rate_b_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamSettings, _impl_.rotation_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamSettings, _impl_.uri_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamSettings, _impl_.horizontal_fov_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamInfo, _impl_.stream_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamInfo, _impl_.settings_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamInfo, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::VideoStreamInfo, _impl_.spectrum_),
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Position, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Position, _impl_.latitude_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Position, _impl_.longitude_deg_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Position, _impl_.absolute_altitude_m_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Position, _impl_.relative_altitude_m_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Quaternion, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Quaternion, _impl_.w_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Quaternion, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Quaternion, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Quaternion, _impl_.z_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_.attitude_quaternion_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_.time_utc_us_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_.is_success_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureInfo, _impl_.file_url_),
    0,
    1,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CameraServerResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CameraServerResult, _impl_.result_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CameraServerResult, _impl_.result_str_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.used_storage_mib_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.available_storage_mib_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.total_storage_mib_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.storage_status_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.storage_id_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.storage_type_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.read_speed_mib_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::StorageInformation, _impl_.write_speed_mib_s_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _impl_.image_interval_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _impl_.recording_time_s_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _impl_.available_capacity_mib_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _impl_.image_status_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _impl_.video_status_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::CaptureStatus, _impl_.image_count_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Settings, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Settings, _impl_.mode_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Settings, _impl_.zoom_level_),
    PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::camera_server::Settings, _impl_.focus_level_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::mavsdk::rpc::camera_server::SetInformationRequest)},
        {10, 19, -1, sizeof(::mavsdk::rpc::camera_server::SetInformationResponse)},
        {20, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetVideoStreamInfoRequest)},
        {29, 38, -1, sizeof(::mavsdk::rpc::camera_server::SetVideoStreamInfoResponse)},
        {39, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetInProgressRequest)},
        {48, 57, -1, sizeof(::mavsdk::rpc::camera_server::SetInProgressResponse)},
        {58, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeTakePhotoRequest)},
        {66, -1, -1, sizeof(::mavsdk::rpc::camera_server::TakePhotoResponse)},
        {75, 85, -1, sizeof(::mavsdk::rpc::camera_server::RespondTakePhotoRequest)},
        {87, 96, -1, sizeof(::mavsdk::rpc::camera_server::RespondTakePhotoResponse)},
        {97, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeStartVideoRequest)},
        {105, -1, -1, sizeof(::mavsdk::rpc::camera_server::StartVideoResponse)},
        {114, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStartVideoRequest)},
        {123, 132, -1, sizeof(::mavsdk::rpc::camera_server::RespondStartVideoResponse)},
        {133, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeStopVideoRequest)},
        {141, -1, -1, sizeof(::mavsdk::rpc::camera_server::StopVideoResponse)},
        {150, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStopVideoRequest)},
        {159, 168, -1, sizeof(::mavsdk::rpc::camera_server::RespondStopVideoResponse)},
        {169, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeStartVideoStreamingRequest)},
        {177, -1, -1, sizeof(::mavsdk::rpc::camera_server::StartVideoStreamingResponse)},
        {186, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStartVideoStreamingRequest)},
        {195, 204, -1, sizeof(::mavsdk::rpc::camera_server::RespondStartVideoStreamingResponse)},
        {205, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeStopVideoStreamingRequest)},
        {213, -1, -1, sizeof(::mavsdk::rpc::camera_server::StopVideoStreamingResponse)},
        {222, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondStopVideoStreamingRequest)},
        {231, 240, -1, sizeof(::mavsdk::rpc::camera_server::RespondStopVideoStreamingResponse)},
        {241, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeSetModeRequest)},
        {249, -1, -1, sizeof(::mavsdk::rpc::camera_server::SetModeResponse)},
        {258, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondSetModeRequest)},
        {267, 276, -1, sizeof(::mavsdk::rpc::camera_server::RespondSetModeResponse)},
        {277, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeStorageInformationRequest)},
        {285, -1, -1, sizeof(::mavsdk::rpc::camera_server::StorageInformationResponse)},
        {294, 304, -1, sizeof(::mavsdk::rpc::camera_server::RespondStorageInformationRequest)},
        {306, 315, -1, sizeof(::mavsdk::rpc::camera_server::RespondStorageInformationResponse)},
        {316, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeCaptureStatusRequest)},
        {324, -1, -1, sizeof(::mavsdk::rpc::camera_server::CaptureStatusResponse)},
        {333, 343, -1, sizeof(::mavsdk::rpc::camera_server::RespondCaptureStatusRequest)},
        {345, 354, -1, sizeof(::mavsdk::rpc::camera_server::RespondCaptureStatusResponse)},
        {355, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeFormatStorageRequest)},
        {363, -1, -1, sizeof(::mavsdk::rpc::camera_server::FormatStorageResponse)},
        {372, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondFormatStorageRequest)},
        {381, 390, -1, sizeof(::mavsdk::rpc::camera_server::RespondFormatStorageResponse)},
        {391, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeResetSettingsRequest)},
        {399, -1, -1, sizeof(::mavsdk::rpc::camera_server::ResetSettingsResponse)},
        {408, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondResetSettingsRequest)},
        {417, 426, -1, sizeof(::mavsdk::rpc::camera_server::RespondResetSettingsResponse)},
        {427, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeSettingsRequest)},
        {435, -1, -1, sizeof(::mavsdk::rpc::camera_server::SettingsResponse)},
        {444, 453, -1, sizeof(::mavsdk::rpc::camera_server::RespondSettingsRequest)},
        {454, 463, -1, sizeof(::mavsdk::rpc::camera_server::RespondSettingsResponse)},
        {464, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeSystemTimeRequest)},
        {472, -1, -1, sizeof(::mavsdk::rpc::camera_server::SystemTimeResponse)},
        {481, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondSystemTimeRequest)},
        {490, 499, -1, sizeof(::mavsdk::rpc::camera_server::RespondSystemTimeResponse)},
        {500, -1, -1, sizeof(::mavsdk::rpc::camera_server::SubscribeZoomRangeRequest)},
        {508, -1, -1, sizeof(::mavsdk::rpc::camera_server::ZoomRangeResponse)},
        {517, -1, -1, sizeof(::mavsdk::rpc::camera_server::RespondZoomRangeRequest)},
        {526, 535, -1, sizeof(::mavsdk::rpc::camera_server::RespondZoomRangeResponse)},
        {536, -1, -1, sizeof(::mavsdk::rpc::camera_server::Information)},
        {556, -1, -1, sizeof(::mavsdk::rpc::camera_server::VideoStreamSettings)},
        {571, 583, -1, sizeof(::mavsdk::rpc::camera_server::VideoStreamInfo)},
        {587, -1, -1, sizeof(::mavsdk::rpc::camera_server::Position)},
        {599, -1, -1, sizeof(::mavsdk::rpc::camera_server::Quaternion)},
        {611, 625, -1, sizeof(::mavsdk::rpc::camera_server::CaptureInfo)},
        {631, -1, -1, sizeof(::mavsdk::rpc::camera_server::CameraServerResult)},
        {641, -1, -1, sizeof(::mavsdk::rpc::camera_server::StorageInformation)},
        {657, -1, -1, sizeof(::mavsdk::rpc::camera_server::CaptureStatus)},
        {671, -1, -1, sizeof(::mavsdk::rpc::camera_server::Settings)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mavsdk::rpc::camera_server::_SetInformationRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SetInformationResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SetVideoStreamInfoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SetVideoStreamInfoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SetInProgressRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SetInProgressResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeTakePhotoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_TakePhotoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondTakePhotoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondTakePhotoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeStartVideoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_StartVideoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondStartVideoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondStartVideoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeStopVideoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_StopVideoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondStopVideoRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondStopVideoResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeStartVideoStreamingRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_StartVideoStreamingResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondStartVideoStreamingRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondStartVideoStreamingResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeStopVideoStreamingRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_StopVideoStreamingResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondStopVideoStreamingRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondStopVideoStreamingResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeSetModeRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SetModeResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondSetModeRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondSetModeResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeStorageInformationRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_StorageInformationResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondStorageInformationRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondStorageInformationResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeCaptureStatusRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_CaptureStatusResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondCaptureStatusRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondCaptureStatusResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeFormatStorageRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_FormatStorageResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondFormatStorageRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondFormatStorageResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeResetSettingsRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_ResetSettingsResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondResetSettingsRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondResetSettingsResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeSettingsRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SettingsResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondSettingsRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondSettingsResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeSystemTimeRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SystemTimeResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondSystemTimeRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondSystemTimeResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_SubscribeZoomRangeRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_ZoomRangeResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondZoomRangeRequest_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_RespondZoomRangeResponse_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_Information_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_VideoStreamSettings_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_VideoStreamInfo_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_Position_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_Quaternion_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_CaptureInfo_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_CameraServerResult_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_StorageInformation_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_CaptureStatus_default_instance_._instance,
    &::mavsdk::rpc::camera_server::_Settings_default_instance_._instance,
};
const char descriptor_table_protodef_camera_5fserver_2fcamera_5fserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n!camera_server/camera_server.proto\022\030mav"
    "sdk.rpc.camera_server\032\024mavsdk_options.pr"
    "oto\"S\n\025SetInformationRequest\022:\n\013informat"
    "ion\030\001 \001(\0132%.mavsdk.rpc.camera_server.Inf"
    "ormation\"d\n\026SetInformationResponse\022J\n\024ca"
    "mera_server_result\030\001 \001(\0132,.mavsdk.rpc.ca"
    "mera_server.CameraServerResult\"b\n\031SetVid"
    "eoStreamInfoRequest\022E\n\022video_stream_info"
    "s\030\001 \003(\0132).mavsdk.rpc.camera_server.Video"
    "StreamInfo\"h\n\032SetVideoStreamInfoResponse"
    "\022J\n\024camera_server_result\030\001 \001(\0132,.mavsdk."
    "rpc.camera_server.CameraServerResult\"+\n\024"
    "SetInProgressRequest\022\023\n\013in_progress\030\001 \001("
    "\010\"c\n\025SetInProgressResponse\022J\n\024camera_ser"
    "ver_result\030\001 \001(\0132,.mavsdk.rpc.camera_ser"
    "ver.CameraServerResult\"\033\n\031SubscribeTakeP"
    "hotoRequest\"\"\n\021TakePhotoResponse\022\r\n\005inde"
    "x\030\001 \001(\005\"\235\001\n\027RespondTakePhotoRequest\022E\n\023t"
    "ake_photo_feedback\030\001 \001(\0162(.mavsdk.rpc.ca"
    "mera_server.CameraFeedback\022;\n\014capture_in"
    "fo\030\002 \001(\0132%.mavsdk.rpc.camera_server.Capt"
    "ureInfo\"f\n\030RespondTakePhotoResponse\022J\n\024c"
    "amera_server_result\030\001 \001(\0132,.mavsdk.rpc.c"
    "amera_server.CameraServerResult\"\034\n\032Subsc"
    "ribeStartVideoRequest\"\'\n\022StartVideoRespo"
    "nse\022\021\n\tstream_id\030\001 \001(\005\"b\n\030RespondStartVi"
    "deoRequest\022F\n\024start_video_feedback\030\001 \001(\016"
    "2(.mavsdk.rpc.camera_server.CameraFeedba"
    "ck\"g\n\031RespondStartVideoResponse\022J\n\024camer"
    "a_server_result\030\001 \001(\0132,.mavsdk.rpc.camer"
    "a_server.CameraServerResult\"\033\n\031Subscribe"
    "StopVideoRequest\"&\n\021StopVideoResponse\022\021\n"
    "\tstream_id\030\001 \001(\005\"`\n\027RespondStopVideoRequ"
    "est\022E\n\023stop_video_feedback\030\001 \001(\0162(.mavsd"
    "k.rpc.camera_server.CameraFeedback\"f\n\030Re"
    "spondStopVideoResponse\022J\n\024camera_server_"
    "result\030\001 \001(\0132,.mavsdk.rpc.camera_server."
    "CameraServerResult\"%\n#SubscribeStartVide"
    "oStreamingRequest\"0\n\033StartVideoStreaming"
    "Response\022\021\n\tstream_id\030\001 \001(\005\"u\n!RespondSt"
    "artVideoStreamingRequest\022P\n\036start_video_"
    "streaming_feedback\030\001 \001(\0162(.mavsdk.rpc.ca"
    "mera_server.CameraFeedback\"p\n\"RespondSta"
    "rtVideoStreamingResponse\022J\n\024camera_serve"
    "r_result\030\001 \001(\0132,.mavsdk.rpc.camera_serve"
    "r.CameraServerResult\"$\n\"SubscribeStopVid"
    "eoStreamingRequest\"/\n\032StopVideoStreaming"
    "Response\022\021\n\tstream_id\030\001 \001(\005\"s\n RespondSt"
    "opVideoStreamingRequest\022O\n\035stop_video_st"
    "reaming_feedback\030\001 \001(\0162(.mavsdk.rpc.came"
    "ra_server.CameraFeedback\"o\n!RespondStopV"
    "ideoStreamingResponse\022J\n\024camera_server_r"
    "esult\030\001 \001(\0132,.mavsdk.rpc.camera_server.C"
    "ameraServerResult\"\031\n\027SubscribeSetModeReq"
    "uest\"\?\n\017SetModeResponse\022,\n\004mode\030\001 \001(\0162\036."
    "mavsdk.rpc.camera_server.Mode\"\\\n\025Respond"
    "SetModeRequest\022C\n\021set_mode_feedback\030\001 \001("
    "\0162(.mavsdk.rpc.camera_server.CameraFeedb"
    "ack\"d\n\026RespondSetModeResponse\022J\n\024camera_"
    "server_result\030\001 \001(\0132,.mavsdk.rpc.camera_"
    "server.CameraServerResult\"$\n\"SubscribeSt"
    "orageInformationRequest\"0\n\032StorageInform"
    "ationResponse\022\022\n\nstorage_id\030\001 \001(\005\"\275\001\n Re"
    "spondStorageInformationRequest\022N\n\034storag"
    "e_information_feedback\030\001 \001(\0162(.mavsdk.rp"
    "c.camera_server.CameraFeedback\022I\n\023storag"
    "e_information\030\002 \001(\0132,.mavsdk.rpc.camera_"
    "server.StorageInformation\"o\n!RespondStor"
    "ageInformationResponse\022J\n\024camera_server_"
    "result\030\001 \001(\0132,.mavsdk.rpc.camera_server."
    "CameraServerResult\"\037\n\035SubscribeCaptureSt"
    "atusRequest\")\n\025CaptureStatusResponse\022\020\n\010"
    "reserved\030\001 \001(\005\"\251\001\n\033RespondCaptureStatusR"
    "equest\022I\n\027capture_status_feedback\030\001 \001(\0162"
    "(.mavsdk.rpc.camera_server.CameraFeedbac"
    "k\022\?\n\016capture_status\030\002 \001(\0132\'.mavsdk.rpc.c"
    "amera_server.CaptureStatus\"j\n\034RespondCap"
    "tureStatusResponse\022J\n\024camera_server_resu"
    "lt\030\001 \001(\0132,.mavsdk.rpc.camera_server.Came"
    "raServerResult\"\037\n\035SubscribeFormatStorage"
    "Request\"+\n\025FormatStorageResponse\022\022\n\nstor"
    "age_id\030\001 \001(\005\"h\n\033RespondFormatStorageRequ"
    "est\022I\n\027format_storage_feedback\030\001 \001(\0162(.m"
    "avsdk.rpc.camera_server.CameraFeedback\"j"
    "\n\034RespondFormatStorageResponse\022J\n\024camera"
    "_server_result\030\001 \001(\0132,.mavsdk.rpc.camera"
    "_server.CameraServerResult\"\037\n\035SubscribeR"
    "esetSettingsRequest\")\n\025ResetSettingsResp"
    "onse\022\020\n\010reserved\030\001 \001(\005\"h\n\033RespondResetSe"
    "ttingsRequest\022I\n\027reset_settings_feedback"
    "\030\001 \001(\0162(.mavsdk.rpc.camera_server.Camera"
    "Feedback\"j\n\034RespondResetSettingsResponse"
    "\022J\n\024camera_server_result\030\001 \001(\0132,.mavsdk."
    "rpc.camera_server.CameraServerResult\"\032\n\030"
    "SubscribeSettingsRequest\"$\n\020SettingsResp"
    "onse\022\020\n\010reserved\030\001 \001(\005\"N\n\026RespondSetting"
    "sRequest\0224\n\010settings\030\001 \001(\0132\".mavsdk.rpc."
    "camera_server.Settings\"e\n\027RespondSetting"
    "sResponse\022J\n\024camera_server_result\030\001 \001(\0132"
    ",.mavsdk.rpc.camera_server.CameraServerR"
    "esult\"\034\n\032SubscribeSystemTimeRequest\",\n\022S"
    "ystemTimeResponse\022\026\n\016utc_time_in_ms\030\001 \001("
    "\003\"b\n\030RespondSystemTimeRequest\022F\n\024system_"
    "time_feedback\030\001 \001(\0162(.mavsdk.rpc.camera_"
    "server.CameraFeedback\"g\n\031RespondSystemTi"
    "meResponse\022J\n\024camera_server_result\030\001 \001(\013"
    "2,.mavsdk.rpc.camera_server.CameraServer"
    "Result\"\033\n\031SubscribeZoomRangeRequest\"#\n\021Z"
    "oomRangeResponse\022\016\n\006factor\030\001 \001(\002\"`\n\027Resp"
    "ondZoomRangeRequest\022E\n\023zoom_range_feedba"
    "ck\030\001 \001(\0162(.mavsdk.rpc.camera_server.Came"
    "raFeedback\"f\n\030RespondZoomRangeResponse\022J"
    "\n\024camera_server_result\030\001 \001(\0132,.mavsdk.rp"
    "c.camera_server.CameraServerResult\"\227\007\n\013I"
    "nformation\022\023\n\013vendor_name\030\001 \001(\t\022\022\n\nmodel"
    "_name\030\002 \001(\t\022\030\n\020firmware_version\030\003 \001(\t\022\027\n"
    "\017focal_length_mm\030\004 \001(\002\022!\n\031horizontal_sen"
    "sor_size_mm\030\005 \001(\002\022\037\n\027vertical_sensor_siz"
    "e_mm\030\006 \001(\002\022 \n\030horizontal_resolution_px\030\007"
    " \001(\r\022\036\n\026vertical_resolution_px\030\010 \001(\r\022\017\n\007"
    "lens_id\030\t \001(\r\022\037\n\027definition_file_version"
    "\030\n \001(\r\022\033\n\023definition_file_uri\030\013 \001(\t\022N\n\020c"
    "amera_cap_flags\030\014 \003(\01624.mavsdk.rpc.camer"
    "a_server.Information.CameraCapFlags\"\206\004\n\016"
    "CameraCapFlags\022\"\n\036CAMERA_CAP_FLAGS_CAPTU"
    "RE_VIDEO\020\000\022\"\n\036CAMERA_CAP_FLAGS_CAPTURE_I"
    "MAGE\020\001\022\036\n\032CAMERA_CAP_FLAGS_HAS_MODES\020\002\0224"
    "\n0CAMERA_CAP_FLAGS_CAN_CAPTURE_IMAGE_IN_"
    "VIDEO_MODE\020\003\0224\n0CAMERA_CAP_FLAGS_CAN_CAP"
    "TURE_VIDEO_IN_IMAGE_MODE\020\004\022*\n&CAMERA_CAP"
    "_FLAGS_HAS_IMAGE_SURVEY_MODE\020\005\022#\n\037CAMERA"
    "_CAP_FLAGS_HAS_BASIC_ZOOM\020\006\022$\n CAMERA_CA"
    "P_FLAGS_HAS_BASIC_FOCUS\020\007\022%\n!CAMERA_CAP_"
    "FLAGS_HAS_VIDEO_STREAM\020\010\022\'\n#CAMERA_CAP_F"
    "LAGS_HAS_TRACKING_POINT\020\t\022+\n\'CAMERA_CAP_"
    "FLAGS_HAS_TRACKING_RECTANGLE\020\n\022,\n(CAMERA"
    "_CAP_FLAGS_HAS_TRACKING_GEO_STATUS\020\013\"\305\001\n"
    "\023VideoStreamSettings\022\025\n\rframe_rate_hz\030\001 "
    "\001(\002\022!\n\031horizontal_resolution_pix\030\002 \001(\r\022\037"
    "\n\027vertical_resolution_pix\030\003 \001(\r\022\024\n\014bit_r"
    "ate_b_s\030\004 \001(\r\022\024\n\014rotation_deg\030\005 \001(\r\022\013\n\003u"
    "ri\030\006 \001(\t\022\032\n\022horizontal_fov_deg\030\007 \001(\002\"\352\003\n"
    "\017VideoStreamInfo\022\021\n\tstream_id\030\001 \001(\005\022\?\n\010s"
    "ettings\030\002 \001(\0132-.mavsdk.rpc.camera_server"
    ".VideoStreamSettings\022K\n\006status\030\003 \001(\0162;.m"
    "avsdk.rpc.camera_server.VideoStreamInfo."
    "VideoStreamStatus\022O\n\010spectrum\030\004 \001(\0162=.ma"
    "vsdk.rpc.camera_server.VideoStreamInfo.V"
    "ideoStreamSpectrum\"]\n\021VideoStreamStatus\022"
    "#\n\037VIDEO_STREAM_STATUS_NOT_RUNNING\020\000\022#\n\037"
    "VIDEO_STREAM_STATUS_IN_PROGRESS\020\001\"\205\001\n\023Vi"
    "deoStreamSpectrum\022!\n\035VIDEO_STREAM_SPECTR"
    "UM_UNKNOWN\020\000\022\'\n#VIDEO_STREAM_SPECTRUM_VI"
    "SIBLE_LIGHT\020\001\022\"\n\036VIDEO_STREAM_SPECTRUM_I"
    "NFRARED\020\002\"q\n\010Position\022\024\n\014latitude_deg\030\001 "
    "\001(\001\022\025\n\rlongitude_deg\030\002 \001(\001\022\033\n\023absolute_a"
    "ltitude_m\030\003 \001(\002\022\033\n\023relative_altitude_m\030\004"
    " \001(\002\"8\n\nQuaternion\022\t\n\001w\030\001 \001(\002\022\t\n\001x\030\002 \001(\002"
    "\022\t\n\001y\030\003 \001(\002\022\t\n\001z\030\004 \001(\002\"\320\001\n\013CaptureInfo\0224"
    "\n\010position\030\001 \001(\0132\".mavsdk.rpc.camera_ser"
    "ver.Position\022A\n\023attitude_quaternion\030\002 \001("
    "\0132$.mavsdk.rpc.camera_server.Quaternion\022"
    "\023\n\013time_utc_us\030\003 \001(\004\022\022\n\nis_success\030\004 \001(\010"
    "\022\r\n\005index\030\005 \001(\005\022\020\n\010file_url\030\006 \001(\t\"\263\002\n\022Ca"
    "meraServerResult\022C\n\006result\030\001 \001(\01623.mavsd"
    "k.rpc.camera_server.CameraServerResult.R"
    "esult\022\022\n\nresult_str\030\002 \001(\t\"\303\001\n\006Result\022\022\n\016"
    "RESULT_UNKNOWN\020\000\022\022\n\016RESULT_SUCCESS\020\001\022\026\n\022"
    "RESULT_IN_PROGRESS\020\002\022\017\n\013RESULT_BUSY\020\003\022\021\n"
    "\rRESULT_DENIED\020\004\022\020\n\014RESULT_ERROR\020\005\022\022\n\016RE"
    "SULT_TIMEOUT\020\006\022\031\n\025RESULT_WRONG_ARGUMENT\020"
    "\007\022\024\n\020RESULT_NO_SYSTEM\020\010\"\214\005\n\022StorageInfor"
    "mation\022\030\n\020used_storage_mib\030\001 \001(\002\022\035\n\025avai"
    "lable_storage_mib\030\002 \001(\002\022\031\n\021total_storage"
    "_mib\030\003 \001(\002\022R\n\016storage_status\030\004 \001(\0162:.mav"
    "sdk.rpc.camera_server.StorageInformation"
    ".StorageStatus\022\022\n\nstorage_id\030\005 \001(\r\022N\n\014st"
    "orage_type\030\006 \001(\01628.mavsdk.rpc.camera_ser"
    "ver.StorageInformation.StorageType\022\030\n\020re"
    "ad_speed_mib_s\030\007 \001(\002\022\031\n\021write_speed_mib_"
    "s\030\010 \001(\002\"\221\001\n\rStorageStatus\022 \n\034STORAGE_STA"
    "TUS_NOT_AVAILABLE\020\000\022\036\n\032STORAGE_STATUS_UN"
    "FORMATTED\020\001\022\034\n\030STORAGE_STATUS_FORMATTED\020"
    "\002\022 \n\034STORAGE_STATUS_NOT_SUPPORTED\020\003\"\240\001\n\013"
    "StorageType\022\030\n\024STORAGE_TYPE_UNKNOWN\020\000\022\032\n"
    "\026STORAGE_TYPE_USB_STICK\020\001\022\023\n\017STORAGE_TYP"
    "E_SD\020\002\022\030\n\024STORAGE_TYPE_MICROSD\020\003\022\023\n\017STOR"
    "AGE_TYPE_HD\020\007\022\027\n\022STORAGE_TYPE_OTHER\020\376\001\"\356"
    "\003\n\rCaptureStatus\022\030\n\020image_interval_s\030\001 \001"
    "(\002\022\030\n\020recording_time_s\030\002 \001(\002\022\036\n\026availabl"
    "e_capacity_mib\030\003 \001(\002\022I\n\014image_status\030\004 \001"
    "(\01623.mavsdk.rpc.camera_server.CaptureSta"
    "tus.ImageStatus\022I\n\014video_status\030\005 \001(\01623."
    "mavsdk.rpc.camera_server.CaptureStatus.V"
    "ideoStatus\022\023\n\013image_count\030\006 \001(\005\"\221\001\n\013Imag"
    "eStatus\022\025\n\021IMAGE_STATUS_IDLE\020\000\022$\n IMAGE_"
    "STATUS_CAPTURE_IN_PROGRESS\020\001\022\036\n\032IMAGE_ST"
    "ATUS_INTERVAL_IDLE\020\002\022%\n!IMAGE_STATUS_INT"
    "ERVAL_IN_PROGRESS\020\003\"J\n\013VideoStatus\022\025\n\021VI"
    "DEO_STATUS_IDLE\020\000\022$\n VIDEO_STATUS_CAPTUR"
    "E_IN_PROGRESS\020\001\"a\n\010Settings\022,\n\004mode\030\001 \001("
    "\0162\036.mavsdk.rpc.camera_server.Mode\022\022\n\nzoo"
    "m_level\030\002 \001(\002\022\023\n\013focus_level\030\003 \001(\002*{\n\016Ca"
    "meraFeedback\022\033\n\027CAMERA_FEEDBACK_UNKNOWN\020"
    "\000\022\026\n\022CAMERA_FEEDBACK_OK\020\001\022\030\n\024CAMERA_FEED"
    "BACK_BUSY\020\002\022\032\n\026CAMERA_FEEDBACK_FAILED\020\003*"
    "8\n\004Mode\022\020\n\014MODE_UNKNOWN\020\000\022\016\n\nMODE_PHOTO\020"
    "\001\022\016\n\nMODE_VIDEO\020\0022\227\037\n\023CameraServerServic"
    "e\022y\n\016SetInformation\022/.mavsdk.rpc.camera_"
    "server.SetInformationRequest\0320.mavsdk.rp"
    "c.camera_server.SetInformationResponse\"\004"
    "\200\265\030\001\022\205\001\n\022SetVideoStreamInfo\0223.mavsdk.rpc"
    ".camera_server.SetVideoStreamInfoRequest"
    "\0324.mavsdk.rpc.camera_server.SetVideoStre"
    "amInfoResponse\"\004\200\265\030\001\022v\n\rSetInProgress\022.."
    "mavsdk.rpc.camera_server.SetInProgressRe"
    "quest\032/.mavsdk.rpc.camera_server.SetInPr"
    "ogressResponse\"\004\200\265\030\001\022~\n\022SubscribeTakePho"
    "to\0223.mavsdk.rpc.camera_server.SubscribeT"
    "akePhotoRequest\032+.mavsdk.rpc.camera_serv"
    "er.TakePhotoResponse\"\004\200\265\030\0000\001\022\177\n\020RespondT"
    "akePhoto\0221.mavsdk.rpc.camera_server.Resp"
    "ondTakePhotoRequest\0322.mavsdk.rpc.camera_"
    "server.RespondTakePhotoResponse\"\004\200\265\030\001\022\201\001"
    "\n\023SubscribeStartVideo\0224.mavsdk.rpc.camer"
    "a_server.SubscribeStartVideoRequest\032,.ma"
    "vsdk.rpc.camera_server.StartVideoRespons"
    "e\"\004\200\265\030\0000\001\022\202\001\n\021RespondStartVideo\0222.mavsdk"
    ".rpc.camera_server.RespondStartVideoRequ"
    "est\0323.mavsdk.rpc.camera_server.RespondSt"
    "artVideoResponse\"\004\200\265\030\001\022~\n\022SubscribeStopV"
    "ideo\0223.mavsdk.rpc.camera_server.Subscrib"
    "eStopVideoRequest\032+.mavsdk.rpc.camera_se"
    "rver.StopVideoResponse\"\004\200\265\030\0000\001\022\177\n\020Respon"
    "dStopVideo\0221.mavsdk.rpc.camera_server.Re"
    "spondStopVideoRequest\0322.mavsdk.rpc.camer"
    "a_server.RespondStopVideoResponse\"\004\200\265\030\001\022"
    "\234\001\n\034SubscribeStartVideoStreaming\022=.mavsd"
    "k.rpc.camera_server.SubscribeStartVideoS"
    "treamingRequest\0325.mavsdk.rpc.camera_serv"
    "er.StartVideoStreamingResponse\"\004\200\265\030\0000\001\022\235"
    "\001\n\032RespondStartVideoStreaming\022;.mavsdk.r"
    "pc.camera_server.RespondStartVideoStream"
    "ingRequest\032<.mavsdk.rpc.camera_server.Re"
    "spondStartVideoStreamingResponse\"\004\200\265\030\001\022\231"
    "\001\n\033SubscribeStopVideoStreaming\022<.mavsdk."
    "rpc.camera_server.SubscribeStopVideoStre"
    "amingRequest\0324.mavsdk.rpc.camera_server."
    "StopVideoStreamingResponse\"\004\200\265\030\0000\001\022\232\001\n\031R"
    "espondStopVideoStreaming\022:.mavsdk.rpc.ca"
    "mera_server.RespondStopVideoStreamingReq"
    "uest\032;.mavsdk.rpc.camera_server.RespondS"
    "topVideoStreamingResponse\"\004\200\265\030\001\022x\n\020Subsc"
    "ribeSetMode\0221.mavsdk.rpc.camera_server.S"
    "ubscribeSetModeRequest\032).mavsdk.rpc.came"
    "ra_server.SetModeResponse\"\004\200\265\030\0000\001\022y\n\016Res"
    "pondSetMode\022/.mavsdk.rpc.camera_server.R"
    "espondSetModeRequest\0320.mavsdk.rpc.camera"
    "_server.RespondSetModeResponse\"\004\200\265\030\001\022\231\001\n"
    "\033SubscribeStorageInformation\022<.mavsdk.rp"
    "c.camera_server.SubscribeStorageInformat"
    "ionRequest\0324.mavsdk.rpc.camera_server.St"
    "orageInformationResponse\"\004\200\265\030\0000\001\022\232\001\n\031Res"
    "pondStorageInformation\022:.mavsdk.rpc.came"
    "ra_server.RespondStorageInformationReque"
    "st\032;.mavsdk.rpc.camera_server.RespondSto"
    "rageInformationResponse\"\004\200\265\030\001\022\212\001\n\026Subscr"
    "ibeCaptureStatus\0227.mavsdk.rpc.camera_ser"
    "ver.SubscribeCaptureStatusRequest\032/.mavs"
    "dk.rpc.camera_server.CaptureStatusRespon"
    "se\"\004\200\265\030\0000\001\022\213\001\n\024RespondCaptureStatus\0225.ma"
    "vsdk.rpc.camera_server.RespondCaptureSta"
    "tusRequest\0326.mavsdk.rpc.camera_server.Re"
    "spondCaptureStatusResponse\"\004\200\265\030\001\022\212\001\n\026Sub"
    "scribeFormatStorage\0227.mavsdk.rpc.camera_"
    "server.SubscribeFormatStorageRequest\032/.m"
    "avsdk.rpc.camera_server.FormatStorageRes"
    "ponse\"\004\200\265\030\0000\001\022\213\001\n\024RespondFormatStorage\0225"
    ".mavsdk.rpc.camera_server.RespondFormatS"
    "torageRequest\0326.mavsdk.rpc.camera_server"
    ".RespondFormatStorageResponse\"\004\200\265\030\001\022\212\001\n\026"
    "SubscribeResetSettings\0227.mavsdk.rpc.came"
    "ra_server.SubscribeResetSettingsRequest\032"
    "/.mavsdk.rpc.camera_server.ResetSettings"
    "Response\"\004\200\265\030\0000\001\022\213\001\n\024RespondResetSetting"
    "s\0225.mavsdk.rpc.camera_server.RespondRese"
    "tSettingsRequest\0326.mavsdk.rpc.camera_ser"
    "ver.RespondResetSettingsResponse\"\004\200\265\030\001\022{"
    "\n\021SubscribeSettings\0222.mavsdk.rpc.camera_"
    "server.SubscribeSettingsRequest\032*.mavsdk"
    ".rpc.camera_server.SettingsResponse\"\004\200\265\030"
    "\0000\001\022|\n\017RespondSettings\0220.mavsdk.rpc.came"
    "ra_server.RespondSettingsRequest\0321.mavsd"
    "k.rpc.camera_server.RespondSettingsRespo"
    "nse\"\004\200\265\030\001\022\201\001\n\023SubscribeSystemTime\0224.mavs"
    "dk.rpc.camera_server.SubscribeSystemTime"
    "Request\032,.mavsdk.rpc.camera_server.Syste"
    "mTimeResponse\"\004\200\265\030\0000\001\022\202\001\n\021RespondSystemT"
    "ime\0222.mavsdk.rpc.camera_server.RespondSy"
    "stemTimeRequest\0323.mavsdk.rpc.camera_serv"
    "er.RespondSystemTimeResponse\"\004\200\265\030\001\022~\n\022Su"
    "bscribeZoomRange\0223.mavsdk.rpc.camera_ser"
    "ver.SubscribeZoomRangeRequest\032+.mavsdk.r"
    "pc.camera_server.ZoomRangeResponse\"\004\200\265\030\000"
    "0\001\022\177\n\020RespondZoomRange\0221.mavsdk.rpc.came"
    "ra_server.RespondZoomRangeRequest\0322.mavs"
    "dk.rpc.camera_server.RespondZoomRangeRes"
    "ponse\"\004\200\265\030\001B,\n\027io.mavsdk.camera_serverB\021"
    "CameraServerProtob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_deps[1] =
    {
        &::descriptor_table_mavsdk_5foptions_2eproto,
};
static ::absl::once_flag descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto = {
    false,
    false,
    12345,
    descriptor_table_protodef_camera_5fserver_2fcamera_5fserver_2eproto,
    "camera_server/camera_server.proto",
    &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
    descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_deps,
    1,
    68,
    schemas,
    file_default_instances,
    TableStruct_camera_5fserver_2fcamera_5fserver_2eproto::offsets,
    file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto,
    file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto,
    file_level_service_descriptors_camera_5fserver_2fcamera_5fserver_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter() {
  return &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_camera_5fserver_2fcamera_5fserver_2eproto(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
namespace mavsdk {
namespace rpc {
namespace camera_server {
const ::google::protobuf::EnumDescriptor* Information_CameraCapFlags_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Information_CameraCapFlags_internal_data_[] = {
    786432u, 0u, };
bool Information_CameraCapFlags_IsValid(int value) {
  return 0 <= value && value <= 11;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Information_CameraCapFlags Information::CAMERA_CAP_FLAGS_CAPTURE_VIDEO;
constexpr Information_CameraCapFlags Information::CAMERA_CAP_FLAGS_CAPTURE_IMAGE;
constexpr Information_CameraCapFlags Information::CAMERA_CAP_FLAGS_HAS_MODES;
constexpr Information_CameraCapFlags Information::CAMERA_CAP_FLAGS_CAN_CAPTURE_IMAGE_IN_VIDEO_MODE;
constexpr Information_CameraCapFlags Information::CAMERA_CAP_FLAGS_CAN_CAPTURE_VIDEO_IN_IMAGE_MODE;
constexpr Information_CameraCapFlags Information::CAMERA_CAP_FLAGS_HAS_IMAGE_SURVEY_MODE;
constexpr Information_CameraCapFlags Information::CAMERA_CAP_FLAGS_HAS_BASIC_ZOOM;
constexpr Information_CameraCapFlags Information::CAMERA_CAP_FLAGS_HAS_BASIC_FOCUS;
constexpr Information_CameraCapFlags Information::CAMERA_CAP_FLAGS_HAS_VIDEO_STREAM;
constexpr Information_CameraCapFlags Information::CAMERA_CAP_FLAGS_HAS_TRACKING_POINT;
constexpr Information_CameraCapFlags Information::CAMERA_CAP_FLAGS_HAS_TRACKING_RECTANGLE;
constexpr Information_CameraCapFlags Information::CAMERA_CAP_FLAGS_HAS_TRACKING_GEO_STATUS;
constexpr Information_CameraCapFlags Information::CameraCapFlags_MIN;
constexpr Information_CameraCapFlags Information::CameraCapFlags_MAX;
constexpr int Information::CameraCapFlags_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* VideoStreamInfo_VideoStreamStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t VideoStreamInfo_VideoStreamStatus_internal_data_[] = {
    131072u, 0u, };
bool VideoStreamInfo_VideoStreamStatus_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr VideoStreamInfo_VideoStreamStatus VideoStreamInfo::VIDEO_STREAM_STATUS_NOT_RUNNING;
constexpr VideoStreamInfo_VideoStreamStatus VideoStreamInfo::VIDEO_STREAM_STATUS_IN_PROGRESS;
constexpr VideoStreamInfo_VideoStreamStatus VideoStreamInfo::VideoStreamStatus_MIN;
constexpr VideoStreamInfo_VideoStreamStatus VideoStreamInfo::VideoStreamStatus_MAX;
constexpr int VideoStreamInfo::VideoStreamStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* VideoStreamInfo_VideoStreamSpectrum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t VideoStreamInfo_VideoStreamSpectrum_internal_data_[] = {
    196608u, 0u, };
bool VideoStreamInfo_VideoStreamSpectrum_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo::VIDEO_STREAM_SPECTRUM_UNKNOWN;
constexpr VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo::VIDEO_STREAM_SPECTRUM_VISIBLE_LIGHT;
constexpr VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo::VIDEO_STREAM_SPECTRUM_INFRARED;
constexpr VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo::VideoStreamSpectrum_MIN;
constexpr VideoStreamInfo_VideoStreamSpectrum VideoStreamInfo::VideoStreamSpectrum_MAX;
constexpr int VideoStreamInfo::VideoStreamSpectrum_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CameraServerResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t CameraServerResult_Result_internal_data_[] = {
    589824u, 0u, };
bool CameraServerResult_Result_IsValid(int value) {
  return 0 <= value && value <= 8;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CameraServerResult_Result CameraServerResult::RESULT_UNKNOWN;
constexpr CameraServerResult_Result CameraServerResult::RESULT_SUCCESS;
constexpr CameraServerResult_Result CameraServerResult::RESULT_IN_PROGRESS;
constexpr CameraServerResult_Result CameraServerResult::RESULT_BUSY;
constexpr CameraServerResult_Result CameraServerResult::RESULT_DENIED;
constexpr CameraServerResult_Result CameraServerResult::RESULT_ERROR;
constexpr CameraServerResult_Result CameraServerResult::RESULT_TIMEOUT;
constexpr CameraServerResult_Result CameraServerResult::RESULT_WRONG_ARGUMENT;
constexpr CameraServerResult_Result CameraServerResult::RESULT_NO_SYSTEM;
constexpr CameraServerResult_Result CameraServerResult::Result_MIN;
constexpr CameraServerResult_Result CameraServerResult::Result_MAX;
constexpr int CameraServerResult::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* StorageInformation_StorageStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t StorageInformation_StorageStatus_internal_data_[] = {
    262144u, 0u, };
bool StorageInformation_StorageStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr StorageInformation_StorageStatus StorageInformation::STORAGE_STATUS_NOT_AVAILABLE;
constexpr StorageInformation_StorageStatus StorageInformation::STORAGE_STATUS_UNFORMATTED;
constexpr StorageInformation_StorageStatus StorageInformation::STORAGE_STATUS_FORMATTED;
constexpr StorageInformation_StorageStatus StorageInformation::STORAGE_STATUS_NOT_SUPPORTED;
constexpr StorageInformation_StorageStatus StorageInformation::StorageStatus_MIN;
constexpr StorageInformation_StorageStatus StorageInformation::StorageStatus_MAX;
constexpr int StorageInformation::StorageStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* StorageInformation_StorageType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t StorageInformation_StorageType_internal_data_[] = {
    262144u, 65568u, 8u, 254u, };
bool StorageInformation_StorageType_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, StorageInformation_StorageType_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr StorageInformation_StorageType StorageInformation::STORAGE_TYPE_UNKNOWN;
constexpr StorageInformation_StorageType StorageInformation::STORAGE_TYPE_USB_STICK;
constexpr StorageInformation_StorageType StorageInformation::STORAGE_TYPE_SD;
constexpr StorageInformation_StorageType StorageInformation::STORAGE_TYPE_MICROSD;
constexpr StorageInformation_StorageType StorageInformation::STORAGE_TYPE_HD;
constexpr StorageInformation_StorageType StorageInformation::STORAGE_TYPE_OTHER;
constexpr StorageInformation_StorageType StorageInformation::StorageType_MIN;
constexpr StorageInformation_StorageType StorageInformation::StorageType_MAX;
constexpr int StorageInformation::StorageType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CaptureStatus_ImageStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t CaptureStatus_ImageStatus_internal_data_[] = {
    262144u, 0u, };
bool CaptureStatus_ImageStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CaptureStatus_ImageStatus CaptureStatus::IMAGE_STATUS_IDLE;
constexpr CaptureStatus_ImageStatus CaptureStatus::IMAGE_STATUS_CAPTURE_IN_PROGRESS;
constexpr CaptureStatus_ImageStatus CaptureStatus::IMAGE_STATUS_INTERVAL_IDLE;
constexpr CaptureStatus_ImageStatus CaptureStatus::IMAGE_STATUS_INTERVAL_IN_PROGRESS;
constexpr CaptureStatus_ImageStatus CaptureStatus::ImageStatus_MIN;
constexpr CaptureStatus_ImageStatus CaptureStatus::ImageStatus_MAX;
constexpr int CaptureStatus::ImageStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CaptureStatus_VideoStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t CaptureStatus_VideoStatus_internal_data_[] = {
    131072u, 0u, };
bool CaptureStatus_VideoStatus_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CaptureStatus_VideoStatus CaptureStatus::VIDEO_STATUS_IDLE;
constexpr CaptureStatus_VideoStatus CaptureStatus::VIDEO_STATUS_CAPTURE_IN_PROGRESS;
constexpr CaptureStatus_VideoStatus CaptureStatus::VideoStatus_MIN;
constexpr CaptureStatus_VideoStatus CaptureStatus::VideoStatus_MAX;
constexpr int CaptureStatus::VideoStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CameraFeedback_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t CameraFeedback_internal_data_[] = {
    262144u, 0u, };
bool CameraFeedback_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* Mode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto);
  return file_level_enum_descriptors_camera_5fserver_2fcamera_5fserver_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t Mode_internal_data_[] = {
    196608u, 0u, };
bool Mode_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class SetInformationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SetInformationRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetInformationRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::Information& information(const SetInformationRequest* msg);
  static void set_has_information(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::Information& SetInformationRequest::_Internal::information(const SetInformationRequest* msg) {
  return *msg->_impl_.information_;
}
SetInformationRequest::SetInformationRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetInformationRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetInformationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetInformationRequest::SetInformationRequest(
    ::google::protobuf::Arena* arena,
    const SetInformationRequest& from)
    : ::google::protobuf::Message(arena) {
  SetInformationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.information_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::Information>(arena, *from._impl_.information_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetInformationRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetInformationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetInformationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.information_ = {};
}
SetInformationRequest::~SetInformationRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetInformationRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetInformationRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.information_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetInformationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetInformationRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.information_ != nullptr);
    _impl_.information_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetInformationRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetInformationRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetInformationRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetInformationRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.Information information = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetInformationRequest, _impl_.information_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.Information information = 1;
    {PROTOBUF_FIELD_OFFSET(SetInformationRequest, _impl_.information_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::Information>()},
  }}, {{
  }},
};

::uint8_t* SetInformationRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetInformationRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.Information information = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::information(this),
        _Internal::information(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetInformationRequest)
  return target;
}

::size_t SetInformationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetInformationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.Information information = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.information_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetInformationRequest::_class_data_ = {
    SetInformationRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetInformationRequest::GetClassData() const {
  return &_class_data_;
}

void SetInformationRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetInformationRequest*>(&to_msg);
  auto& from = static_cast<const SetInformationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetInformationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_information()->::mavsdk::rpc::camera_server::Information::MergeFrom(
        from._internal_information());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetInformationRequest::CopyFrom(const SetInformationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetInformationRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetInformationRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetInformationRequest::InternalSwap(SetInformationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.information_, other->_impl_.information_);
}

::google::protobuf::Metadata SetInformationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[0]);
}
// ===================================================================

class SetInformationResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetInformationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetInformationResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const SetInformationResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& SetInformationResponse::_Internal::camera_server_result(const SetInformationResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
SetInformationResponse::SetInformationResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetInformationResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetInformationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetInformationResponse::SetInformationResponse(
    ::google::protobuf::Arena* arena,
    const SetInformationResponse& from)
    : ::google::protobuf::Message(arena) {
  SetInformationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetInformationResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetInformationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetInformationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
SetInformationResponse::~SetInformationResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetInformationResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetInformationResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetInformationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetInformationResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetInformationResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetInformationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetInformationResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetInformationResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetInformationResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetInformationResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* SetInformationResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetInformationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetInformationResponse)
  return target;
}

::size_t SetInformationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetInformationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetInformationResponse::_class_data_ = {
    SetInformationResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetInformationResponse::GetClassData() const {
  return &_class_data_;
}

void SetInformationResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetInformationResponse*>(&to_msg);
  auto& from = static_cast<const SetInformationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetInformationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetInformationResponse::CopyFrom(const SetInformationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetInformationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetInformationResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetInformationResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetInformationResponse::InternalSwap(SetInformationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata SetInformationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[1]);
}
// ===================================================================

class SetVideoStreamInfoRequest::_Internal {
 public:
};

SetVideoStreamInfoRequest::SetVideoStreamInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetVideoStreamInfoRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetVideoStreamInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : video_stream_infos_{visibility, arena, from.video_stream_infos_},
        _cached_size_{0} {}

SetVideoStreamInfoRequest::SetVideoStreamInfoRequest(
    ::google::protobuf::Arena* arena,
    const SetVideoStreamInfoRequest& from)
    : ::google::protobuf::Message(arena) {
  SetVideoStreamInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetVideoStreamInfoRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetVideoStreamInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : video_stream_infos_{visibility, arena},
        _cached_size_{0} {}

inline void SetVideoStreamInfoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SetVideoStreamInfoRequest::~SetVideoStreamInfoRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetVideoStreamInfoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetVideoStreamInfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetVideoStreamInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetVideoStreamInfoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.video_stream_infos_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetVideoStreamInfoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetVideoStreamInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetVideoStreamInfoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .mavsdk.rpc.camera_server.VideoStreamInfo video_stream_infos = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SetVideoStreamInfoRequest, _impl_.video_stream_infos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mavsdk.rpc.camera_server.VideoStreamInfo video_stream_infos = 1;
    {PROTOBUF_FIELD_OFFSET(SetVideoStreamInfoRequest, _impl_.video_stream_infos_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::VideoStreamInfo>()},
  }}, {{
  }},
};

::uint8_t* SetVideoStreamInfoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetVideoStreamInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .mavsdk.rpc.camera_server.VideoStreamInfo video_stream_infos = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_video_stream_infos_size()); i < n; i++) {
    const auto& repfield = this->_internal_video_stream_infos().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetVideoStreamInfoRequest)
  return target;
}

::size_t SetVideoStreamInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetVideoStreamInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.camera_server.VideoStreamInfo video_stream_infos = 1;
  total_size += 1UL * this->_internal_video_stream_infos_size();
  for (const auto& msg : this->_internal_video_stream_infos()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetVideoStreamInfoRequest::_class_data_ = {
    SetVideoStreamInfoRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetVideoStreamInfoRequest::GetClassData() const {
  return &_class_data_;
}

void SetVideoStreamInfoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetVideoStreamInfoRequest*>(&to_msg);
  auto& from = static_cast<const SetVideoStreamInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetVideoStreamInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_video_stream_infos()->MergeFrom(
      from._internal_video_stream_infos());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetVideoStreamInfoRequest::CopyFrom(const SetVideoStreamInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetVideoStreamInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetVideoStreamInfoRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetVideoStreamInfoRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetVideoStreamInfoRequest::InternalSwap(SetVideoStreamInfoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.video_stream_infos_.InternalSwap(&other->_impl_.video_stream_infos_);
}

::google::protobuf::Metadata SetVideoStreamInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[2]);
}
// ===================================================================

class SetVideoStreamInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetVideoStreamInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetVideoStreamInfoResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const SetVideoStreamInfoResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& SetVideoStreamInfoResponse::_Internal::camera_server_result(const SetVideoStreamInfoResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
SetVideoStreamInfoResponse::SetVideoStreamInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetVideoStreamInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetVideoStreamInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetVideoStreamInfoResponse::SetVideoStreamInfoResponse(
    ::google::protobuf::Arena* arena,
    const SetVideoStreamInfoResponse& from)
    : ::google::protobuf::Message(arena) {
  SetVideoStreamInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetVideoStreamInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetVideoStreamInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetVideoStreamInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
SetVideoStreamInfoResponse::~SetVideoStreamInfoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetVideoStreamInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetVideoStreamInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetVideoStreamInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetVideoStreamInfoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetVideoStreamInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetVideoStreamInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetVideoStreamInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetVideoStreamInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetVideoStreamInfoResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetVideoStreamInfoResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* SetVideoStreamInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetVideoStreamInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetVideoStreamInfoResponse)
  return target;
}

::size_t SetVideoStreamInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetVideoStreamInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetVideoStreamInfoResponse::_class_data_ = {
    SetVideoStreamInfoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetVideoStreamInfoResponse::GetClassData() const {
  return &_class_data_;
}

void SetVideoStreamInfoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetVideoStreamInfoResponse*>(&to_msg);
  auto& from = static_cast<const SetVideoStreamInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetVideoStreamInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetVideoStreamInfoResponse::CopyFrom(const SetVideoStreamInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetVideoStreamInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetVideoStreamInfoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetVideoStreamInfoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetVideoStreamInfoResponse::InternalSwap(SetVideoStreamInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata SetVideoStreamInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[3]);
}
// ===================================================================

class SetInProgressRequest::_Internal {
 public:
};

SetInProgressRequest::SetInProgressRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetInProgressRequest)
}
SetInProgressRequest::SetInProgressRequest(
    ::google::protobuf::Arena* arena, const SetInProgressRequest& from)
    : SetInProgressRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetInProgressRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetInProgressRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.in_progress_ = {};
}
SetInProgressRequest::~SetInProgressRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetInProgressRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetInProgressRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetInProgressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetInProgressRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.in_progress_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetInProgressRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetInProgressRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetInProgressRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool in_progress = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetInProgressRequest, _impl_.in_progress_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetInProgressRequest, _impl_.in_progress_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool in_progress = 1;
    {PROTOBUF_FIELD_OFFSET(SetInProgressRequest, _impl_.in_progress_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetInProgressRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetInProgressRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool in_progress = 1;
  if (this->_internal_in_progress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_in_progress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetInProgressRequest)
  return target;
}

::size_t SetInProgressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetInProgressRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool in_progress = 1;
  if (this->_internal_in_progress() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetInProgressRequest::_class_data_ = {
    SetInProgressRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetInProgressRequest::GetClassData() const {
  return &_class_data_;
}

void SetInProgressRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetInProgressRequest*>(&to_msg);
  auto& from = static_cast<const SetInProgressRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetInProgressRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_in_progress() != 0) {
    _this->_internal_set_in_progress(from._internal_in_progress());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetInProgressRequest::CopyFrom(const SetInProgressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetInProgressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetInProgressRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetInProgressRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetInProgressRequest::InternalSwap(SetInProgressRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.in_progress_, other->_impl_.in_progress_);
}

::google::protobuf::Metadata SetInProgressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[4]);
}
// ===================================================================

class SetInProgressResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SetInProgressResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SetInProgressResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const SetInProgressResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& SetInProgressResponse::_Internal::camera_server_result(const SetInProgressResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
SetInProgressResponse::SetInProgressResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetInProgressResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetInProgressResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SetInProgressResponse::SetInProgressResponse(
    ::google::protobuf::Arena* arena,
    const SetInProgressResponse& from)
    : ::google::protobuf::Message(arena) {
  SetInProgressResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SetInProgressResponse)
}
inline PROTOBUF_NDEBUG_INLINE SetInProgressResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetInProgressResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
SetInProgressResponse::~SetInProgressResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetInProgressResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetInProgressResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetInProgressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetInProgressResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetInProgressResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SetInProgressResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SetInProgressResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SetInProgressResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SetInProgressResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(SetInProgressResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* SetInProgressResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetInProgressResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetInProgressResponse)
  return target;
}

::size_t SetInProgressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetInProgressResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetInProgressResponse::_class_data_ = {
    SetInProgressResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetInProgressResponse::GetClassData() const {
  return &_class_data_;
}

void SetInProgressResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetInProgressResponse*>(&to_msg);
  auto& from = static_cast<const SetInProgressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetInProgressResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetInProgressResponse::CopyFrom(const SetInProgressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetInProgressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetInProgressResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetInProgressResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetInProgressResponse::InternalSwap(SetInProgressResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata SetInProgressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[5]);
}
// ===================================================================

class SubscribeTakePhotoRequest::_Internal {
 public:
};

SubscribeTakePhotoRequest::SubscribeTakePhotoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeTakePhotoRequest)
}
SubscribeTakePhotoRequest::SubscribeTakePhotoRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeTakePhotoRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeTakePhotoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeTakePhotoRequest)
}









::google::protobuf::Metadata SubscribeTakePhotoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[6]);
}
// ===================================================================

class TakePhotoResponse::_Internal {
 public:
};

TakePhotoResponse::TakePhotoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.TakePhotoResponse)
}
TakePhotoResponse::TakePhotoResponse(
    ::google::protobuf::Arena* arena, const TakePhotoResponse& from)
    : TakePhotoResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TakePhotoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TakePhotoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
TakePhotoResponse::~TakePhotoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.TakePhotoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TakePhotoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TakePhotoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.TakePhotoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TakePhotoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TakePhotoResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TakePhotoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TakePhotoResponse, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TakePhotoResponse, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 index = 1;
    {PROTOBUF_FIELD_OFFSET(TakePhotoResponse, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TakePhotoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.TakePhotoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.TakePhotoResponse)
  return target;
}

::size_t TakePhotoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.TakePhotoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TakePhotoResponse::_class_data_ = {
    TakePhotoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TakePhotoResponse::GetClassData() const {
  return &_class_data_;
}

void TakePhotoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TakePhotoResponse*>(&to_msg);
  auto& from = static_cast<const TakePhotoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.TakePhotoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TakePhotoResponse::CopyFrom(const TakePhotoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.TakePhotoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TakePhotoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TakePhotoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TakePhotoResponse::InternalSwap(TakePhotoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.index_, other->_impl_.index_);
}

::google::protobuf::Metadata TakePhotoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[7]);
}
// ===================================================================

class RespondTakePhotoRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondTakePhotoRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondTakePhotoRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CaptureInfo& capture_info(const RespondTakePhotoRequest* msg);
  static void set_has_capture_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CaptureInfo& RespondTakePhotoRequest::_Internal::capture_info(const RespondTakePhotoRequest* msg) {
  return *msg->_impl_.capture_info_;
}
RespondTakePhotoRequest::RespondTakePhotoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
}
inline PROTOBUF_NDEBUG_INLINE RespondTakePhotoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondTakePhotoRequest::RespondTakePhotoRequest(
    ::google::protobuf::Arena* arena,
    const RespondTakePhotoRequest& from)
    : ::google::protobuf::Message(arena) {
  RespondTakePhotoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.capture_info_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CaptureInfo>(arena, *from._impl_.capture_info_)
                : nullptr;
  _impl_.take_photo_feedback_ = from._impl_.take_photo_feedback_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
}
inline PROTOBUF_NDEBUG_INLINE RespondTakePhotoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondTakePhotoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, capture_info_),
           0,
           offsetof(Impl_, take_photo_feedback_) -
               offsetof(Impl_, capture_info_) +
               sizeof(Impl_::take_photo_feedback_));
}
RespondTakePhotoRequest::~RespondTakePhotoRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondTakePhotoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.capture_info_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondTakePhotoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.capture_info_ != nullptr);
    _impl_.capture_info_->Clear();
  }
  _impl_.take_photo_feedback_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondTakePhotoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RespondTakePhotoRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondTakePhotoRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondTakePhotoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CaptureInfo capture_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RespondTakePhotoRequest, _impl_.capture_info_)}},
    // .mavsdk.rpc.camera_server.CameraFeedback take_photo_feedback = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RespondTakePhotoRequest, _impl_.take_photo_feedback_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RespondTakePhotoRequest, _impl_.take_photo_feedback_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraFeedback take_photo_feedback = 1;
    {PROTOBUF_FIELD_OFFSET(RespondTakePhotoRequest, _impl_.take_photo_feedback_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.camera_server.CaptureInfo capture_info = 2;
    {PROTOBUF_FIELD_OFFSET(RespondTakePhotoRequest, _impl_.capture_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CaptureInfo>()},
  }}, {{
  }},
};

::uint8_t* RespondTakePhotoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback take_photo_feedback = 1;
  if (this->_internal_take_photo_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_take_photo_feedback(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CaptureInfo capture_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::capture_info(this),
        _Internal::capture_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  return target;
}

::size_t RespondTakePhotoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CaptureInfo capture_info = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.capture_info_);
  }

  // .mavsdk.rpc.camera_server.CameraFeedback take_photo_feedback = 1;
  if (this->_internal_take_photo_feedback() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_take_photo_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondTakePhotoRequest::_class_data_ = {
    RespondTakePhotoRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondTakePhotoRequest::GetClassData() const {
  return &_class_data_;
}

void RespondTakePhotoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondTakePhotoRequest*>(&to_msg);
  auto& from = static_cast<const RespondTakePhotoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_capture_info()->::mavsdk::rpc::camera_server::CaptureInfo::MergeFrom(
        from._internal_capture_info());
  }
  if (from._internal_take_photo_feedback() != 0) {
    _this->_internal_set_take_photo_feedback(from._internal_take_photo_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondTakePhotoRequest::CopyFrom(const RespondTakePhotoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondTakePhotoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondTakePhotoRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondTakePhotoRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondTakePhotoRequest::InternalSwap(RespondTakePhotoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RespondTakePhotoRequest, _impl_.take_photo_feedback_)
      + sizeof(RespondTakePhotoRequest::_impl_.take_photo_feedback_)
      - PROTOBUF_FIELD_OFFSET(RespondTakePhotoRequest, _impl_.capture_info_)>(
          reinterpret_cast<char*>(&_impl_.capture_info_),
          reinterpret_cast<char*>(&other->_impl_.capture_info_));
}

::google::protobuf::Metadata RespondTakePhotoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[8]);
}
// ===================================================================

class RespondTakePhotoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondTakePhotoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondTakePhotoResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondTakePhotoResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondTakePhotoResponse::_Internal::camera_server_result(const RespondTakePhotoResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondTakePhotoResponse::RespondTakePhotoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondTakePhotoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondTakePhotoResponse::RespondTakePhotoResponse(
    ::google::protobuf::Arena* arena,
    const RespondTakePhotoResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondTakePhotoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondTakePhotoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondTakePhotoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondTakePhotoResponse::~RespondTakePhotoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondTakePhotoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondTakePhotoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondTakePhotoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondTakePhotoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondTakePhotoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondTakePhotoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondTakePhotoResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondTakePhotoResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondTakePhotoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  return target;
}

::size_t RespondTakePhotoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondTakePhotoResponse::_class_data_ = {
    RespondTakePhotoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondTakePhotoResponse::GetClassData() const {
  return &_class_data_;
}

void RespondTakePhotoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondTakePhotoResponse*>(&to_msg);
  auto& from = static_cast<const RespondTakePhotoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondTakePhotoResponse::CopyFrom(const RespondTakePhotoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondTakePhotoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondTakePhotoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondTakePhotoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondTakePhotoResponse::InternalSwap(RespondTakePhotoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondTakePhotoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[9]);
}
// ===================================================================

class SubscribeStartVideoRequest::_Internal {
 public:
};

SubscribeStartVideoRequest::SubscribeStartVideoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeStartVideoRequest)
}
SubscribeStartVideoRequest::SubscribeStartVideoRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeStartVideoRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeStartVideoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeStartVideoRequest)
}









::google::protobuf::Metadata SubscribeStartVideoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[10]);
}
// ===================================================================

class StartVideoResponse::_Internal {
 public:
};

StartVideoResponse::StartVideoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.StartVideoResponse)
}
StartVideoResponse::StartVideoResponse(
    ::google::protobuf::Arena* arena, const StartVideoResponse& from)
    : StartVideoResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StartVideoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartVideoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stream_id_ = {};
}
StartVideoResponse::~StartVideoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.StartVideoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartVideoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartVideoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.StartVideoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stream_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartVideoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StartVideoResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StartVideoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 stream_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StartVideoResponse, _impl_.stream_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StartVideoResponse, _impl_.stream_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 stream_id = 1;
    {PROTOBUF_FIELD_OFFSET(StartVideoResponse, _impl_.stream_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StartVideoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.StartVideoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_stream_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.StartVideoResponse)
  return target;
}

::size_t StartVideoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.StartVideoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_stream_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartVideoResponse::_class_data_ = {
    StartVideoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartVideoResponse::GetClassData() const {
  return &_class_data_;
}

void StartVideoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartVideoResponse*>(&to_msg);
  auto& from = static_cast<const StartVideoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.StartVideoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stream_id() != 0) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartVideoResponse::CopyFrom(const StartVideoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.StartVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartVideoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartVideoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartVideoResponse::InternalSwap(StartVideoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.stream_id_, other->_impl_.stream_id_);
}

::google::protobuf::Metadata StartVideoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[11]);
}
// ===================================================================

class RespondStartVideoRequest::_Internal {
 public:
};

RespondStartVideoRequest::RespondStartVideoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStartVideoRequest)
}
RespondStartVideoRequest::RespondStartVideoRequest(
    ::google::protobuf::Arena* arena, const RespondStartVideoRequest& from)
    : RespondStartVideoRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RespondStartVideoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondStartVideoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.start_video_feedback_ = {};
}
RespondStartVideoRequest::~RespondStartVideoRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondStartVideoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondStartVideoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.start_video_feedback_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondStartVideoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RespondStartVideoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RespondStartVideoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraFeedback start_video_feedback = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RespondStartVideoRequest, _impl_.start_video_feedback_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RespondStartVideoRequest, _impl_.start_video_feedback_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraFeedback start_video_feedback = 1;
    {PROTOBUF_FIELD_OFFSET(RespondStartVideoRequest, _impl_.start_video_feedback_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RespondStartVideoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback start_video_feedback = 1;
  if (this->_internal_start_video_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_start_video_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  return target;
}

::size_t RespondStartVideoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback start_video_feedback = 1;
  if (this->_internal_start_video_feedback() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_start_video_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondStartVideoRequest::_class_data_ = {
    RespondStartVideoRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondStartVideoRequest::GetClassData() const {
  return &_class_data_;
}

void RespondStartVideoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondStartVideoRequest*>(&to_msg);
  auto& from = static_cast<const RespondStartVideoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_video_feedback() != 0) {
    _this->_internal_set_start_video_feedback(from._internal_start_video_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStartVideoRequest::CopyFrom(const RespondStartVideoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStartVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondStartVideoRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondStartVideoRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondStartVideoRequest::InternalSwap(RespondStartVideoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.start_video_feedback_, other->_impl_.start_video_feedback_);
}

::google::protobuf::Metadata RespondStartVideoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[12]);
}
// ===================================================================

class RespondStartVideoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondStartVideoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondStartVideoResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondStartVideoResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondStartVideoResponse::_Internal::camera_server_result(const RespondStartVideoResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondStartVideoResponse::RespondStartVideoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStartVideoResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondStartVideoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondStartVideoResponse::RespondStartVideoResponse(
    ::google::protobuf::Arena* arena,
    const RespondStartVideoResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondStartVideoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStartVideoResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondStartVideoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondStartVideoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondStartVideoResponse::~RespondStartVideoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondStartVideoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondStartVideoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondStartVideoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondStartVideoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondStartVideoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondStartVideoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondStartVideoResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondStartVideoResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondStartVideoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  return target;
}

::size_t RespondStartVideoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondStartVideoResponse::_class_data_ = {
    RespondStartVideoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondStartVideoResponse::GetClassData() const {
  return &_class_data_;
}

void RespondStartVideoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondStartVideoResponse*>(&to_msg);
  auto& from = static_cast<const RespondStartVideoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStartVideoResponse::CopyFrom(const RespondStartVideoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStartVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondStartVideoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondStartVideoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondStartVideoResponse::InternalSwap(RespondStartVideoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondStartVideoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[13]);
}
// ===================================================================

class SubscribeStopVideoRequest::_Internal {
 public:
};

SubscribeStopVideoRequest::SubscribeStopVideoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeStopVideoRequest)
}
SubscribeStopVideoRequest::SubscribeStopVideoRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeStopVideoRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeStopVideoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeStopVideoRequest)
}









::google::protobuf::Metadata SubscribeStopVideoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[14]);
}
// ===================================================================

class StopVideoResponse::_Internal {
 public:
};

StopVideoResponse::StopVideoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.StopVideoResponse)
}
StopVideoResponse::StopVideoResponse(
    ::google::protobuf::Arena* arena, const StopVideoResponse& from)
    : StopVideoResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StopVideoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StopVideoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stream_id_ = {};
}
StopVideoResponse::~StopVideoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.StopVideoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StopVideoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StopVideoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.StopVideoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stream_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StopVideoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StopVideoResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StopVideoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 stream_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StopVideoResponse, _impl_.stream_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StopVideoResponse, _impl_.stream_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 stream_id = 1;
    {PROTOBUF_FIELD_OFFSET(StopVideoResponse, _impl_.stream_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StopVideoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.StopVideoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_stream_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.StopVideoResponse)
  return target;
}

::size_t StopVideoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.StopVideoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_stream_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StopVideoResponse::_class_data_ = {
    StopVideoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StopVideoResponse::GetClassData() const {
  return &_class_data_;
}

void StopVideoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StopVideoResponse*>(&to_msg);
  auto& from = static_cast<const StopVideoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.StopVideoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stream_id() != 0) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopVideoResponse::CopyFrom(const StopVideoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.StopVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StopVideoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StopVideoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StopVideoResponse::InternalSwap(StopVideoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.stream_id_, other->_impl_.stream_id_);
}

::google::protobuf::Metadata StopVideoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[15]);
}
// ===================================================================

class RespondStopVideoRequest::_Internal {
 public:
};

RespondStopVideoRequest::RespondStopVideoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStopVideoRequest)
}
RespondStopVideoRequest::RespondStopVideoRequest(
    ::google::protobuf::Arena* arena, const RespondStopVideoRequest& from)
    : RespondStopVideoRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RespondStopVideoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondStopVideoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stop_video_feedback_ = {};
}
RespondStopVideoRequest::~RespondStopVideoRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondStopVideoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondStopVideoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stop_video_feedback_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondStopVideoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RespondStopVideoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RespondStopVideoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RespondStopVideoRequest, _impl_.stop_video_feedback_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RespondStopVideoRequest, _impl_.stop_video_feedback_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
    {PROTOBUF_FIELD_OFFSET(RespondStopVideoRequest, _impl_.stop_video_feedback_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RespondStopVideoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
  if (this->_internal_stop_video_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_stop_video_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  return target;
}

::size_t RespondStopVideoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_feedback = 1;
  if (this->_internal_stop_video_feedback() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_stop_video_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondStopVideoRequest::_class_data_ = {
    RespondStopVideoRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondStopVideoRequest::GetClassData() const {
  return &_class_data_;
}

void RespondStopVideoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondStopVideoRequest*>(&to_msg);
  auto& from = static_cast<const RespondStopVideoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stop_video_feedback() != 0) {
    _this->_internal_set_stop_video_feedback(from._internal_stop_video_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStopVideoRequest::CopyFrom(const RespondStopVideoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStopVideoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondStopVideoRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondStopVideoRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondStopVideoRequest::InternalSwap(RespondStopVideoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stop_video_feedback_, other->_impl_.stop_video_feedback_);
}

::google::protobuf::Metadata RespondStopVideoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[16]);
}
// ===================================================================

class RespondStopVideoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondStopVideoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondStopVideoResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondStopVideoResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondStopVideoResponse::_Internal::camera_server_result(const RespondStopVideoResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondStopVideoResponse::RespondStopVideoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStopVideoResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondStopVideoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondStopVideoResponse::RespondStopVideoResponse(
    ::google::protobuf::Arena* arena,
    const RespondStopVideoResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondStopVideoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStopVideoResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondStopVideoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondStopVideoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondStopVideoResponse::~RespondStopVideoResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondStopVideoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondStopVideoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondStopVideoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondStopVideoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondStopVideoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondStopVideoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondStopVideoResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondStopVideoResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondStopVideoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  return target;
}

::size_t RespondStopVideoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondStopVideoResponse::_class_data_ = {
    RespondStopVideoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondStopVideoResponse::GetClassData() const {
  return &_class_data_;
}

void RespondStopVideoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondStopVideoResponse*>(&to_msg);
  auto& from = static_cast<const RespondStopVideoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStopVideoResponse::CopyFrom(const RespondStopVideoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStopVideoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondStopVideoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondStopVideoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondStopVideoResponse::InternalSwap(RespondStopVideoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondStopVideoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[17]);
}
// ===================================================================

class SubscribeStartVideoStreamingRequest::_Internal {
 public:
};

SubscribeStartVideoStreamingRequest::SubscribeStartVideoStreamingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeStartVideoStreamingRequest)
}
SubscribeStartVideoStreamingRequest::SubscribeStartVideoStreamingRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeStartVideoStreamingRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeStartVideoStreamingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeStartVideoStreamingRequest)
}









::google::protobuf::Metadata SubscribeStartVideoStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[18]);
}
// ===================================================================

class StartVideoStreamingResponse::_Internal {
 public:
};

StartVideoStreamingResponse::StartVideoStreamingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
}
StartVideoStreamingResponse::StartVideoStreamingResponse(
    ::google::protobuf::Arena* arena, const StartVideoStreamingResponse& from)
    : StartVideoStreamingResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StartVideoStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartVideoStreamingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stream_id_ = {};
}
StartVideoStreamingResponse::~StartVideoStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartVideoStreamingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartVideoStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stream_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartVideoStreamingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StartVideoStreamingResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StartVideoStreamingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 stream_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StartVideoStreamingResponse, _impl_.stream_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StartVideoStreamingResponse, _impl_.stream_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 stream_id = 1;
    {PROTOBUF_FIELD_OFFSET(StartVideoStreamingResponse, _impl_.stream_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StartVideoStreamingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_stream_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  return target;
}

::size_t StartVideoStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_stream_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartVideoStreamingResponse::_class_data_ = {
    StartVideoStreamingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartVideoStreamingResponse::GetClassData() const {
  return &_class_data_;
}

void StartVideoStreamingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartVideoStreamingResponse*>(&to_msg);
  auto& from = static_cast<const StartVideoStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stream_id() != 0) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartVideoStreamingResponse::CopyFrom(const StartVideoStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.StartVideoStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartVideoStreamingResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartVideoStreamingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartVideoStreamingResponse::InternalSwap(StartVideoStreamingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.stream_id_, other->_impl_.stream_id_);
}

::google::protobuf::Metadata StartVideoStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[19]);
}
// ===================================================================

class RespondStartVideoStreamingRequest::_Internal {
 public:
};

RespondStartVideoStreamingRequest::RespondStartVideoStreamingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
}
RespondStartVideoStreamingRequest::RespondStartVideoStreamingRequest(
    ::google::protobuf::Arena* arena, const RespondStartVideoStreamingRequest& from)
    : RespondStartVideoStreamingRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RespondStartVideoStreamingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondStartVideoStreamingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.start_video_streaming_feedback_ = {};
}
RespondStartVideoStreamingRequest::~RespondStartVideoStreamingRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondStartVideoStreamingRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondStartVideoStreamingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.start_video_streaming_feedback_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondStartVideoStreamingRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RespondStartVideoStreamingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RespondStartVideoStreamingRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraFeedback start_video_streaming_feedback = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RespondStartVideoStreamingRequest, _impl_.start_video_streaming_feedback_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RespondStartVideoStreamingRequest, _impl_.start_video_streaming_feedback_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraFeedback start_video_streaming_feedback = 1;
    {PROTOBUF_FIELD_OFFSET(RespondStartVideoStreamingRequest, _impl_.start_video_streaming_feedback_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RespondStartVideoStreamingRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback start_video_streaming_feedback = 1;
  if (this->_internal_start_video_streaming_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_start_video_streaming_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  return target;
}

::size_t RespondStartVideoStreamingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback start_video_streaming_feedback = 1;
  if (this->_internal_start_video_streaming_feedback() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_start_video_streaming_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondStartVideoStreamingRequest::_class_data_ = {
    RespondStartVideoStreamingRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondStartVideoStreamingRequest::GetClassData() const {
  return &_class_data_;
}

void RespondStartVideoStreamingRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondStartVideoStreamingRequest*>(&to_msg);
  auto& from = static_cast<const RespondStartVideoStreamingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_video_streaming_feedback() != 0) {
    _this->_internal_set_start_video_streaming_feedback(from._internal_start_video_streaming_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStartVideoStreamingRequest::CopyFrom(const RespondStartVideoStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondStartVideoStreamingRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondStartVideoStreamingRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondStartVideoStreamingRequest::InternalSwap(RespondStartVideoStreamingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.start_video_streaming_feedback_, other->_impl_.start_video_streaming_feedback_);
}

::google::protobuf::Metadata RespondStartVideoStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[20]);
}
// ===================================================================

class RespondStartVideoStreamingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondStartVideoStreamingResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondStartVideoStreamingResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondStartVideoStreamingResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondStartVideoStreamingResponse::_Internal::camera_server_result(const RespondStartVideoStreamingResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondStartVideoStreamingResponse::RespondStartVideoStreamingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondStartVideoStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondStartVideoStreamingResponse::RespondStartVideoStreamingResponse(
    ::google::protobuf::Arena* arena,
    const RespondStartVideoStreamingResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondStartVideoStreamingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondStartVideoStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondStartVideoStreamingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondStartVideoStreamingResponse::~RespondStartVideoStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondStartVideoStreamingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondStartVideoStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondStartVideoStreamingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondStartVideoStreamingResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondStartVideoStreamingResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondStartVideoStreamingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondStartVideoStreamingResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondStartVideoStreamingResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondStartVideoStreamingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  return target;
}

::size_t RespondStartVideoStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondStartVideoStreamingResponse::_class_data_ = {
    RespondStartVideoStreamingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondStartVideoStreamingResponse::GetClassData() const {
  return &_class_data_;
}

void RespondStartVideoStreamingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondStartVideoStreamingResponse*>(&to_msg);
  auto& from = static_cast<const RespondStartVideoStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStartVideoStreamingResponse::CopyFrom(const RespondStartVideoStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStartVideoStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondStartVideoStreamingResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondStartVideoStreamingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondStartVideoStreamingResponse::InternalSwap(RespondStartVideoStreamingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondStartVideoStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[21]);
}
// ===================================================================

class SubscribeStopVideoStreamingRequest::_Internal {
 public:
};

SubscribeStopVideoStreamingRequest::SubscribeStopVideoStreamingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeStopVideoStreamingRequest)
}
SubscribeStopVideoStreamingRequest::SubscribeStopVideoStreamingRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeStopVideoStreamingRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeStopVideoStreamingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeStopVideoStreamingRequest)
}









::google::protobuf::Metadata SubscribeStopVideoStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[22]);
}
// ===================================================================

class StopVideoStreamingResponse::_Internal {
 public:
};

StopVideoStreamingResponse::StopVideoStreamingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
}
StopVideoStreamingResponse::StopVideoStreamingResponse(
    ::google::protobuf::Arena* arena, const StopVideoStreamingResponse& from)
    : StopVideoStreamingResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StopVideoStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StopVideoStreamingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stream_id_ = {};
}
StopVideoStreamingResponse::~StopVideoStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StopVideoStreamingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StopVideoStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stream_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StopVideoStreamingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StopVideoStreamingResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StopVideoStreamingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 stream_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StopVideoStreamingResponse, _impl_.stream_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StopVideoStreamingResponse, _impl_.stream_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 stream_id = 1;
    {PROTOBUF_FIELD_OFFSET(StopVideoStreamingResponse, _impl_.stream_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StopVideoStreamingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_stream_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  return target;
}

::size_t StopVideoStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_stream_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StopVideoStreamingResponse::_class_data_ = {
    StopVideoStreamingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StopVideoStreamingResponse::GetClassData() const {
  return &_class_data_;
}

void StopVideoStreamingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StopVideoStreamingResponse*>(&to_msg);
  auto& from = static_cast<const StopVideoStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stream_id() != 0) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StopVideoStreamingResponse::CopyFrom(const StopVideoStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.StopVideoStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StopVideoStreamingResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StopVideoStreamingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StopVideoStreamingResponse::InternalSwap(StopVideoStreamingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.stream_id_, other->_impl_.stream_id_);
}

::google::protobuf::Metadata StopVideoStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[23]);
}
// ===================================================================

class RespondStopVideoStreamingRequest::_Internal {
 public:
};

RespondStopVideoStreamingRequest::RespondStopVideoStreamingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
}
RespondStopVideoStreamingRequest::RespondStopVideoStreamingRequest(
    ::google::protobuf::Arena* arena, const RespondStopVideoStreamingRequest& from)
    : RespondStopVideoStreamingRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RespondStopVideoStreamingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondStopVideoStreamingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stop_video_streaming_feedback_ = {};
}
RespondStopVideoStreamingRequest::~RespondStopVideoStreamingRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondStopVideoStreamingRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondStopVideoStreamingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stop_video_streaming_feedback_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondStopVideoStreamingRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RespondStopVideoStreamingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RespondStopVideoStreamingRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraFeedback stop_video_streaming_feedback = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RespondStopVideoStreamingRequest, _impl_.stop_video_streaming_feedback_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RespondStopVideoStreamingRequest, _impl_.stop_video_streaming_feedback_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraFeedback stop_video_streaming_feedback = 1;
    {PROTOBUF_FIELD_OFFSET(RespondStopVideoStreamingRequest, _impl_.stop_video_streaming_feedback_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RespondStopVideoStreamingRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_streaming_feedback = 1;
  if (this->_internal_stop_video_streaming_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_stop_video_streaming_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  return target;
}

::size_t RespondStopVideoStreamingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback stop_video_streaming_feedback = 1;
  if (this->_internal_stop_video_streaming_feedback() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_stop_video_streaming_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondStopVideoStreamingRequest::_class_data_ = {
    RespondStopVideoStreamingRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondStopVideoStreamingRequest::GetClassData() const {
  return &_class_data_;
}

void RespondStopVideoStreamingRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondStopVideoStreamingRequest*>(&to_msg);
  auto& from = static_cast<const RespondStopVideoStreamingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stop_video_streaming_feedback() != 0) {
    _this->_internal_set_stop_video_streaming_feedback(from._internal_stop_video_streaming_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStopVideoStreamingRequest::CopyFrom(const RespondStopVideoStreamingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondStopVideoStreamingRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondStopVideoStreamingRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondStopVideoStreamingRequest::InternalSwap(RespondStopVideoStreamingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stop_video_streaming_feedback_, other->_impl_.stop_video_streaming_feedback_);
}

::google::protobuf::Metadata RespondStopVideoStreamingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[24]);
}
// ===================================================================

class RespondStopVideoStreamingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondStopVideoStreamingResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondStopVideoStreamingResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondStopVideoStreamingResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondStopVideoStreamingResponse::_Internal::camera_server_result(const RespondStopVideoStreamingResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondStopVideoStreamingResponse::RespondStopVideoStreamingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondStopVideoStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondStopVideoStreamingResponse::RespondStopVideoStreamingResponse(
    ::google::protobuf::Arena* arena,
    const RespondStopVideoStreamingResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondStopVideoStreamingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondStopVideoStreamingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondStopVideoStreamingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondStopVideoStreamingResponse::~RespondStopVideoStreamingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondStopVideoStreamingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondStopVideoStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondStopVideoStreamingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondStopVideoStreamingResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondStopVideoStreamingResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondStopVideoStreamingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondStopVideoStreamingResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondStopVideoStreamingResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondStopVideoStreamingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  return target;
}

::size_t RespondStopVideoStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondStopVideoStreamingResponse::_class_data_ = {
    RespondStopVideoStreamingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondStopVideoStreamingResponse::GetClassData() const {
  return &_class_data_;
}

void RespondStopVideoStreamingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondStopVideoStreamingResponse*>(&to_msg);
  auto& from = static_cast<const RespondStopVideoStreamingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStopVideoStreamingResponse::CopyFrom(const RespondStopVideoStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStopVideoStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondStopVideoStreamingResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondStopVideoStreamingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondStopVideoStreamingResponse::InternalSwap(RespondStopVideoStreamingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondStopVideoStreamingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[25]);
}
// ===================================================================

class SubscribeSetModeRequest::_Internal {
 public:
};

SubscribeSetModeRequest::SubscribeSetModeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeSetModeRequest)
}
SubscribeSetModeRequest::SubscribeSetModeRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeSetModeRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeSetModeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeSetModeRequest)
}









::google::protobuf::Metadata SubscribeSetModeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[26]);
}
// ===================================================================

class SetModeResponse::_Internal {
 public:
};

SetModeResponse::SetModeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SetModeResponse)
}
SetModeResponse::SetModeResponse(
    ::google::protobuf::Arena* arena, const SetModeResponse& from)
    : SetModeResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetModeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mode_ = {};
}
SetModeResponse::~SetModeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SetModeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetModeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SetModeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mode_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetModeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetModeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetModeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.Mode mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetModeResponse, _impl_.mode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetModeResponse, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.Mode mode = 1;
    {PROTOBUF_FIELD_OFFSET(SetModeResponse, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetModeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SetModeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.Mode mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SetModeResponse)
  return target;
}

::size_t SetModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SetModeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.Mode mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetModeResponse::_class_data_ = {
    SetModeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetModeResponse::GetClassData() const {
  return &_class_data_;
}

void SetModeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetModeResponse*>(&to_msg);
  auto& from = static_cast<const SetModeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SetModeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetModeResponse::CopyFrom(const SetModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SetModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetModeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetModeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetModeResponse::InternalSwap(SetModeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.mode_, other->_impl_.mode_);
}

::google::protobuf::Metadata SetModeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[27]);
}
// ===================================================================

class RespondSetModeRequest::_Internal {
 public:
};

RespondSetModeRequest::RespondSetModeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondSetModeRequest)
}
RespondSetModeRequest::RespondSetModeRequest(
    ::google::protobuf::Arena* arena, const RespondSetModeRequest& from)
    : RespondSetModeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RespondSetModeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondSetModeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.set_mode_feedback_ = {};
}
RespondSetModeRequest::~RespondSetModeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondSetModeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondSetModeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondSetModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondSetModeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.set_mode_feedback_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondSetModeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RespondSetModeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RespondSetModeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraFeedback set_mode_feedback = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RespondSetModeRequest, _impl_.set_mode_feedback_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RespondSetModeRequest, _impl_.set_mode_feedback_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraFeedback set_mode_feedback = 1;
    {PROTOBUF_FIELD_OFFSET(RespondSetModeRequest, _impl_.set_mode_feedback_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RespondSetModeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondSetModeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback set_mode_feedback = 1;
  if (this->_internal_set_mode_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_set_mode_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondSetModeRequest)
  return target;
}

::size_t RespondSetModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondSetModeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback set_mode_feedback = 1;
  if (this->_internal_set_mode_feedback() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_set_mode_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondSetModeRequest::_class_data_ = {
    RespondSetModeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondSetModeRequest::GetClassData() const {
  return &_class_data_;
}

void RespondSetModeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondSetModeRequest*>(&to_msg);
  auto& from = static_cast<const RespondSetModeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondSetModeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_set_mode_feedback() != 0) {
    _this->_internal_set_set_mode_feedback(from._internal_set_mode_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondSetModeRequest::CopyFrom(const RespondSetModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondSetModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondSetModeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondSetModeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondSetModeRequest::InternalSwap(RespondSetModeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.set_mode_feedback_, other->_impl_.set_mode_feedback_);
}

::google::protobuf::Metadata RespondSetModeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[28]);
}
// ===================================================================

class RespondSetModeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondSetModeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondSetModeResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondSetModeResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondSetModeResponse::_Internal::camera_server_result(const RespondSetModeResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondSetModeResponse::RespondSetModeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondSetModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondSetModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondSetModeResponse::RespondSetModeResponse(
    ::google::protobuf::Arena* arena,
    const RespondSetModeResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondSetModeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondSetModeResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondSetModeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondSetModeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondSetModeResponse::~RespondSetModeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondSetModeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondSetModeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondSetModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondSetModeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondSetModeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondSetModeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondSetModeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondSetModeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondSetModeResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondSetModeResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondSetModeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondSetModeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondSetModeResponse)
  return target;
}

::size_t RespondSetModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondSetModeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondSetModeResponse::_class_data_ = {
    RespondSetModeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondSetModeResponse::GetClassData() const {
  return &_class_data_;
}

void RespondSetModeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondSetModeResponse*>(&to_msg);
  auto& from = static_cast<const RespondSetModeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondSetModeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondSetModeResponse::CopyFrom(const RespondSetModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondSetModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondSetModeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondSetModeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondSetModeResponse::InternalSwap(RespondSetModeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondSetModeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[29]);
}
// ===================================================================

class SubscribeStorageInformationRequest::_Internal {
 public:
};

SubscribeStorageInformationRequest::SubscribeStorageInformationRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeStorageInformationRequest)
}
SubscribeStorageInformationRequest::SubscribeStorageInformationRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeStorageInformationRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeStorageInformationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeStorageInformationRequest)
}









::google::protobuf::Metadata SubscribeStorageInformationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[30]);
}
// ===================================================================

class StorageInformationResponse::_Internal {
 public:
};

StorageInformationResponse::StorageInformationResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.StorageInformationResponse)
}
StorageInformationResponse::StorageInformationResponse(
    ::google::protobuf::Arena* arena, const StorageInformationResponse& from)
    : StorageInformationResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StorageInformationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StorageInformationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.storage_id_ = {};
}
StorageInformationResponse::~StorageInformationResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.StorageInformationResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StorageInformationResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StorageInformationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.StorageInformationResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.storage_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StorageInformationResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StorageInformationResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StorageInformationResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 storage_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StorageInformationResponse, _impl_.storage_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StorageInformationResponse, _impl_.storage_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 storage_id = 1;
    {PROTOBUF_FIELD_OFFSET(StorageInformationResponse, _impl_.storage_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StorageInformationResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.StorageInformationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 storage_id = 1;
  if (this->_internal_storage_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_storage_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.StorageInformationResponse)
  return target;
}

::size_t StorageInformationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.StorageInformationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 storage_id = 1;
  if (this->_internal_storage_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_storage_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StorageInformationResponse::_class_data_ = {
    StorageInformationResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StorageInformationResponse::GetClassData() const {
  return &_class_data_;
}

void StorageInformationResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StorageInformationResponse*>(&to_msg);
  auto& from = static_cast<const StorageInformationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.StorageInformationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_storage_id() != 0) {
    _this->_internal_set_storage_id(from._internal_storage_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StorageInformationResponse::CopyFrom(const StorageInformationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.StorageInformationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StorageInformationResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StorageInformationResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StorageInformationResponse::InternalSwap(StorageInformationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.storage_id_, other->_impl_.storage_id_);
}

::google::protobuf::Metadata StorageInformationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[31]);
}
// ===================================================================

class RespondStorageInformationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondStorageInformationRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondStorageInformationRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::StorageInformation& storage_information(const RespondStorageInformationRequest* msg);
  static void set_has_storage_information(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::StorageInformation& RespondStorageInformationRequest::_Internal::storage_information(const RespondStorageInformationRequest* msg) {
  return *msg->_impl_.storage_information_;
}
RespondStorageInformationRequest::RespondStorageInformationRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
}
inline PROTOBUF_NDEBUG_INLINE RespondStorageInformationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondStorageInformationRequest::RespondStorageInformationRequest(
    ::google::protobuf::Arena* arena,
    const RespondStorageInformationRequest& from)
    : ::google::protobuf::Message(arena) {
  RespondStorageInformationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.storage_information_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::StorageInformation>(arena, *from._impl_.storage_information_)
                : nullptr;
  _impl_.storage_information_feedback_ = from._impl_.storage_information_feedback_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
}
inline PROTOBUF_NDEBUG_INLINE RespondStorageInformationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondStorageInformationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, storage_information_),
           0,
           offsetof(Impl_, storage_information_feedback_) -
               offsetof(Impl_, storage_information_) +
               sizeof(Impl_::storage_information_feedback_));
}
RespondStorageInformationRequest::~RespondStorageInformationRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondStorageInformationRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.storage_information_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondStorageInformationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.storage_information_ != nullptr);
    _impl_.storage_information_->Clear();
  }
  _impl_.storage_information_feedback_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondStorageInformationRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RespondStorageInformationRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondStorageInformationRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondStorageInformationRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.StorageInformation storage_information = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RespondStorageInformationRequest, _impl_.storage_information_)}},
    // .mavsdk.rpc.camera_server.CameraFeedback storage_information_feedback = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RespondStorageInformationRequest, _impl_.storage_information_feedback_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RespondStorageInformationRequest, _impl_.storage_information_feedback_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraFeedback storage_information_feedback = 1;
    {PROTOBUF_FIELD_OFFSET(RespondStorageInformationRequest, _impl_.storage_information_feedback_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.camera_server.StorageInformation storage_information = 2;
    {PROTOBUF_FIELD_OFFSET(RespondStorageInformationRequest, _impl_.storage_information_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::StorageInformation>()},
  }}, {{
  }},
};

::uint8_t* RespondStorageInformationRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback storage_information_feedback = 1;
  if (this->_internal_storage_information_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_storage_information_feedback(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.StorageInformation storage_information = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::storage_information(this),
        _Internal::storage_information(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  return target;
}

::size_t RespondStorageInformationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.StorageInformation storage_information = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.storage_information_);
  }

  // .mavsdk.rpc.camera_server.CameraFeedback storage_information_feedback = 1;
  if (this->_internal_storage_information_feedback() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_storage_information_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondStorageInformationRequest::_class_data_ = {
    RespondStorageInformationRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondStorageInformationRequest::GetClassData() const {
  return &_class_data_;
}

void RespondStorageInformationRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondStorageInformationRequest*>(&to_msg);
  auto& from = static_cast<const RespondStorageInformationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_storage_information()->::mavsdk::rpc::camera_server::StorageInformation::MergeFrom(
        from._internal_storage_information());
  }
  if (from._internal_storage_information_feedback() != 0) {
    _this->_internal_set_storage_information_feedback(from._internal_storage_information_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStorageInformationRequest::CopyFrom(const RespondStorageInformationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStorageInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondStorageInformationRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondStorageInformationRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondStorageInformationRequest::InternalSwap(RespondStorageInformationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RespondStorageInformationRequest, _impl_.storage_information_feedback_)
      + sizeof(RespondStorageInformationRequest::_impl_.storage_information_feedback_)
      - PROTOBUF_FIELD_OFFSET(RespondStorageInformationRequest, _impl_.storage_information_)>(
          reinterpret_cast<char*>(&_impl_.storage_information_),
          reinterpret_cast<char*>(&other->_impl_.storage_information_));
}

::google::protobuf::Metadata RespondStorageInformationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[32]);
}
// ===================================================================

class RespondStorageInformationResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondStorageInformationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondStorageInformationResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondStorageInformationResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondStorageInformationResponse::_Internal::camera_server_result(const RespondStorageInformationResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondStorageInformationResponse::RespondStorageInformationResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondStorageInformationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondStorageInformationResponse::RespondStorageInformationResponse(
    ::google::protobuf::Arena* arena,
    const RespondStorageInformationResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondStorageInformationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondStorageInformationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondStorageInformationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondStorageInformationResponse::~RespondStorageInformationResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondStorageInformationResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondStorageInformationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondStorageInformationResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondStorageInformationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondStorageInformationResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondStorageInformationResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondStorageInformationResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondStorageInformationResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondStorageInformationResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  return target;
}

::size_t RespondStorageInformationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondStorageInformationResponse::_class_data_ = {
    RespondStorageInformationResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondStorageInformationResponse::GetClassData() const {
  return &_class_data_;
}

void RespondStorageInformationResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondStorageInformationResponse*>(&to_msg);
  auto& from = static_cast<const RespondStorageInformationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondStorageInformationResponse::CopyFrom(const RespondStorageInformationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondStorageInformationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondStorageInformationResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondStorageInformationResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondStorageInformationResponse::InternalSwap(RespondStorageInformationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondStorageInformationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[33]);
}
// ===================================================================

class SubscribeCaptureStatusRequest::_Internal {
 public:
};

SubscribeCaptureStatusRequest::SubscribeCaptureStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeCaptureStatusRequest)
}
SubscribeCaptureStatusRequest::SubscribeCaptureStatusRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeCaptureStatusRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeCaptureStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeCaptureStatusRequest)
}









::google::protobuf::Metadata SubscribeCaptureStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[34]);
}
// ===================================================================

class CaptureStatusResponse::_Internal {
 public:
};

CaptureStatusResponse::CaptureStatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.CaptureStatusResponse)
}
CaptureStatusResponse::CaptureStatusResponse(
    ::google::protobuf::Arena* arena, const CaptureStatusResponse& from)
    : CaptureStatusResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CaptureStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CaptureStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.reserved_ = {};
}
CaptureStatusResponse::~CaptureStatusResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.CaptureStatusResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CaptureStatusResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CaptureStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.CaptureStatusResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reserved_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CaptureStatusResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CaptureStatusResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CaptureStatusResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 reserved = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CaptureStatusResponse, _impl_.reserved_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureStatusResponse, _impl_.reserved_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 reserved = 1;
    {PROTOBUF_FIELD_OFFSET(CaptureStatusResponse, _impl_.reserved_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CaptureStatusResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.CaptureStatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_reserved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.CaptureStatusResponse)
  return target;
}

::size_t CaptureStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.CaptureStatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_reserved());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CaptureStatusResponse::_class_data_ = {
    CaptureStatusResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CaptureStatusResponse::GetClassData() const {
  return &_class_data_;
}

void CaptureStatusResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CaptureStatusResponse*>(&to_msg);
  auto& from = static_cast<const CaptureStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.CaptureStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reserved() != 0) {
    _this->_internal_set_reserved(from._internal_reserved());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CaptureStatusResponse::CopyFrom(const CaptureStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.CaptureStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CaptureStatusResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CaptureStatusResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CaptureStatusResponse::InternalSwap(CaptureStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.reserved_, other->_impl_.reserved_);
}

::google::protobuf::Metadata CaptureStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[35]);
}
// ===================================================================

class RespondCaptureStatusRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondCaptureStatusRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondCaptureStatusRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CaptureStatus& capture_status(const RespondCaptureStatusRequest* msg);
  static void set_has_capture_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CaptureStatus& RespondCaptureStatusRequest::_Internal::capture_status(const RespondCaptureStatusRequest* msg) {
  return *msg->_impl_.capture_status_;
}
RespondCaptureStatusRequest::RespondCaptureStatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE RespondCaptureStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondCaptureStatusRequest::RespondCaptureStatusRequest(
    ::google::protobuf::Arena* arena,
    const RespondCaptureStatusRequest& from)
    : ::google::protobuf::Message(arena) {
  RespondCaptureStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.capture_status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CaptureStatus>(arena, *from._impl_.capture_status_)
                : nullptr;
  _impl_.capture_status_feedback_ = from._impl_.capture_status_feedback_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE RespondCaptureStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondCaptureStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, capture_status_),
           0,
           offsetof(Impl_, capture_status_feedback_) -
               offsetof(Impl_, capture_status_) +
               sizeof(Impl_::capture_status_feedback_));
}
RespondCaptureStatusRequest::~RespondCaptureStatusRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondCaptureStatusRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.capture_status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondCaptureStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.capture_status_ != nullptr);
    _impl_.capture_status_->Clear();
  }
  _impl_.capture_status_feedback_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondCaptureStatusRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RespondCaptureStatusRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondCaptureStatusRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondCaptureStatusRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CaptureStatus capture_status = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RespondCaptureStatusRequest, _impl_.capture_status_)}},
    // .mavsdk.rpc.camera_server.CameraFeedback capture_status_feedback = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RespondCaptureStatusRequest, _impl_.capture_status_feedback_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RespondCaptureStatusRequest, _impl_.capture_status_feedback_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraFeedback capture_status_feedback = 1;
    {PROTOBUF_FIELD_OFFSET(RespondCaptureStatusRequest, _impl_.capture_status_feedback_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.camera_server.CaptureStatus capture_status = 2;
    {PROTOBUF_FIELD_OFFSET(RespondCaptureStatusRequest, _impl_.capture_status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CaptureStatus>()},
  }}, {{
  }},
};

::uint8_t* RespondCaptureStatusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback capture_status_feedback = 1;
  if (this->_internal_capture_status_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_capture_status_feedback(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CaptureStatus capture_status = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::capture_status(this),
        _Internal::capture_status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  return target;
}

::size_t RespondCaptureStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CaptureStatus capture_status = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.capture_status_);
  }

  // .mavsdk.rpc.camera_server.CameraFeedback capture_status_feedback = 1;
  if (this->_internal_capture_status_feedback() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_capture_status_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondCaptureStatusRequest::_class_data_ = {
    RespondCaptureStatusRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondCaptureStatusRequest::GetClassData() const {
  return &_class_data_;
}

void RespondCaptureStatusRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondCaptureStatusRequest*>(&to_msg);
  auto& from = static_cast<const RespondCaptureStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_capture_status()->::mavsdk::rpc::camera_server::CaptureStatus::MergeFrom(
        from._internal_capture_status());
  }
  if (from._internal_capture_status_feedback() != 0) {
    _this->_internal_set_capture_status_feedback(from._internal_capture_status_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondCaptureStatusRequest::CopyFrom(const RespondCaptureStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondCaptureStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondCaptureStatusRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondCaptureStatusRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondCaptureStatusRequest::InternalSwap(RespondCaptureStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RespondCaptureStatusRequest, _impl_.capture_status_feedback_)
      + sizeof(RespondCaptureStatusRequest::_impl_.capture_status_feedback_)
      - PROTOBUF_FIELD_OFFSET(RespondCaptureStatusRequest, _impl_.capture_status_)>(
          reinterpret_cast<char*>(&_impl_.capture_status_),
          reinterpret_cast<char*>(&other->_impl_.capture_status_));
}

::google::protobuf::Metadata RespondCaptureStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[36]);
}
// ===================================================================

class RespondCaptureStatusResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondCaptureStatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondCaptureStatusResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondCaptureStatusResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondCaptureStatusResponse::_Internal::camera_server_result(const RespondCaptureStatusResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondCaptureStatusResponse::RespondCaptureStatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondCaptureStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondCaptureStatusResponse::RespondCaptureStatusResponse(
    ::google::protobuf::Arena* arena,
    const RespondCaptureStatusResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondCaptureStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondCaptureStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondCaptureStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondCaptureStatusResponse::~RespondCaptureStatusResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondCaptureStatusResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondCaptureStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondCaptureStatusResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondCaptureStatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondCaptureStatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondCaptureStatusResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondCaptureStatusResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondCaptureStatusResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondCaptureStatusResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  return target;
}

::size_t RespondCaptureStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondCaptureStatusResponse::_class_data_ = {
    RespondCaptureStatusResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondCaptureStatusResponse::GetClassData() const {
  return &_class_data_;
}

void RespondCaptureStatusResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondCaptureStatusResponse*>(&to_msg);
  auto& from = static_cast<const RespondCaptureStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondCaptureStatusResponse::CopyFrom(const RespondCaptureStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondCaptureStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondCaptureStatusResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondCaptureStatusResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondCaptureStatusResponse::InternalSwap(RespondCaptureStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondCaptureStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[37]);
}
// ===================================================================

class SubscribeFormatStorageRequest::_Internal {
 public:
};

SubscribeFormatStorageRequest::SubscribeFormatStorageRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeFormatStorageRequest)
}
SubscribeFormatStorageRequest::SubscribeFormatStorageRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeFormatStorageRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeFormatStorageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeFormatStorageRequest)
}









::google::protobuf::Metadata SubscribeFormatStorageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[38]);
}
// ===================================================================

class FormatStorageResponse::_Internal {
 public:
};

FormatStorageResponse::FormatStorageResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.FormatStorageResponse)
}
FormatStorageResponse::FormatStorageResponse(
    ::google::protobuf::Arena* arena, const FormatStorageResponse& from)
    : FormatStorageResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FormatStorageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FormatStorageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.storage_id_ = {};
}
FormatStorageResponse::~FormatStorageResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.FormatStorageResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FormatStorageResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FormatStorageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.FormatStorageResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.storage_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FormatStorageResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> FormatStorageResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FormatStorageResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 storage_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FormatStorageResponse, _impl_.storage_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FormatStorageResponse, _impl_.storage_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 storage_id = 1;
    {PROTOBUF_FIELD_OFFSET(FormatStorageResponse, _impl_.storage_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FormatStorageResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.FormatStorageResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 storage_id = 1;
  if (this->_internal_storage_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_storage_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.FormatStorageResponse)
  return target;
}

::size_t FormatStorageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.FormatStorageResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 storage_id = 1;
  if (this->_internal_storage_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_storage_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FormatStorageResponse::_class_data_ = {
    FormatStorageResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FormatStorageResponse::GetClassData() const {
  return &_class_data_;
}

void FormatStorageResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FormatStorageResponse*>(&to_msg);
  auto& from = static_cast<const FormatStorageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.FormatStorageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_storage_id() != 0) {
    _this->_internal_set_storage_id(from._internal_storage_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FormatStorageResponse::CopyFrom(const FormatStorageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.FormatStorageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FormatStorageResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FormatStorageResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FormatStorageResponse::InternalSwap(FormatStorageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.storage_id_, other->_impl_.storage_id_);
}

::google::protobuf::Metadata FormatStorageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[39]);
}
// ===================================================================

class RespondFormatStorageRequest::_Internal {
 public:
};

RespondFormatStorageRequest::RespondFormatStorageRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
}
RespondFormatStorageRequest::RespondFormatStorageRequest(
    ::google::protobuf::Arena* arena, const RespondFormatStorageRequest& from)
    : RespondFormatStorageRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RespondFormatStorageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondFormatStorageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.format_storage_feedback_ = {};
}
RespondFormatStorageRequest::~RespondFormatStorageRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondFormatStorageRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondFormatStorageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.format_storage_feedback_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondFormatStorageRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RespondFormatStorageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RespondFormatStorageRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraFeedback format_storage_feedback = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RespondFormatStorageRequest, _impl_.format_storage_feedback_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RespondFormatStorageRequest, _impl_.format_storage_feedback_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraFeedback format_storage_feedback = 1;
    {PROTOBUF_FIELD_OFFSET(RespondFormatStorageRequest, _impl_.format_storage_feedback_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RespondFormatStorageRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback format_storage_feedback = 1;
  if (this->_internal_format_storage_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_format_storage_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  return target;
}

::size_t RespondFormatStorageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback format_storage_feedback = 1;
  if (this->_internal_format_storage_feedback() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_format_storage_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondFormatStorageRequest::_class_data_ = {
    RespondFormatStorageRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondFormatStorageRequest::GetClassData() const {
  return &_class_data_;
}

void RespondFormatStorageRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondFormatStorageRequest*>(&to_msg);
  auto& from = static_cast<const RespondFormatStorageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_format_storage_feedback() != 0) {
    _this->_internal_set_format_storage_feedback(from._internal_format_storage_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondFormatStorageRequest::CopyFrom(const RespondFormatStorageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondFormatStorageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondFormatStorageRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondFormatStorageRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondFormatStorageRequest::InternalSwap(RespondFormatStorageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.format_storage_feedback_, other->_impl_.format_storage_feedback_);
}

::google::protobuf::Metadata RespondFormatStorageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[40]);
}
// ===================================================================

class RespondFormatStorageResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondFormatStorageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondFormatStorageResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondFormatStorageResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondFormatStorageResponse::_Internal::camera_server_result(const RespondFormatStorageResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondFormatStorageResponse::RespondFormatStorageResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondFormatStorageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondFormatStorageResponse::RespondFormatStorageResponse(
    ::google::protobuf::Arena* arena,
    const RespondFormatStorageResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondFormatStorageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondFormatStorageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondFormatStorageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondFormatStorageResponse::~RespondFormatStorageResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondFormatStorageResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondFormatStorageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondFormatStorageResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondFormatStorageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondFormatStorageResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondFormatStorageResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondFormatStorageResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondFormatStorageResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondFormatStorageResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  return target;
}

::size_t RespondFormatStorageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondFormatStorageResponse::_class_data_ = {
    RespondFormatStorageResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondFormatStorageResponse::GetClassData() const {
  return &_class_data_;
}

void RespondFormatStorageResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondFormatStorageResponse*>(&to_msg);
  auto& from = static_cast<const RespondFormatStorageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondFormatStorageResponse::CopyFrom(const RespondFormatStorageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondFormatStorageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondFormatStorageResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondFormatStorageResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondFormatStorageResponse::InternalSwap(RespondFormatStorageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondFormatStorageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[41]);
}
// ===================================================================

class SubscribeResetSettingsRequest::_Internal {
 public:
};

SubscribeResetSettingsRequest::SubscribeResetSettingsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeResetSettingsRequest)
}
SubscribeResetSettingsRequest::SubscribeResetSettingsRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeResetSettingsRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeResetSettingsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeResetSettingsRequest)
}









::google::protobuf::Metadata SubscribeResetSettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[42]);
}
// ===================================================================

class ResetSettingsResponse::_Internal {
 public:
};

ResetSettingsResponse::ResetSettingsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.ResetSettingsResponse)
}
ResetSettingsResponse::ResetSettingsResponse(
    ::google::protobuf::Arena* arena, const ResetSettingsResponse& from)
    : ResetSettingsResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ResetSettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ResetSettingsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.reserved_ = {};
}
ResetSettingsResponse::~ResetSettingsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.ResetSettingsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ResetSettingsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ResetSettingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.ResetSettingsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reserved_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ResetSettingsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ResetSettingsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ResetSettingsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 reserved = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResetSettingsResponse, _impl_.reserved_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResetSettingsResponse, _impl_.reserved_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 reserved = 1;
    {PROTOBUF_FIELD_OFFSET(ResetSettingsResponse, _impl_.reserved_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ResetSettingsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.ResetSettingsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_reserved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.ResetSettingsResponse)
  return target;
}

::size_t ResetSettingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.ResetSettingsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_reserved());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ResetSettingsResponse::_class_data_ = {
    ResetSettingsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ResetSettingsResponse::GetClassData() const {
  return &_class_data_;
}

void ResetSettingsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ResetSettingsResponse*>(&to_msg);
  auto& from = static_cast<const ResetSettingsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.ResetSettingsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reserved() != 0) {
    _this->_internal_set_reserved(from._internal_reserved());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResetSettingsResponse::CopyFrom(const ResetSettingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.ResetSettingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ResetSettingsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ResetSettingsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ResetSettingsResponse::InternalSwap(ResetSettingsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.reserved_, other->_impl_.reserved_);
}

::google::protobuf::Metadata ResetSettingsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[43]);
}
// ===================================================================

class RespondResetSettingsRequest::_Internal {
 public:
};

RespondResetSettingsRequest::RespondResetSettingsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
}
RespondResetSettingsRequest::RespondResetSettingsRequest(
    ::google::protobuf::Arena* arena, const RespondResetSettingsRequest& from)
    : RespondResetSettingsRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RespondResetSettingsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondResetSettingsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.reset_settings_feedback_ = {};
}
RespondResetSettingsRequest::~RespondResetSettingsRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondResetSettingsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondResetSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reset_settings_feedback_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondResetSettingsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RespondResetSettingsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RespondResetSettingsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraFeedback reset_settings_feedback = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RespondResetSettingsRequest, _impl_.reset_settings_feedback_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RespondResetSettingsRequest, _impl_.reset_settings_feedback_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraFeedback reset_settings_feedback = 1;
    {PROTOBUF_FIELD_OFFSET(RespondResetSettingsRequest, _impl_.reset_settings_feedback_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RespondResetSettingsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback reset_settings_feedback = 1;
  if (this->_internal_reset_settings_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_reset_settings_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  return target;
}

::size_t RespondResetSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback reset_settings_feedback = 1;
  if (this->_internal_reset_settings_feedback() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_reset_settings_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondResetSettingsRequest::_class_data_ = {
    RespondResetSettingsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondResetSettingsRequest::GetClassData() const {
  return &_class_data_;
}

void RespondResetSettingsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondResetSettingsRequest*>(&to_msg);
  auto& from = static_cast<const RespondResetSettingsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reset_settings_feedback() != 0) {
    _this->_internal_set_reset_settings_feedback(from._internal_reset_settings_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondResetSettingsRequest::CopyFrom(const RespondResetSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondResetSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondResetSettingsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondResetSettingsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondResetSettingsRequest::InternalSwap(RespondResetSettingsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.reset_settings_feedback_, other->_impl_.reset_settings_feedback_);
}

::google::protobuf::Metadata RespondResetSettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[44]);
}
// ===================================================================

class RespondResetSettingsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondResetSettingsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondResetSettingsResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondResetSettingsResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondResetSettingsResponse::_Internal::camera_server_result(const RespondResetSettingsResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondResetSettingsResponse::RespondResetSettingsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondResetSettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondResetSettingsResponse::RespondResetSettingsResponse(
    ::google::protobuf::Arena* arena,
    const RespondResetSettingsResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondResetSettingsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondResetSettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondResetSettingsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondResetSettingsResponse::~RespondResetSettingsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondResetSettingsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondResetSettingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondResetSettingsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondResetSettingsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondResetSettingsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondResetSettingsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondResetSettingsResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondResetSettingsResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondResetSettingsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  return target;
}

::size_t RespondResetSettingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondResetSettingsResponse::_class_data_ = {
    RespondResetSettingsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondResetSettingsResponse::GetClassData() const {
  return &_class_data_;
}

void RespondResetSettingsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondResetSettingsResponse*>(&to_msg);
  auto& from = static_cast<const RespondResetSettingsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondResetSettingsResponse::CopyFrom(const RespondResetSettingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondResetSettingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondResetSettingsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondResetSettingsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondResetSettingsResponse::InternalSwap(RespondResetSettingsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondResetSettingsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[45]);
}
// ===================================================================

class SubscribeSettingsRequest::_Internal {
 public:
};

SubscribeSettingsRequest::SubscribeSettingsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeSettingsRequest)
}
SubscribeSettingsRequest::SubscribeSettingsRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeSettingsRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeSettingsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeSettingsRequest)
}









::google::protobuf::Metadata SubscribeSettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[46]);
}
// ===================================================================

class SettingsResponse::_Internal {
 public:
};

SettingsResponse::SettingsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SettingsResponse)
}
SettingsResponse::SettingsResponse(
    ::google::protobuf::Arena* arena, const SettingsResponse& from)
    : SettingsResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SettingsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.reserved_ = {};
}
SettingsResponse::~SettingsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SettingsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SettingsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SettingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SettingsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reserved_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SettingsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SettingsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SettingsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 reserved = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SettingsResponse, _impl_.reserved_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SettingsResponse, _impl_.reserved_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 reserved = 1;
    {PROTOBUF_FIELD_OFFSET(SettingsResponse, _impl_.reserved_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SettingsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SettingsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_reserved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SettingsResponse)
  return target;
}

::size_t SettingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SettingsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 reserved = 1;
  if (this->_internal_reserved() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_reserved());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SettingsResponse::_class_data_ = {
    SettingsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SettingsResponse::GetClassData() const {
  return &_class_data_;
}

void SettingsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SettingsResponse*>(&to_msg);
  auto& from = static_cast<const SettingsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SettingsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reserved() != 0) {
    _this->_internal_set_reserved(from._internal_reserved());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SettingsResponse::CopyFrom(const SettingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SettingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SettingsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SettingsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SettingsResponse::InternalSwap(SettingsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.reserved_, other->_impl_.reserved_);
}

::google::protobuf::Metadata SettingsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[47]);
}
// ===================================================================

class RespondSettingsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondSettingsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondSettingsRequest, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::Settings& settings(const RespondSettingsRequest* msg);
  static void set_has_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::Settings& RespondSettingsRequest::_Internal::settings(const RespondSettingsRequest* msg) {
  return *msg->_impl_.settings_;
}
RespondSettingsRequest::RespondSettingsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondSettingsRequest)
}
inline PROTOBUF_NDEBUG_INLINE RespondSettingsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondSettingsRequest::RespondSettingsRequest(
    ::google::protobuf::Arena* arena,
    const RespondSettingsRequest& from)
    : ::google::protobuf::Message(arena) {
  RespondSettingsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.settings_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::Settings>(arena, *from._impl_.settings_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondSettingsRequest)
}
inline PROTOBUF_NDEBUG_INLINE RespondSettingsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondSettingsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.settings_ = {};
}
RespondSettingsRequest::~RespondSettingsRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondSettingsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondSettingsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.settings_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondSettingsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.settings_ != nullptr);
    _impl_.settings_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondSettingsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondSettingsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondSettingsRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondSettingsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.Settings settings = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondSettingsRequest, _impl_.settings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.Settings settings = 1;
    {PROTOBUF_FIELD_OFFSET(RespondSettingsRequest, _impl_.settings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::Settings>()},
  }}, {{
  }},
};

::uint8_t* RespondSettingsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondSettingsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.Settings settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::settings(this),
        _Internal::settings(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondSettingsRequest)
  return target;
}

::size_t RespondSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondSettingsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.Settings settings = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.settings_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondSettingsRequest::_class_data_ = {
    RespondSettingsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondSettingsRequest::GetClassData() const {
  return &_class_data_;
}

void RespondSettingsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondSettingsRequest*>(&to_msg);
  auto& from = static_cast<const RespondSettingsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondSettingsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_settings()->::mavsdk::rpc::camera_server::Settings::MergeFrom(
        from._internal_settings());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondSettingsRequest::CopyFrom(const RespondSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondSettingsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondSettingsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondSettingsRequest::InternalSwap(RespondSettingsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.settings_, other->_impl_.settings_);
}

::google::protobuf::Metadata RespondSettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[48]);
}
// ===================================================================

class RespondSettingsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondSettingsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondSettingsResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondSettingsResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondSettingsResponse::_Internal::camera_server_result(const RespondSettingsResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondSettingsResponse::RespondSettingsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondSettingsResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondSettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondSettingsResponse::RespondSettingsResponse(
    ::google::protobuf::Arena* arena,
    const RespondSettingsResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondSettingsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondSettingsResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondSettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondSettingsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondSettingsResponse::~RespondSettingsResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondSettingsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondSettingsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondSettingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondSettingsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondSettingsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondSettingsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondSettingsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondSettingsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondSettingsResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondSettingsResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondSettingsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondSettingsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondSettingsResponse)
  return target;
}

::size_t RespondSettingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondSettingsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondSettingsResponse::_class_data_ = {
    RespondSettingsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondSettingsResponse::GetClassData() const {
  return &_class_data_;
}

void RespondSettingsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondSettingsResponse*>(&to_msg);
  auto& from = static_cast<const RespondSettingsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondSettingsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondSettingsResponse::CopyFrom(const RespondSettingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondSettingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondSettingsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondSettingsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondSettingsResponse::InternalSwap(RespondSettingsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondSettingsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[49]);
}
// ===================================================================

class SubscribeSystemTimeRequest::_Internal {
 public:
};

SubscribeSystemTimeRequest::SubscribeSystemTimeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeSystemTimeRequest)
}
SubscribeSystemTimeRequest::SubscribeSystemTimeRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeSystemTimeRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeSystemTimeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeSystemTimeRequest)
}









::google::protobuf::Metadata SubscribeSystemTimeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[50]);
}
// ===================================================================

class SystemTimeResponse::_Internal {
 public:
};

SystemTimeResponse::SystemTimeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SystemTimeResponse)
}
SystemTimeResponse::SystemTimeResponse(
    ::google::protobuf::Arena* arena, const SystemTimeResponse& from)
    : SystemTimeResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SystemTimeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SystemTimeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.utc_time_in_ms_ = {};
}
SystemTimeResponse::~SystemTimeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.SystemTimeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SystemTimeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SystemTimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.SystemTimeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.utc_time_in_ms_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SystemTimeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SystemTimeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SystemTimeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 utc_time_in_ms = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SystemTimeResponse, _impl_.utc_time_in_ms_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SystemTimeResponse, _impl_.utc_time_in_ms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 utc_time_in_ms = 1;
    {PROTOBUF_FIELD_OFFSET(SystemTimeResponse, _impl_.utc_time_in_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SystemTimeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.SystemTimeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 utc_time_in_ms = 1;
  if (this->_internal_utc_time_in_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_utc_time_in_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.SystemTimeResponse)
  return target;
}

::size_t SystemTimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.SystemTimeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 utc_time_in_ms = 1;
  if (this->_internal_utc_time_in_ms() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_utc_time_in_ms());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SystemTimeResponse::_class_data_ = {
    SystemTimeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SystemTimeResponse::GetClassData() const {
  return &_class_data_;
}

void SystemTimeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SystemTimeResponse*>(&to_msg);
  auto& from = static_cast<const SystemTimeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.SystemTimeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_utc_time_in_ms() != 0) {
    _this->_internal_set_utc_time_in_ms(from._internal_utc_time_in_ms());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SystemTimeResponse::CopyFrom(const SystemTimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.SystemTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SystemTimeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SystemTimeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SystemTimeResponse::InternalSwap(SystemTimeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.utc_time_in_ms_, other->_impl_.utc_time_in_ms_);
}

::google::protobuf::Metadata SystemTimeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[51]);
}
// ===================================================================

class RespondSystemTimeRequest::_Internal {
 public:
};

RespondSystemTimeRequest::RespondSystemTimeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondSystemTimeRequest)
}
RespondSystemTimeRequest::RespondSystemTimeRequest(
    ::google::protobuf::Arena* arena, const RespondSystemTimeRequest& from)
    : RespondSystemTimeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RespondSystemTimeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondSystemTimeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.system_time_feedback_ = {};
}
RespondSystemTimeRequest::~RespondSystemTimeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondSystemTimeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondSystemTimeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondSystemTimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondSystemTimeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.system_time_feedback_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondSystemTimeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RespondSystemTimeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RespondSystemTimeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraFeedback system_time_feedback = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RespondSystemTimeRequest, _impl_.system_time_feedback_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RespondSystemTimeRequest, _impl_.system_time_feedback_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraFeedback system_time_feedback = 1;
    {PROTOBUF_FIELD_OFFSET(RespondSystemTimeRequest, _impl_.system_time_feedback_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RespondSystemTimeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondSystemTimeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback system_time_feedback = 1;
  if (this->_internal_system_time_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_system_time_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondSystemTimeRequest)
  return target;
}

::size_t RespondSystemTimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondSystemTimeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback system_time_feedback = 1;
  if (this->_internal_system_time_feedback() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_system_time_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondSystemTimeRequest::_class_data_ = {
    RespondSystemTimeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondSystemTimeRequest::GetClassData() const {
  return &_class_data_;
}

void RespondSystemTimeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondSystemTimeRequest*>(&to_msg);
  auto& from = static_cast<const RespondSystemTimeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondSystemTimeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_system_time_feedback() != 0) {
    _this->_internal_set_system_time_feedback(from._internal_system_time_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondSystemTimeRequest::CopyFrom(const RespondSystemTimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondSystemTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondSystemTimeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondSystemTimeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondSystemTimeRequest::InternalSwap(RespondSystemTimeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.system_time_feedback_, other->_impl_.system_time_feedback_);
}

::google::protobuf::Metadata RespondSystemTimeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[52]);
}
// ===================================================================

class RespondSystemTimeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondSystemTimeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondSystemTimeResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondSystemTimeResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondSystemTimeResponse::_Internal::camera_server_result(const RespondSystemTimeResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondSystemTimeResponse::RespondSystemTimeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondSystemTimeResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondSystemTimeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondSystemTimeResponse::RespondSystemTimeResponse(
    ::google::protobuf::Arena* arena,
    const RespondSystemTimeResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondSystemTimeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondSystemTimeResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondSystemTimeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondSystemTimeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondSystemTimeResponse::~RespondSystemTimeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondSystemTimeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondSystemTimeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondSystemTimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondSystemTimeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondSystemTimeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondSystemTimeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondSystemTimeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondSystemTimeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondSystemTimeResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondSystemTimeResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondSystemTimeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondSystemTimeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondSystemTimeResponse)
  return target;
}

::size_t RespondSystemTimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondSystemTimeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondSystemTimeResponse::_class_data_ = {
    RespondSystemTimeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondSystemTimeResponse::GetClassData() const {
  return &_class_data_;
}

void RespondSystemTimeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondSystemTimeResponse*>(&to_msg);
  auto& from = static_cast<const RespondSystemTimeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondSystemTimeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondSystemTimeResponse::CopyFrom(const RespondSystemTimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondSystemTimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondSystemTimeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondSystemTimeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondSystemTimeResponse::InternalSwap(RespondSystemTimeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondSystemTimeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[53]);
}
// ===================================================================

class SubscribeZoomRangeRequest::_Internal {
 public:
};

SubscribeZoomRangeRequest::SubscribeZoomRangeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.SubscribeZoomRangeRequest)
}
SubscribeZoomRangeRequest::SubscribeZoomRangeRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeZoomRangeRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SubscribeZoomRangeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.SubscribeZoomRangeRequest)
}









::google::protobuf::Metadata SubscribeZoomRangeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[54]);
}
// ===================================================================

class ZoomRangeResponse::_Internal {
 public:
};

ZoomRangeResponse::ZoomRangeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.ZoomRangeResponse)
}
ZoomRangeResponse::ZoomRangeResponse(
    ::google::protobuf::Arena* arena, const ZoomRangeResponse& from)
    : ZoomRangeResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ZoomRangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ZoomRangeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.factor_ = {};
}
ZoomRangeResponse::~ZoomRangeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.ZoomRangeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ZoomRangeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ZoomRangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.ZoomRangeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.factor_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ZoomRangeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ZoomRangeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ZoomRangeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float factor = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(ZoomRangeResponse, _impl_.factor_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float factor = 1;
    {PROTOBUF_FIELD_OFFSET(ZoomRangeResponse, _impl_.factor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ZoomRangeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.ZoomRangeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float factor = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_factor = this->_internal_factor();
  ::uint32_t raw_factor;
  memcpy(&raw_factor, &tmp_factor, sizeof(tmp_factor));
  if (raw_factor != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_factor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.ZoomRangeResponse)
  return target;
}

::size_t ZoomRangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.ZoomRangeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float factor = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_factor = this->_internal_factor();
  ::uint32_t raw_factor;
  memcpy(&raw_factor, &tmp_factor, sizeof(tmp_factor));
  if (raw_factor != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ZoomRangeResponse::_class_data_ = {
    ZoomRangeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ZoomRangeResponse::GetClassData() const {
  return &_class_data_;
}

void ZoomRangeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ZoomRangeResponse*>(&to_msg);
  auto& from = static_cast<const ZoomRangeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.ZoomRangeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_factor = from._internal_factor();
  ::uint32_t raw_factor;
  memcpy(&raw_factor, &tmp_factor, sizeof(tmp_factor));
  if (raw_factor != 0) {
    _this->_internal_set_factor(from._internal_factor());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ZoomRangeResponse::CopyFrom(const ZoomRangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.ZoomRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ZoomRangeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ZoomRangeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ZoomRangeResponse::InternalSwap(ZoomRangeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.factor_, other->_impl_.factor_);
}

::google::protobuf::Metadata ZoomRangeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[55]);
}
// ===================================================================

class RespondZoomRangeRequest::_Internal {
 public:
};

RespondZoomRangeRequest::RespondZoomRangeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
}
RespondZoomRangeRequest::RespondZoomRangeRequest(
    ::google::protobuf::Arena* arena, const RespondZoomRangeRequest& from)
    : RespondZoomRangeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RespondZoomRangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondZoomRangeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.zoom_range_feedback_ = {};
}
RespondZoomRangeRequest::~RespondZoomRangeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondZoomRangeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondZoomRangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.zoom_range_feedback_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondZoomRangeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RespondZoomRangeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RespondZoomRangeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraFeedback zoom_range_feedback = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RespondZoomRangeRequest, _impl_.zoom_range_feedback_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RespondZoomRangeRequest, _impl_.zoom_range_feedback_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraFeedback zoom_range_feedback = 1;
    {PROTOBUF_FIELD_OFFSET(RespondZoomRangeRequest, _impl_.zoom_range_feedback_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RespondZoomRangeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback zoom_range_feedback = 1;
  if (this->_internal_zoom_range_feedback() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_zoom_range_feedback(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  return target;
}

::size_t RespondZoomRangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraFeedback zoom_range_feedback = 1;
  if (this->_internal_zoom_range_feedback() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_zoom_range_feedback());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondZoomRangeRequest::_class_data_ = {
    RespondZoomRangeRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondZoomRangeRequest::GetClassData() const {
  return &_class_data_;
}

void RespondZoomRangeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondZoomRangeRequest*>(&to_msg);
  auto& from = static_cast<const RespondZoomRangeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_zoom_range_feedback() != 0) {
    _this->_internal_set_zoom_range_feedback(from._internal_zoom_range_feedback());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondZoomRangeRequest::CopyFrom(const RespondZoomRangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondZoomRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondZoomRangeRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondZoomRangeRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondZoomRangeRequest::InternalSwap(RespondZoomRangeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.zoom_range_feedback_, other->_impl_.zoom_range_feedback_);
}

::google::protobuf::Metadata RespondZoomRangeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[56]);
}
// ===================================================================

class RespondZoomRangeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<RespondZoomRangeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RespondZoomRangeResponse, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::CameraServerResult& camera_server_result(const RespondZoomRangeResponse* msg);
  static void set_has_camera_server_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::CameraServerResult& RespondZoomRangeResponse::_Internal::camera_server_result(const RespondZoomRangeResponse* msg) {
  return *msg->_impl_.camera_server_result_;
}
RespondZoomRangeResponse::RespondZoomRangeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondZoomRangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RespondZoomRangeResponse::RespondZoomRangeResponse(
    ::google::protobuf::Arena* arena,
    const RespondZoomRangeResponse& from)
    : ::google::protobuf::Message(arena) {
  RespondZoomRangeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.camera_server_result_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::CameraServerResult>(arena, *from._impl_.camera_server_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
}
inline PROTOBUF_NDEBUG_INLINE RespondZoomRangeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RespondZoomRangeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.camera_server_result_ = {};
}
RespondZoomRangeResponse::~RespondZoomRangeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RespondZoomRangeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.camera_server_result_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RespondZoomRangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.camera_server_result_ != nullptr);
    _impl_.camera_server_result_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RespondZoomRangeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RespondZoomRangeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RespondZoomRangeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RespondZoomRangeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RespondZoomRangeResponse, _impl_.camera_server_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
    {PROTOBUF_FIELD_OFFSET(RespondZoomRangeResponse, _impl_.camera_server_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::CameraServerResult>()},
  }}, {{
  }},
};

::uint8_t* RespondZoomRangeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::camera_server_result(this),
        _Internal::camera_server_result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  return target;
}

::size_t RespondZoomRangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult camera_server_result = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.camera_server_result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RespondZoomRangeResponse::_class_data_ = {
    RespondZoomRangeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RespondZoomRangeResponse::GetClassData() const {
  return &_class_data_;
}

void RespondZoomRangeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RespondZoomRangeResponse*>(&to_msg);
  auto& from = static_cast<const RespondZoomRangeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_camera_server_result()->::mavsdk::rpc::camera_server::CameraServerResult::MergeFrom(
        from._internal_camera_server_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RespondZoomRangeResponse::CopyFrom(const RespondZoomRangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.RespondZoomRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RespondZoomRangeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RespondZoomRangeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RespondZoomRangeResponse::InternalSwap(RespondZoomRangeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.camera_server_result_, other->_impl_.camera_server_result_);
}

::google::protobuf::Metadata RespondZoomRangeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[57]);
}
// ===================================================================

class Information::_Internal {
 public:
};

Information::Information(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.Information)
}
inline PROTOBUF_NDEBUG_INLINE Information::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : camera_cap_flags_{visibility, arena, from.camera_cap_flags_},
        _camera_cap_flags_cached_byte_size_{0},
        vendor_name_(arena, from.vendor_name_),
        model_name_(arena, from.model_name_),
        firmware_version_(arena, from.firmware_version_),
        definition_file_uri_(arena, from.definition_file_uri_),
        _cached_size_{0} {}

Information::Information(
    ::google::protobuf::Arena* arena,
    const Information& from)
    : ::google::protobuf::Message(arena) {
  Information* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, focal_length_mm_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, focal_length_mm_),
           offsetof(Impl_, definition_file_version_) -
               offsetof(Impl_, focal_length_mm_) +
               sizeof(Impl_::definition_file_version_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.Information)
}
inline PROTOBUF_NDEBUG_INLINE Information::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : camera_cap_flags_{visibility, arena},
        _camera_cap_flags_cached_byte_size_{0},
        vendor_name_(arena),
        model_name_(arena),
        firmware_version_(arena),
        definition_file_uri_(arena),
        _cached_size_{0} {}

inline void Information::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, focal_length_mm_),
           0,
           offsetof(Impl_, definition_file_version_) -
               offsetof(Impl_, focal_length_mm_) +
               sizeof(Impl_::definition_file_version_));
}
Information::~Information() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.Information)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Information::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.vendor_name_.Destroy();
  _impl_.model_name_.Destroy();
  _impl_.firmware_version_.Destroy();
  _impl_.definition_file_uri_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Information::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.Information)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.camera_cap_flags_.Clear();
  _impl_.vendor_name_.ClearToEmpty();
  _impl_.model_name_.ClearToEmpty();
  _impl_.firmware_version_.ClearToEmpty();
  _impl_.definition_file_uri_.ClearToEmpty();
  ::memset(&_impl_.focal_length_mm_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.definition_file_version_) -
      reinterpret_cast<char*>(&_impl_.focal_length_mm_)) + sizeof(_impl_.definition_file_version_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Information::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 109, 2> Information::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Information_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string vendor_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.vendor_name_)}},
    // string model_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.model_name_)}},
    // string firmware_version = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.firmware_version_)}},
    // float focal_length_mm = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.focal_length_mm_)}},
    // float horizontal_sensor_size_mm = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.horizontal_sensor_size_mm_)}},
    // float vertical_sensor_size_mm = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.vertical_sensor_size_mm_)}},
    // uint32 horizontal_resolution_px = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Information, _impl_.horizontal_resolution_px_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.horizontal_resolution_px_)}},
    // uint32 vertical_resolution_px = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Information, _impl_.vertical_resolution_px_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.vertical_resolution_px_)}},
    // uint32 lens_id = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Information, _impl_.lens_id_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.lens_id_)}},
    // uint32 definition_file_version = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Information, _impl_.definition_file_version_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.definition_file_version_)}},
    // string definition_file_uri = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.definition_file_uri_)}},
    // repeated .mavsdk.rpc.camera_server.Information.CameraCapFlags camera_cap_flags = 12;
    {::_pbi::TcParser::FastV32P1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(Information, _impl_.camera_cap_flags_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string vendor_name = 1;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.vendor_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string model_name = 2;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.model_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string firmware_version = 3;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.firmware_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float focal_length_mm = 4;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.focal_length_mm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float horizontal_sensor_size_mm = 5;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.horizontal_sensor_size_mm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float vertical_sensor_size_mm = 6;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.vertical_sensor_size_mm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 horizontal_resolution_px = 7;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.horizontal_resolution_px_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 vertical_resolution_px = 8;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.vertical_resolution_px_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 lens_id = 9;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.lens_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 definition_file_version = 10;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.definition_file_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string definition_file_uri = 11;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.definition_file_uri_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .mavsdk.rpc.camera_server.Information.CameraCapFlags camera_cap_flags = 12;
    {PROTOBUF_FIELD_OFFSET(Information, _impl_.camera_cap_flags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
    "\44\13\12\20\0\0\0\0\0\0\0\23\0\0\0\0"
    "mavsdk.rpc.camera_server.Information"
    "vendor_name"
    "model_name"
    "firmware_version"
    "definition_file_uri"
  }},
};

::uint8_t* Information::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.Information)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string vendor_name = 1;
  if (!this->_internal_vendor_name().empty()) {
    const std::string& _s = this->_internal_vendor_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera_server.Information.vendor_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    const std::string& _s = this->_internal_model_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera_server.Information.model_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string firmware_version = 3;
  if (!this->_internal_firmware_version().empty()) {
    const std::string& _s = this->_internal_firmware_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera_server.Information.firmware_version");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // float focal_length_mm = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_focal_length_mm = this->_internal_focal_length_mm();
  ::uint32_t raw_focal_length_mm;
  memcpy(&raw_focal_length_mm, &tmp_focal_length_mm, sizeof(tmp_focal_length_mm));
  if (raw_focal_length_mm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_focal_length_mm(), target);
  }

  // float horizontal_sensor_size_mm = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_sensor_size_mm = this->_internal_horizontal_sensor_size_mm();
  ::uint32_t raw_horizontal_sensor_size_mm;
  memcpy(&raw_horizontal_sensor_size_mm, &tmp_horizontal_sensor_size_mm, sizeof(tmp_horizontal_sensor_size_mm));
  if (raw_horizontal_sensor_size_mm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_horizontal_sensor_size_mm(), target);
  }

  // float vertical_sensor_size_mm = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_vertical_sensor_size_mm = this->_internal_vertical_sensor_size_mm();
  ::uint32_t raw_vertical_sensor_size_mm;
  memcpy(&raw_vertical_sensor_size_mm, &tmp_vertical_sensor_size_mm, sizeof(tmp_vertical_sensor_size_mm));
  if (raw_vertical_sensor_size_mm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_vertical_sensor_size_mm(), target);
  }

  // uint32 horizontal_resolution_px = 7;
  if (this->_internal_horizontal_resolution_px() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_horizontal_resolution_px(), target);
  }

  // uint32 vertical_resolution_px = 8;
  if (this->_internal_vertical_resolution_px() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_vertical_resolution_px(), target);
  }

  // uint32 lens_id = 9;
  if (this->_internal_lens_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_lens_id(), target);
  }

  // uint32 definition_file_version = 10;
  if (this->_internal_definition_file_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this->_internal_definition_file_version(), target);
  }

  // string definition_file_uri = 11;
  if (!this->_internal_definition_file_uri().empty()) {
    const std::string& _s = this->_internal_definition_file_uri();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera_server.Information.definition_file_uri");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // repeated .mavsdk.rpc.camera_server.Information.CameraCapFlags camera_cap_flags = 12;
  {
    std::size_t byte_size = _impl_._camera_cap_flags_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(12, _internal_camera_cap_flags(),
                                       byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.Information)
  return target;
}

::size_t Information::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.Information)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .mavsdk.rpc.camera_server.Information.CameraCapFlags camera_cap_flags = 12;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_camera_cap_flags_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_camera_cap_flags().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._camera_cap_flags_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // string vendor_name = 1;
  if (!this->_internal_vendor_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_vendor_name());
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_model_name());
  }

  // string firmware_version = 3;
  if (!this->_internal_firmware_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_firmware_version());
  }

  // string definition_file_uri = 11;
  if (!this->_internal_definition_file_uri().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_definition_file_uri());
  }

  // float focal_length_mm = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_focal_length_mm = this->_internal_focal_length_mm();
  ::uint32_t raw_focal_length_mm;
  memcpy(&raw_focal_length_mm, &tmp_focal_length_mm, sizeof(tmp_focal_length_mm));
  if (raw_focal_length_mm != 0) {
    total_size += 5;
  }

  // float horizontal_sensor_size_mm = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_sensor_size_mm = this->_internal_horizontal_sensor_size_mm();
  ::uint32_t raw_horizontal_sensor_size_mm;
  memcpy(&raw_horizontal_sensor_size_mm, &tmp_horizontal_sensor_size_mm, sizeof(tmp_horizontal_sensor_size_mm));
  if (raw_horizontal_sensor_size_mm != 0) {
    total_size += 5;
  }

  // float vertical_sensor_size_mm = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_vertical_sensor_size_mm = this->_internal_vertical_sensor_size_mm();
  ::uint32_t raw_vertical_sensor_size_mm;
  memcpy(&raw_vertical_sensor_size_mm, &tmp_vertical_sensor_size_mm, sizeof(tmp_vertical_sensor_size_mm));
  if (raw_vertical_sensor_size_mm != 0) {
    total_size += 5;
  }

  // uint32 horizontal_resolution_px = 7;
  if (this->_internal_horizontal_resolution_px() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_horizontal_resolution_px());
  }

  // uint32 vertical_resolution_px = 8;
  if (this->_internal_vertical_resolution_px() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_vertical_resolution_px());
  }

  // uint32 lens_id = 9;
  if (this->_internal_lens_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_lens_id());
  }

  // uint32 definition_file_version = 10;
  if (this->_internal_definition_file_version() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_definition_file_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Information::_class_data_ = {
    Information::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Information::GetClassData() const {
  return &_class_data_;
}

void Information::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Information*>(&to_msg);
  auto& from = static_cast<const Information&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.Information)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_camera_cap_flags()->MergeFrom(from._internal_camera_cap_flags());
  if (!from._internal_vendor_name().empty()) {
    _this->_internal_set_vendor_name(from._internal_vendor_name());
  }
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_firmware_version().empty()) {
    _this->_internal_set_firmware_version(from._internal_firmware_version());
  }
  if (!from._internal_definition_file_uri().empty()) {
    _this->_internal_set_definition_file_uri(from._internal_definition_file_uri());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_focal_length_mm = from._internal_focal_length_mm();
  ::uint32_t raw_focal_length_mm;
  memcpy(&raw_focal_length_mm, &tmp_focal_length_mm, sizeof(tmp_focal_length_mm));
  if (raw_focal_length_mm != 0) {
    _this->_internal_set_focal_length_mm(from._internal_focal_length_mm());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_sensor_size_mm = from._internal_horizontal_sensor_size_mm();
  ::uint32_t raw_horizontal_sensor_size_mm;
  memcpy(&raw_horizontal_sensor_size_mm, &tmp_horizontal_sensor_size_mm, sizeof(tmp_horizontal_sensor_size_mm));
  if (raw_horizontal_sensor_size_mm != 0) {
    _this->_internal_set_horizontal_sensor_size_mm(from._internal_horizontal_sensor_size_mm());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_vertical_sensor_size_mm = from._internal_vertical_sensor_size_mm();
  ::uint32_t raw_vertical_sensor_size_mm;
  memcpy(&raw_vertical_sensor_size_mm, &tmp_vertical_sensor_size_mm, sizeof(tmp_vertical_sensor_size_mm));
  if (raw_vertical_sensor_size_mm != 0) {
    _this->_internal_set_vertical_sensor_size_mm(from._internal_vertical_sensor_size_mm());
  }
  if (from._internal_horizontal_resolution_px() != 0) {
    _this->_internal_set_horizontal_resolution_px(from._internal_horizontal_resolution_px());
  }
  if (from._internal_vertical_resolution_px() != 0) {
    _this->_internal_set_vertical_resolution_px(from._internal_vertical_resolution_px());
  }
  if (from._internal_lens_id() != 0) {
    _this->_internal_set_lens_id(from._internal_lens_id());
  }
  if (from._internal_definition_file_version() != 0) {
    _this->_internal_set_definition_file_version(from._internal_definition_file_version());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Information::CopyFrom(const Information& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.Information)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Information::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Information::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Information::InternalSwap(Information* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.camera_cap_flags_.InternalSwap(&other->_impl_.camera_cap_flags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vendor_name_, &other->_impl_.vendor_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_name_, &other->_impl_.model_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.firmware_version_, &other->_impl_.firmware_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.definition_file_uri_, &other->_impl_.definition_file_uri_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Information, _impl_.definition_file_version_)
      + sizeof(Information::_impl_.definition_file_version_)
      - PROTOBUF_FIELD_OFFSET(Information, _impl_.focal_length_mm_)>(
          reinterpret_cast<char*>(&_impl_.focal_length_mm_),
          reinterpret_cast<char*>(&other->_impl_.focal_length_mm_));
}

::google::protobuf::Metadata Information::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[58]);
}
// ===================================================================

class VideoStreamSettings::_Internal {
 public:
};

VideoStreamSettings::VideoStreamSettings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.VideoStreamSettings)
}
inline PROTOBUF_NDEBUG_INLINE VideoStreamSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : uri_(arena, from.uri_),
        _cached_size_{0} {}

VideoStreamSettings::VideoStreamSettings(
    ::google::protobuf::Arena* arena,
    const VideoStreamSettings& from)
    : ::google::protobuf::Message(arena) {
  VideoStreamSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, frame_rate_hz_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, frame_rate_hz_),
           offsetof(Impl_, horizontal_fov_deg_) -
               offsetof(Impl_, frame_rate_hz_) +
               sizeof(Impl_::horizontal_fov_deg_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.VideoStreamSettings)
}
inline PROTOBUF_NDEBUG_INLINE VideoStreamSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uri_(arena),
        _cached_size_{0} {}

inline void VideoStreamSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, frame_rate_hz_),
           0,
           offsetof(Impl_, horizontal_fov_deg_) -
               offsetof(Impl_, frame_rate_hz_) +
               sizeof(Impl_::horizontal_fov_deg_));
}
VideoStreamSettings::~VideoStreamSettings() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.VideoStreamSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VideoStreamSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uri_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VideoStreamSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.VideoStreamSettings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uri_.ClearToEmpty();
  ::memset(&_impl_.frame_rate_hz_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.horizontal_fov_deg_) -
      reinterpret_cast<char*>(&_impl_.frame_rate_hz_)) + sizeof(_impl_.horizontal_fov_deg_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VideoStreamSettings::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 56, 2> VideoStreamSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VideoStreamSettings_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float frame_rate_hz = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.frame_rate_hz_)}},
    // uint32 horizontal_resolution_pix = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamSettings, _impl_.horizontal_resolution_pix_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.horizontal_resolution_pix_)}},
    // uint32 vertical_resolution_pix = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamSettings, _impl_.vertical_resolution_pix_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.vertical_resolution_pix_)}},
    // uint32 bit_rate_b_s = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamSettings, _impl_.bit_rate_b_s_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.bit_rate_b_s_)}},
    // uint32 rotation_deg = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamSettings, _impl_.rotation_deg_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.rotation_deg_)}},
    // string uri = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.uri_)}},
    // float horizontal_fov_deg = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.horizontal_fov_deg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float frame_rate_hz = 1;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.frame_rate_hz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 horizontal_resolution_pix = 2;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.horizontal_resolution_pix_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 vertical_resolution_pix = 3;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.vertical_resolution_pix_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 bit_rate_b_s = 4;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.bit_rate_b_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 rotation_deg = 5;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.rotation_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string uri = 6;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.uri_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float horizontal_fov_deg = 7;
    {PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.horizontal_fov_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\54\0\0\0\0\0\3\0"
    "mavsdk.rpc.camera_server.VideoStreamSettings"
    "uri"
  }},
};

::uint8_t* VideoStreamSettings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.VideoStreamSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float frame_rate_hz = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_frame_rate_hz = this->_internal_frame_rate_hz();
  ::uint32_t raw_frame_rate_hz;
  memcpy(&raw_frame_rate_hz, &tmp_frame_rate_hz, sizeof(tmp_frame_rate_hz));
  if (raw_frame_rate_hz != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_frame_rate_hz(), target);
  }

  // uint32 horizontal_resolution_pix = 2;
  if (this->_internal_horizontal_resolution_pix() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_horizontal_resolution_pix(), target);
  }

  // uint32 vertical_resolution_pix = 3;
  if (this->_internal_vertical_resolution_pix() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_vertical_resolution_pix(), target);
  }

  // uint32 bit_rate_b_s = 4;
  if (this->_internal_bit_rate_b_s() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_bit_rate_b_s(), target);
  }

  // uint32 rotation_deg = 5;
  if (this->_internal_rotation_deg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_rotation_deg(), target);
  }

  // string uri = 6;
  if (!this->_internal_uri().empty()) {
    const std::string& _s = this->_internal_uri();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera_server.VideoStreamSettings.uri");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // float horizontal_fov_deg = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_fov_deg = this->_internal_horizontal_fov_deg();
  ::uint32_t raw_horizontal_fov_deg;
  memcpy(&raw_horizontal_fov_deg, &tmp_horizontal_fov_deg, sizeof(tmp_horizontal_fov_deg));
  if (raw_horizontal_fov_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_horizontal_fov_deg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.VideoStreamSettings)
  return target;
}

::size_t VideoStreamSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.VideoStreamSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 6;
  if (!this->_internal_uri().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uri());
  }

  // float frame_rate_hz = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_frame_rate_hz = this->_internal_frame_rate_hz();
  ::uint32_t raw_frame_rate_hz;
  memcpy(&raw_frame_rate_hz, &tmp_frame_rate_hz, sizeof(tmp_frame_rate_hz));
  if (raw_frame_rate_hz != 0) {
    total_size += 5;
  }

  // uint32 horizontal_resolution_pix = 2;
  if (this->_internal_horizontal_resolution_pix() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_horizontal_resolution_pix());
  }

  // uint32 vertical_resolution_pix = 3;
  if (this->_internal_vertical_resolution_pix() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_vertical_resolution_pix());
  }

  // uint32 bit_rate_b_s = 4;
  if (this->_internal_bit_rate_b_s() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_bit_rate_b_s());
  }

  // uint32 rotation_deg = 5;
  if (this->_internal_rotation_deg() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_rotation_deg());
  }

  // float horizontal_fov_deg = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_fov_deg = this->_internal_horizontal_fov_deg();
  ::uint32_t raw_horizontal_fov_deg;
  memcpy(&raw_horizontal_fov_deg, &tmp_horizontal_fov_deg, sizeof(tmp_horizontal_fov_deg));
  if (raw_horizontal_fov_deg != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VideoStreamSettings::_class_data_ = {
    VideoStreamSettings::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VideoStreamSettings::GetClassData() const {
  return &_class_data_;
}

void VideoStreamSettings::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VideoStreamSettings*>(&to_msg);
  auto& from = static_cast<const VideoStreamSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.VideoStreamSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_frame_rate_hz = from._internal_frame_rate_hz();
  ::uint32_t raw_frame_rate_hz;
  memcpy(&raw_frame_rate_hz, &tmp_frame_rate_hz, sizeof(tmp_frame_rate_hz));
  if (raw_frame_rate_hz != 0) {
    _this->_internal_set_frame_rate_hz(from._internal_frame_rate_hz());
  }
  if (from._internal_horizontal_resolution_pix() != 0) {
    _this->_internal_set_horizontal_resolution_pix(from._internal_horizontal_resolution_pix());
  }
  if (from._internal_vertical_resolution_pix() != 0) {
    _this->_internal_set_vertical_resolution_pix(from._internal_vertical_resolution_pix());
  }
  if (from._internal_bit_rate_b_s() != 0) {
    _this->_internal_set_bit_rate_b_s(from._internal_bit_rate_b_s());
  }
  if (from._internal_rotation_deg() != 0) {
    _this->_internal_set_rotation_deg(from._internal_rotation_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_horizontal_fov_deg = from._internal_horizontal_fov_deg();
  ::uint32_t raw_horizontal_fov_deg;
  memcpy(&raw_horizontal_fov_deg, &tmp_horizontal_fov_deg, sizeof(tmp_horizontal_fov_deg));
  if (raw_horizontal_fov_deg != 0) {
    _this->_internal_set_horizontal_fov_deg(from._internal_horizontal_fov_deg());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VideoStreamSettings::CopyFrom(const VideoStreamSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.VideoStreamSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VideoStreamSettings::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VideoStreamSettings::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VideoStreamSettings::InternalSwap(VideoStreamSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uri_, &other->_impl_.uri_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.horizontal_fov_deg_)
      + sizeof(VideoStreamSettings::_impl_.horizontal_fov_deg_)
      - PROTOBUF_FIELD_OFFSET(VideoStreamSettings, _impl_.frame_rate_hz_)>(
          reinterpret_cast<char*>(&_impl_.frame_rate_hz_),
          reinterpret_cast<char*>(&other->_impl_.frame_rate_hz_));
}

::google::protobuf::Metadata VideoStreamSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[59]);
}
// ===================================================================

class VideoStreamInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<VideoStreamInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::VideoStreamSettings& settings(const VideoStreamInfo* msg);
  static void set_has_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mavsdk::rpc::camera_server::VideoStreamSettings& VideoStreamInfo::_Internal::settings(const VideoStreamInfo* msg) {
  return *msg->_impl_.settings_;
}
VideoStreamInfo::VideoStreamInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.VideoStreamInfo)
}
inline PROTOBUF_NDEBUG_INLINE VideoStreamInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VideoStreamInfo::VideoStreamInfo(
    ::google::protobuf::Arena* arena,
    const VideoStreamInfo& from)
    : ::google::protobuf::Message(arena) {
  VideoStreamInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.settings_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::VideoStreamSettings>(arena, *from._impl_.settings_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stream_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, stream_id_),
           offsetof(Impl_, spectrum_) -
               offsetof(Impl_, stream_id_) +
               sizeof(Impl_::spectrum_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.VideoStreamInfo)
}
inline PROTOBUF_NDEBUG_INLINE VideoStreamInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VideoStreamInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, settings_),
           0,
           offsetof(Impl_, spectrum_) -
               offsetof(Impl_, settings_) +
               sizeof(Impl_::spectrum_));
}
VideoStreamInfo::~VideoStreamInfo() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.VideoStreamInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VideoStreamInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.settings_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VideoStreamInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.VideoStreamInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.settings_ != nullptr);
    _impl_.settings_->Clear();
  }
  ::memset(&_impl_.stream_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.spectrum_) -
      reinterpret_cast<char*>(&_impl_.stream_id_)) + sizeof(_impl_.spectrum_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VideoStreamInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> VideoStreamInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VideoStreamInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .mavsdk.rpc.camera_server.VideoStreamInfo.VideoStreamSpectrum spectrum = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamInfo, _impl_.spectrum_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.spectrum_)}},
    // int32 stream_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamInfo, _impl_.stream_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.stream_id_)}},
    // .mavsdk.rpc.camera_server.VideoStreamSettings settings = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.settings_)}},
    // .mavsdk.rpc.camera_server.VideoStreamInfo.VideoStreamStatus status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoStreamInfo, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 stream_id = 1;
    {PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.stream_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .mavsdk.rpc.camera_server.VideoStreamSettings settings = 2;
    {PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.settings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.camera_server.VideoStreamInfo.VideoStreamStatus status = 3;
    {PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.camera_server.VideoStreamInfo.VideoStreamSpectrum spectrum = 4;
    {PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.spectrum_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::VideoStreamSettings>()},
  }}, {{
  }},
};

::uint8_t* VideoStreamInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.VideoStreamInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_stream_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.VideoStreamSettings settings = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::settings(this),
        _Internal::settings(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.camera_server.VideoStreamInfo.VideoStreamStatus status = 3;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_status(), target);
  }

  // .mavsdk.rpc.camera_server.VideoStreamInfo.VideoStreamSpectrum spectrum = 4;
  if (this->_internal_spectrum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_spectrum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.VideoStreamInfo)
  return target;
}

::size_t VideoStreamInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.VideoStreamInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.VideoStreamSettings settings = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.settings_);
  }

  // int32 stream_id = 1;
  if (this->_internal_stream_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_stream_id());
  }

  // .mavsdk.rpc.camera_server.VideoStreamInfo.VideoStreamStatus status = 3;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  // .mavsdk.rpc.camera_server.VideoStreamInfo.VideoStreamSpectrum spectrum = 4;
  if (this->_internal_spectrum() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_spectrum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VideoStreamInfo::_class_data_ = {
    VideoStreamInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VideoStreamInfo::GetClassData() const {
  return &_class_data_;
}

void VideoStreamInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VideoStreamInfo*>(&to_msg);
  auto& from = static_cast<const VideoStreamInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.VideoStreamInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_settings()->::mavsdk::rpc::camera_server::VideoStreamSettings::MergeFrom(
        from._internal_settings());
  }
  if (from._internal_stream_id() != 0) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_spectrum() != 0) {
    _this->_internal_set_spectrum(from._internal_spectrum());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VideoStreamInfo::CopyFrom(const VideoStreamInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.VideoStreamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VideoStreamInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VideoStreamInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VideoStreamInfo::InternalSwap(VideoStreamInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.spectrum_)
      + sizeof(VideoStreamInfo::_impl_.spectrum_)
      - PROTOBUF_FIELD_OFFSET(VideoStreamInfo, _impl_.settings_)>(
          reinterpret_cast<char*>(&_impl_.settings_),
          reinterpret_cast<char*>(&other->_impl_.settings_));
}

::google::protobuf::Metadata VideoStreamInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[60]);
}
// ===================================================================

class Position::_Internal {
 public:
};

Position::Position(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.Position)
}
Position::Position(
    ::google::protobuf::Arena* arena, const Position& from)
    : Position(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Position::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Position::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_deg_),
           0,
           offsetof(Impl_, relative_altitude_m_) -
               offsetof(Impl_, latitude_deg_) +
               sizeof(Impl_::relative_altitude_m_));
}
Position::~Position() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.Position)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Position::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.Position)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.relative_altitude_m_) -
      reinterpret_cast<char*>(&_impl_.latitude_deg_)) + sizeof(_impl_.relative_altitude_m_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Position::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Position::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Position_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float relative_altitude_m = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.relative_altitude_m_)}},
    // double latitude_deg = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_deg_)}},
    // double longitude_deg = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.longitude_deg_)}},
    // float absolute_altitude_m = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.absolute_altitude_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double latitude_deg = 1;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longitude_deg = 2;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.longitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // float absolute_altitude_m = 3;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.absolute_altitude_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float relative_altitude_m = 4;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.relative_altitude_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Position::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.Position)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double latitude_deg = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_deg = this->_internal_latitude_deg();
  ::uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_latitude_deg(), target);
  }

  // double longitude_deg = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_deg = this->_internal_longitude_deg();
  ::uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_longitude_deg(), target);
  }

  // float absolute_altitude_m = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_absolute_altitude_m = this->_internal_absolute_altitude_m();
  ::uint32_t raw_absolute_altitude_m;
  memcpy(&raw_absolute_altitude_m, &tmp_absolute_altitude_m, sizeof(tmp_absolute_altitude_m));
  if (raw_absolute_altitude_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_absolute_altitude_m(), target);
  }

  // float relative_altitude_m = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_relative_altitude_m = this->_internal_relative_altitude_m();
  ::uint32_t raw_relative_altitude_m;
  memcpy(&raw_relative_altitude_m, &tmp_relative_altitude_m, sizeof(tmp_relative_altitude_m));
  if (raw_relative_altitude_m != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_relative_altitude_m(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.Position)
  return target;
}

::size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.Position)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double latitude_deg = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_deg = this->_internal_latitude_deg();
  ::uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    total_size += 9;
  }

  // double longitude_deg = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_deg = this->_internal_longitude_deg();
  ::uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    total_size += 9;
  }

  // float absolute_altitude_m = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_absolute_altitude_m = this->_internal_absolute_altitude_m();
  ::uint32_t raw_absolute_altitude_m;
  memcpy(&raw_absolute_altitude_m, &tmp_absolute_altitude_m, sizeof(tmp_absolute_altitude_m));
  if (raw_absolute_altitude_m != 0) {
    total_size += 5;
  }

  // float relative_altitude_m = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_relative_altitude_m = this->_internal_relative_altitude_m();
  ::uint32_t raw_relative_altitude_m;
  memcpy(&raw_relative_altitude_m, &tmp_relative_altitude_m, sizeof(tmp_relative_altitude_m));
  if (raw_relative_altitude_m != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Position::_class_data_ = {
    Position::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Position::GetClassData() const {
  return &_class_data_;
}

void Position::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Position*>(&to_msg);
  auto& from = static_cast<const Position&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.Position)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_latitude_deg = from._internal_latitude_deg();
  ::uint64_t raw_latitude_deg;
  memcpy(&raw_latitude_deg, &tmp_latitude_deg, sizeof(tmp_latitude_deg));
  if (raw_latitude_deg != 0) {
    _this->_internal_set_latitude_deg(from._internal_latitude_deg());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_longitude_deg = from._internal_longitude_deg();
  ::uint64_t raw_longitude_deg;
  memcpy(&raw_longitude_deg, &tmp_longitude_deg, sizeof(tmp_longitude_deg));
  if (raw_longitude_deg != 0) {
    _this->_internal_set_longitude_deg(from._internal_longitude_deg());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_absolute_altitude_m = from._internal_absolute_altitude_m();
  ::uint32_t raw_absolute_altitude_m;
  memcpy(&raw_absolute_altitude_m, &tmp_absolute_altitude_m, sizeof(tmp_absolute_altitude_m));
  if (raw_absolute_altitude_m != 0) {
    _this->_internal_set_absolute_altitude_m(from._internal_absolute_altitude_m());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_relative_altitude_m = from._internal_relative_altitude_m();
  ::uint32_t raw_relative_altitude_m;
  memcpy(&raw_relative_altitude_m, &tmp_relative_altitude_m, sizeof(tmp_relative_altitude_m));
  if (raw_relative_altitude_m != 0) {
    _this->_internal_set_relative_altitude_m(from._internal_relative_altitude_m());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Position::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Position::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Position::InternalSwap(Position* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Position, _impl_.relative_altitude_m_)
      + sizeof(Position::_impl_.relative_altitude_m_)
      - PROTOBUF_FIELD_OFFSET(Position, _impl_.latitude_deg_)>(
          reinterpret_cast<char*>(&_impl_.latitude_deg_),
          reinterpret_cast<char*>(&other->_impl_.latitude_deg_));
}

::google::protobuf::Metadata Position::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[61]);
}
// ===================================================================

class Quaternion::_Internal {
 public:
};

Quaternion::Quaternion(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.Quaternion)
}
Quaternion::Quaternion(
    ::google::protobuf::Arena* arena, const Quaternion& from)
    : Quaternion(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Quaternion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Quaternion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, w_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, w_) +
               sizeof(Impl_::z_));
}
Quaternion::~Quaternion() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.Quaternion)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Quaternion::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Quaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.Quaternion)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.w_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.w_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Quaternion::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Quaternion::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Quaternion_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float z = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_)}},
    // float w = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)}},
    // float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_)}},
    // float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float w = 1;
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float x = 2;
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 3;
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 4;
    {PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Quaternion::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.Quaternion)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float w = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_w = this->_internal_w();
  ::uint32_t raw_w;
  memcpy(&raw_w, &tmp_w, sizeof(tmp_w));
  if (raw_w != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_w(), target);
  }

  // float x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_x(), target);
  }

  // float y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_y(), target);
  }

  // float z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.Quaternion)
  return target;
}

::size_t Quaternion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.Quaternion)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float w = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_w = this->_internal_w();
  ::uint32_t raw_w;
  memcpy(&raw_w, &tmp_w, sizeof(tmp_w));
  if (raw_w != 0) {
    total_size += 5;
  }

  // float x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  // float z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Quaternion::_class_data_ = {
    Quaternion::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Quaternion::GetClassData() const {
  return &_class_data_;
}

void Quaternion::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Quaternion*>(&to_msg);
  auto& from = static_cast<const Quaternion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.Quaternion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_w = from._internal_w();
  ::uint32_t raw_w;
  memcpy(&raw_w, &tmp_w, sizeof(tmp_w));
  if (raw_w != 0) {
    _this->_internal_set_w(from._internal_w());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_internal_set_z(from._internal_z());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Quaternion::CopyFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Quaternion::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Quaternion::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Quaternion::InternalSwap(Quaternion* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.z_)
      + sizeof(Quaternion::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Quaternion, _impl_.w_)>(
          reinterpret_cast<char*>(&_impl_.w_),
          reinterpret_cast<char*>(&other->_impl_.w_));
}

::google::protobuf::Metadata Quaternion::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[62]);
}
// ===================================================================

class CaptureInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CaptureInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_._has_bits_);
  static const ::mavsdk::rpc::camera_server::Position& position(const CaptureInfo* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mavsdk::rpc::camera_server::Quaternion& attitude_quaternion(const CaptureInfo* msg);
  static void set_has_attitude_quaternion(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mavsdk::rpc::camera_server::Position& CaptureInfo::_Internal::position(const CaptureInfo* msg) {
  return *msg->_impl_.position_;
}
const ::mavsdk::rpc::camera_server::Quaternion& CaptureInfo::_Internal::attitude_quaternion(const CaptureInfo* msg) {
  return *msg->_impl_.attitude_quaternion_;
}
CaptureInfo::CaptureInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.CaptureInfo)
}
inline PROTOBUF_NDEBUG_INLINE CaptureInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        file_url_(arena, from.file_url_) {}

CaptureInfo::CaptureInfo(
    ::google::protobuf::Arena* arena,
    const CaptureInfo& from)
    : ::google::protobuf::Message(arena) {
  CaptureInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::Position>(arena, *from._impl_.position_)
                : nullptr;
  _impl_.attitude_quaternion_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::mavsdk::rpc::camera_server::Quaternion>(arena, *from._impl_.attitude_quaternion_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_utc_us_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, time_utc_us_),
           offsetof(Impl_, index_) -
               offsetof(Impl_, time_utc_us_) +
               sizeof(Impl_::index_));

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.CaptureInfo)
}
inline PROTOBUF_NDEBUG_INLINE CaptureInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        file_url_(arena) {}

inline void CaptureInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::index_));
}
CaptureInfo::~CaptureInfo() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.CaptureInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CaptureInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.file_url_.Destroy();
  delete _impl_.position_;
  delete _impl_.attitude_quaternion_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CaptureInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.CaptureInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_url_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.attitude_quaternion_ != nullptr);
      _impl_.attitude_quaternion_->Clear();
    }
  }
  ::memset(&_impl_.time_utc_us_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.index_) -
      reinterpret_cast<char*>(&_impl_.time_utc_us_)) + sizeof(_impl_.index_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CaptureInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 53, 2> CaptureInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CaptureInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .mavsdk.rpc.camera_server.Position position = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.position_)}},
    // .mavsdk.rpc.camera_server.Quaternion attitude_quaternion = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.attitude_quaternion_)}},
    // uint64 time_utc_us = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CaptureInfo, _impl_.time_utc_us_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.time_utc_us_)}},
    // bool is_success = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CaptureInfo, _impl_.is_success_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.is_success_)}},
    // int32 index = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CaptureInfo, _impl_.index_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.index_)}},
    // string file_url = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.file_url_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.Position position = 1;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .mavsdk.rpc.camera_server.Quaternion attitude_quaternion = 2;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.attitude_quaternion_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 time_utc_us = 3;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.time_utc_us_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool is_success = 4;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.is_success_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 index = 5;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string file_url = 6;
    {PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.file_url_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::Position>()},
    {::_pbi::TcParser::GetTable<::mavsdk::rpc::camera_server::Quaternion>()},
  }}, {{
    "\44\0\0\0\0\0\10\0"
    "mavsdk.rpc.camera_server.CaptureInfo"
    "file_url"
  }},
};

::uint8_t* CaptureInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.CaptureInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .mavsdk.rpc.camera_server.Position position = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // .mavsdk.rpc.camera_server.Quaternion attitude_quaternion = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::attitude_quaternion(this),
        _Internal::attitude_quaternion(this).GetCachedSize(), target, stream);
  }

  // uint64 time_utc_us = 3;
  if (this->_internal_time_utc_us() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_time_utc_us(), target);
  }

  // bool is_success = 4;
  if (this->_internal_is_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_is_success(), target);
  }

  // int32 index = 5;
  if (this->_internal_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_index(), target);
  }

  // string file_url = 6;
  if (!this->_internal_file_url().empty()) {
    const std::string& _s = this->_internal_file_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera_server.CaptureInfo.file_url");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.CaptureInfo)
  return target;
}

::size_t CaptureInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.CaptureInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_url = 6;
  if (!this->_internal_file_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_file_url());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .mavsdk.rpc.camera_server.Position position = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

    // .mavsdk.rpc.camera_server.Quaternion attitude_quaternion = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.attitude_quaternion_);
    }

  }
  // uint64 time_utc_us = 3;
  if (this->_internal_time_utc_us() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_time_utc_us());
  }

  // bool is_success = 4;
  if (this->_internal_is_success() != 0) {
    total_size += 2;
  }

  // int32 index = 5;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CaptureInfo::_class_data_ = {
    CaptureInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CaptureInfo::GetClassData() const {
  return &_class_data_;
}

void CaptureInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CaptureInfo*>(&to_msg);
  auto& from = static_cast<const CaptureInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.CaptureInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_url().empty()) {
    _this->_internal_set_file_url(from._internal_file_url());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_position()->::mavsdk::rpc::camera_server::Position::MergeFrom(
          from._internal_position());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_attitude_quaternion()->::mavsdk::rpc::camera_server::Quaternion::MergeFrom(
          from._internal_attitude_quaternion());
    }
  }
  if (from._internal_time_utc_us() != 0) {
    _this->_internal_set_time_utc_us(from._internal_time_utc_us());
  }
  if (from._internal_is_success() != 0) {
    _this->_internal_set_is_success(from._internal_is_success());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CaptureInfo::CopyFrom(const CaptureInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.CaptureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CaptureInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CaptureInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CaptureInfo::InternalSwap(CaptureInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_url_, &other->_impl_.file_url_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.index_)
      + sizeof(CaptureInfo::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(CaptureInfo, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata CaptureInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[63]);
}
// ===================================================================

class CameraServerResult::_Internal {
 public:
};

CameraServerResult::CameraServerResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.CameraServerResult)
}
inline PROTOBUF_NDEBUG_INLINE CameraServerResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_str_(arena, from.result_str_),
        _cached_size_{0} {}

CameraServerResult::CameraServerResult(
    ::google::protobuf::Arena* arena,
    const CameraServerResult& from)
    : ::google::protobuf::Message(arena) {
  CameraServerResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.camera_server.CameraServerResult)
}
inline PROTOBUF_NDEBUG_INLINE CameraServerResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_str_(arena),
        _cached_size_{0} {}

inline void CameraServerResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
CameraServerResult::~CameraServerResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.CameraServerResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CameraServerResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.result_str_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CameraServerResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.CameraServerResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_str_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CameraServerResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> CameraServerResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CameraServerResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string result_str = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CameraServerResult, _impl_.result_str_)}},
    // .mavsdk.rpc.camera_server.CameraServerResult.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CameraServerResult, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CameraServerResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.CameraServerResult.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(CameraServerResult, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string result_str = 2;
    {PROTOBUF_FIELD_OFFSET(CameraServerResult, _impl_.result_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\0\12\0\0\0\0\0"
    "mavsdk.rpc.camera_server.CameraServerResult"
    "result_str"
  }},
};

::uint8_t* CameraServerResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.CameraServerResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.CameraServerResult.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    const std::string& _s = this->_internal_result_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mavsdk.rpc.camera_server.CameraServerResult.result_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.CameraServerResult)
  return target;
}

::size_t CameraServerResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.CameraServerResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (!this->_internal_result_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_result_str());
  }

  // .mavsdk.rpc.camera_server.CameraServerResult.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CameraServerResult::_class_data_ = {
    CameraServerResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CameraServerResult::GetClassData() const {
  return &_class_data_;
}

void CameraServerResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CameraServerResult*>(&to_msg);
  auto& from = static_cast<const CameraServerResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.CameraServerResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result_str().empty()) {
    _this->_internal_set_result_str(from._internal_result_str());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraServerResult::CopyFrom(const CameraServerResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.CameraServerResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CameraServerResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CameraServerResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CameraServerResult::InternalSwap(CameraServerResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_str_, &other->_impl_.result_str_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata CameraServerResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[64]);
}
// ===================================================================

class StorageInformation::_Internal {
 public:
};

StorageInformation::StorageInformation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.StorageInformation)
}
StorageInformation::StorageInformation(
    ::google::protobuf::Arena* arena, const StorageInformation& from)
    : StorageInformation(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StorageInformation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StorageInformation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, used_storage_mib_),
           0,
           offsetof(Impl_, write_speed_mib_s_) -
               offsetof(Impl_, used_storage_mib_) +
               sizeof(Impl_::write_speed_mib_s_));
}
StorageInformation::~StorageInformation() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.StorageInformation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StorageInformation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StorageInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.StorageInformation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.used_storage_mib_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.write_speed_mib_s_) -
      reinterpret_cast<char*>(&_impl_.used_storage_mib_)) + sizeof(_impl_.write_speed_mib_s_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StorageInformation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 0, 2> StorageInformation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StorageInformation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float write_speed_mib_s = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.write_speed_mib_s_)}},
    // float used_storage_mib = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.used_storage_mib_)}},
    // float available_storage_mib = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.available_storage_mib_)}},
    // float total_storage_mib = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.total_storage_mib_)}},
    // .mavsdk.rpc.camera_server.StorageInformation.StorageStatus storage_status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StorageInformation, _impl_.storage_status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.storage_status_)}},
    // uint32 storage_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StorageInformation, _impl_.storage_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.storage_id_)}},
    // .mavsdk.rpc.camera_server.StorageInformation.StorageType storage_type = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StorageInformation, _impl_.storage_type_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.storage_type_)}},
    // float read_speed_mib_s = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.read_speed_mib_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float used_storage_mib = 1;
    {PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.used_storage_mib_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float available_storage_mib = 2;
    {PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.available_storage_mib_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float total_storage_mib = 3;
    {PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.total_storage_mib_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .mavsdk.rpc.camera_server.StorageInformation.StorageStatus storage_status = 4;
    {PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.storage_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 storage_id = 5;
    {PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.storage_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .mavsdk.rpc.camera_server.StorageInformation.StorageType storage_type = 6;
    {PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.storage_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // float read_speed_mib_s = 7;
    {PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.read_speed_mib_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float write_speed_mib_s = 8;
    {PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.write_speed_mib_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StorageInformation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.StorageInformation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float used_storage_mib = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_used_storage_mib = this->_internal_used_storage_mib();
  ::uint32_t raw_used_storage_mib;
  memcpy(&raw_used_storage_mib, &tmp_used_storage_mib, sizeof(tmp_used_storage_mib));
  if (raw_used_storage_mib != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_used_storage_mib(), target);
  }

  // float available_storage_mib = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_available_storage_mib = this->_internal_available_storage_mib();
  ::uint32_t raw_available_storage_mib;
  memcpy(&raw_available_storage_mib, &tmp_available_storage_mib, sizeof(tmp_available_storage_mib));
  if (raw_available_storage_mib != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_available_storage_mib(), target);
  }

  // float total_storage_mib = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_total_storage_mib = this->_internal_total_storage_mib();
  ::uint32_t raw_total_storage_mib;
  memcpy(&raw_total_storage_mib, &tmp_total_storage_mib, sizeof(tmp_total_storage_mib));
  if (raw_total_storage_mib != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_total_storage_mib(), target);
  }

  // .mavsdk.rpc.camera_server.StorageInformation.StorageStatus storage_status = 4;
  if (this->_internal_storage_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_storage_status(), target);
  }

  // uint32 storage_id = 5;
  if (this->_internal_storage_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_storage_id(), target);
  }

  // .mavsdk.rpc.camera_server.StorageInformation.StorageType storage_type = 6;
  if (this->_internal_storage_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_storage_type(), target);
  }

  // float read_speed_mib_s = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_read_speed_mib_s = this->_internal_read_speed_mib_s();
  ::uint32_t raw_read_speed_mib_s;
  memcpy(&raw_read_speed_mib_s, &tmp_read_speed_mib_s, sizeof(tmp_read_speed_mib_s));
  if (raw_read_speed_mib_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_read_speed_mib_s(), target);
  }

  // float write_speed_mib_s = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_write_speed_mib_s = this->_internal_write_speed_mib_s();
  ::uint32_t raw_write_speed_mib_s;
  memcpy(&raw_write_speed_mib_s, &tmp_write_speed_mib_s, sizeof(tmp_write_speed_mib_s));
  if (raw_write_speed_mib_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_write_speed_mib_s(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.StorageInformation)
  return target;
}

::size_t StorageInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.StorageInformation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float used_storage_mib = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_used_storage_mib = this->_internal_used_storage_mib();
  ::uint32_t raw_used_storage_mib;
  memcpy(&raw_used_storage_mib, &tmp_used_storage_mib, sizeof(tmp_used_storage_mib));
  if (raw_used_storage_mib != 0) {
    total_size += 5;
  }

  // float available_storage_mib = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_available_storage_mib = this->_internal_available_storage_mib();
  ::uint32_t raw_available_storage_mib;
  memcpy(&raw_available_storage_mib, &tmp_available_storage_mib, sizeof(tmp_available_storage_mib));
  if (raw_available_storage_mib != 0) {
    total_size += 5;
  }

  // float total_storage_mib = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_total_storage_mib = this->_internal_total_storage_mib();
  ::uint32_t raw_total_storage_mib;
  memcpy(&raw_total_storage_mib, &tmp_total_storage_mib, sizeof(tmp_total_storage_mib));
  if (raw_total_storage_mib != 0) {
    total_size += 5;
  }

  // .mavsdk.rpc.camera_server.StorageInformation.StorageStatus storage_status = 4;
  if (this->_internal_storage_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_storage_status());
  }

  // uint32 storage_id = 5;
  if (this->_internal_storage_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_storage_id());
  }

  // .mavsdk.rpc.camera_server.StorageInformation.StorageType storage_type = 6;
  if (this->_internal_storage_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_storage_type());
  }

  // float read_speed_mib_s = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_read_speed_mib_s = this->_internal_read_speed_mib_s();
  ::uint32_t raw_read_speed_mib_s;
  memcpy(&raw_read_speed_mib_s, &tmp_read_speed_mib_s, sizeof(tmp_read_speed_mib_s));
  if (raw_read_speed_mib_s != 0) {
    total_size += 5;
  }

  // float write_speed_mib_s = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_write_speed_mib_s = this->_internal_write_speed_mib_s();
  ::uint32_t raw_write_speed_mib_s;
  memcpy(&raw_write_speed_mib_s, &tmp_write_speed_mib_s, sizeof(tmp_write_speed_mib_s));
  if (raw_write_speed_mib_s != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StorageInformation::_class_data_ = {
    StorageInformation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StorageInformation::GetClassData() const {
  return &_class_data_;
}

void StorageInformation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StorageInformation*>(&to_msg);
  auto& from = static_cast<const StorageInformation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.StorageInformation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_used_storage_mib = from._internal_used_storage_mib();
  ::uint32_t raw_used_storage_mib;
  memcpy(&raw_used_storage_mib, &tmp_used_storage_mib, sizeof(tmp_used_storage_mib));
  if (raw_used_storage_mib != 0) {
    _this->_internal_set_used_storage_mib(from._internal_used_storage_mib());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_available_storage_mib = from._internal_available_storage_mib();
  ::uint32_t raw_available_storage_mib;
  memcpy(&raw_available_storage_mib, &tmp_available_storage_mib, sizeof(tmp_available_storage_mib));
  if (raw_available_storage_mib != 0) {
    _this->_internal_set_available_storage_mib(from._internal_available_storage_mib());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_total_storage_mib = from._internal_total_storage_mib();
  ::uint32_t raw_total_storage_mib;
  memcpy(&raw_total_storage_mib, &tmp_total_storage_mib, sizeof(tmp_total_storage_mib));
  if (raw_total_storage_mib != 0) {
    _this->_internal_set_total_storage_mib(from._internal_total_storage_mib());
  }
  if (from._internal_storage_status() != 0) {
    _this->_internal_set_storage_status(from._internal_storage_status());
  }
  if (from._internal_storage_id() != 0) {
    _this->_internal_set_storage_id(from._internal_storage_id());
  }
  if (from._internal_storage_type() != 0) {
    _this->_internal_set_storage_type(from._internal_storage_type());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_read_speed_mib_s = from._internal_read_speed_mib_s();
  ::uint32_t raw_read_speed_mib_s;
  memcpy(&raw_read_speed_mib_s, &tmp_read_speed_mib_s, sizeof(tmp_read_speed_mib_s));
  if (raw_read_speed_mib_s != 0) {
    _this->_internal_set_read_speed_mib_s(from._internal_read_speed_mib_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_write_speed_mib_s = from._internal_write_speed_mib_s();
  ::uint32_t raw_write_speed_mib_s;
  memcpy(&raw_write_speed_mib_s, &tmp_write_speed_mib_s, sizeof(tmp_write_speed_mib_s));
  if (raw_write_speed_mib_s != 0) {
    _this->_internal_set_write_speed_mib_s(from._internal_write_speed_mib_s());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StorageInformation::CopyFrom(const StorageInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.StorageInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StorageInformation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StorageInformation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StorageInformation::InternalSwap(StorageInformation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.write_speed_mib_s_)
      + sizeof(StorageInformation::_impl_.write_speed_mib_s_)
      - PROTOBUF_FIELD_OFFSET(StorageInformation, _impl_.used_storage_mib_)>(
          reinterpret_cast<char*>(&_impl_.used_storage_mib_),
          reinterpret_cast<char*>(&other->_impl_.used_storage_mib_));
}

::google::protobuf::Metadata StorageInformation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[65]);
}
// ===================================================================

class CaptureStatus::_Internal {
 public:
};

CaptureStatus::CaptureStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.CaptureStatus)
}
CaptureStatus::CaptureStatus(
    ::google::protobuf::Arena* arena, const CaptureStatus& from)
    : CaptureStatus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CaptureStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CaptureStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, image_interval_s_),
           0,
           offsetof(Impl_, image_count_) -
               offsetof(Impl_, image_interval_s_) +
               sizeof(Impl_::image_count_));
}
CaptureStatus::~CaptureStatus() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.CaptureStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CaptureStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CaptureStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.CaptureStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.image_interval_s_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.image_count_) -
      reinterpret_cast<char*>(&_impl_.image_interval_s_)) + sizeof(_impl_.image_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CaptureStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> CaptureStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CaptureStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float image_interval_s = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.image_interval_s_)}},
    // float recording_time_s = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.recording_time_s_)}},
    // float available_capacity_mib = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.available_capacity_mib_)}},
    // .mavsdk.rpc.camera_server.CaptureStatus.ImageStatus image_status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CaptureStatus, _impl_.image_status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.image_status_)}},
    // .mavsdk.rpc.camera_server.CaptureStatus.VideoStatus video_status = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CaptureStatus, _impl_.video_status_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.video_status_)}},
    // int32 image_count = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CaptureStatus, _impl_.image_count_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.image_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float image_interval_s = 1;
    {PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.image_interval_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float recording_time_s = 2;
    {PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.recording_time_s_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float available_capacity_mib = 3;
    {PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.available_capacity_mib_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .mavsdk.rpc.camera_server.CaptureStatus.ImageStatus image_status = 4;
    {PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.image_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .mavsdk.rpc.camera_server.CaptureStatus.VideoStatus video_status = 5;
    {PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.video_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 image_count = 6;
    {PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.image_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CaptureStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.CaptureStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float image_interval_s = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_image_interval_s = this->_internal_image_interval_s();
  ::uint32_t raw_image_interval_s;
  memcpy(&raw_image_interval_s, &tmp_image_interval_s, sizeof(tmp_image_interval_s));
  if (raw_image_interval_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_image_interval_s(), target);
  }

  // float recording_time_s = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_recording_time_s = this->_internal_recording_time_s();
  ::uint32_t raw_recording_time_s;
  memcpy(&raw_recording_time_s, &tmp_recording_time_s, sizeof(tmp_recording_time_s));
  if (raw_recording_time_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_recording_time_s(), target);
  }

  // float available_capacity_mib = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_available_capacity_mib = this->_internal_available_capacity_mib();
  ::uint32_t raw_available_capacity_mib;
  memcpy(&raw_available_capacity_mib, &tmp_available_capacity_mib, sizeof(tmp_available_capacity_mib));
  if (raw_available_capacity_mib != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_available_capacity_mib(), target);
  }

  // .mavsdk.rpc.camera_server.CaptureStatus.ImageStatus image_status = 4;
  if (this->_internal_image_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_image_status(), target);
  }

  // .mavsdk.rpc.camera_server.CaptureStatus.VideoStatus video_status = 5;
  if (this->_internal_video_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_video_status(), target);
  }

  // int32 image_count = 6;
  if (this->_internal_image_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_image_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.CaptureStatus)
  return target;
}

::size_t CaptureStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.CaptureStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float image_interval_s = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_image_interval_s = this->_internal_image_interval_s();
  ::uint32_t raw_image_interval_s;
  memcpy(&raw_image_interval_s, &tmp_image_interval_s, sizeof(tmp_image_interval_s));
  if (raw_image_interval_s != 0) {
    total_size += 5;
  }

  // float recording_time_s = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_recording_time_s = this->_internal_recording_time_s();
  ::uint32_t raw_recording_time_s;
  memcpy(&raw_recording_time_s, &tmp_recording_time_s, sizeof(tmp_recording_time_s));
  if (raw_recording_time_s != 0) {
    total_size += 5;
  }

  // float available_capacity_mib = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_available_capacity_mib = this->_internal_available_capacity_mib();
  ::uint32_t raw_available_capacity_mib;
  memcpy(&raw_available_capacity_mib, &tmp_available_capacity_mib, sizeof(tmp_available_capacity_mib));
  if (raw_available_capacity_mib != 0) {
    total_size += 5;
  }

  // .mavsdk.rpc.camera_server.CaptureStatus.ImageStatus image_status = 4;
  if (this->_internal_image_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_image_status());
  }

  // .mavsdk.rpc.camera_server.CaptureStatus.VideoStatus video_status = 5;
  if (this->_internal_video_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_video_status());
  }

  // int32 image_count = 6;
  if (this->_internal_image_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_image_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CaptureStatus::_class_data_ = {
    CaptureStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CaptureStatus::GetClassData() const {
  return &_class_data_;
}

void CaptureStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CaptureStatus*>(&to_msg);
  auto& from = static_cast<const CaptureStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.CaptureStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_image_interval_s = from._internal_image_interval_s();
  ::uint32_t raw_image_interval_s;
  memcpy(&raw_image_interval_s, &tmp_image_interval_s, sizeof(tmp_image_interval_s));
  if (raw_image_interval_s != 0) {
    _this->_internal_set_image_interval_s(from._internal_image_interval_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_recording_time_s = from._internal_recording_time_s();
  ::uint32_t raw_recording_time_s;
  memcpy(&raw_recording_time_s, &tmp_recording_time_s, sizeof(tmp_recording_time_s));
  if (raw_recording_time_s != 0) {
    _this->_internal_set_recording_time_s(from._internal_recording_time_s());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_available_capacity_mib = from._internal_available_capacity_mib();
  ::uint32_t raw_available_capacity_mib;
  memcpy(&raw_available_capacity_mib, &tmp_available_capacity_mib, sizeof(tmp_available_capacity_mib));
  if (raw_available_capacity_mib != 0) {
    _this->_internal_set_available_capacity_mib(from._internal_available_capacity_mib());
  }
  if (from._internal_image_status() != 0) {
    _this->_internal_set_image_status(from._internal_image_status());
  }
  if (from._internal_video_status() != 0) {
    _this->_internal_set_video_status(from._internal_video_status());
  }
  if (from._internal_image_count() != 0) {
    _this->_internal_set_image_count(from._internal_image_count());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CaptureStatus::CopyFrom(const CaptureStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.CaptureStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CaptureStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CaptureStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CaptureStatus::InternalSwap(CaptureStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.image_count_)
      + sizeof(CaptureStatus::_impl_.image_count_)
      - PROTOBUF_FIELD_OFFSET(CaptureStatus, _impl_.image_interval_s_)>(
          reinterpret_cast<char*>(&_impl_.image_interval_s_),
          reinterpret_cast<char*>(&other->_impl_.image_interval_s_));
}

::google::protobuf::Metadata CaptureStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[66]);
}
// ===================================================================

class Settings::_Internal {
 public:
};

Settings::Settings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mavsdk.rpc.camera_server.Settings)
}
Settings::Settings(
    ::google::protobuf::Arena* arena, const Settings& from)
    : Settings(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Settings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Settings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mode_),
           0,
           offsetof(Impl_, focus_level_) -
               offsetof(Impl_, mode_) +
               sizeof(Impl_::focus_level_));
}
Settings::~Settings() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.camera_server.Settings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Settings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Settings::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.camera_server.Settings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.mode_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.focus_level_) -
      reinterpret_cast<char*>(&_impl_.mode_)) + sizeof(_impl_.focus_level_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Settings::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Settings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Settings_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .mavsdk.rpc.camera_server.Mode mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Settings, _impl_.mode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.mode_)}},
    // float zoom_level = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.zoom_level_)}},
    // float focus_level = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.focus_level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .mavsdk.rpc.camera_server.Mode mode = 1;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // float zoom_level = 2;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.zoom_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float focus_level = 3;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.focus_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Settings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.camera_server.Settings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .mavsdk.rpc.camera_server.Mode mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mode(), target);
  }

  // float zoom_level = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_zoom_level = this->_internal_zoom_level();
  ::uint32_t raw_zoom_level;
  memcpy(&raw_zoom_level, &tmp_zoom_level, sizeof(tmp_zoom_level));
  if (raw_zoom_level != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_zoom_level(), target);
  }

  // float focus_level = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_focus_level = this->_internal_focus_level();
  ::uint32_t raw_focus_level;
  memcpy(&raw_focus_level, &tmp_focus_level, sizeof(tmp_focus_level));
  if (raw_focus_level != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_focus_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.camera_server.Settings)
  return target;
}

::size_t Settings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.camera_server.Settings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.camera_server.Mode mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  // float zoom_level = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_zoom_level = this->_internal_zoom_level();
  ::uint32_t raw_zoom_level;
  memcpy(&raw_zoom_level, &tmp_zoom_level, sizeof(tmp_zoom_level));
  if (raw_zoom_level != 0) {
    total_size += 5;
  }

  // float focus_level = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_focus_level = this->_internal_focus_level();
  ::uint32_t raw_focus_level;
  memcpy(&raw_focus_level, &tmp_focus_level, sizeof(tmp_focus_level));
  if (raw_focus_level != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Settings::_class_data_ = {
    Settings::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Settings::GetClassData() const {
  return &_class_data_;
}

void Settings::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Settings*>(&to_msg);
  auto& from = static_cast<const Settings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.camera_server.Settings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_zoom_level = from._internal_zoom_level();
  ::uint32_t raw_zoom_level;
  memcpy(&raw_zoom_level, &tmp_zoom_level, sizeof(tmp_zoom_level));
  if (raw_zoom_level != 0) {
    _this->_internal_set_zoom_level(from._internal_zoom_level());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_focus_level = from._internal_focus_level();
  ::uint32_t raw_focus_level;
  memcpy(&raw_focus_level, &tmp_focus_level, sizeof(tmp_focus_level));
  if (raw_focus_level != 0) {
    _this->_internal_set_focus_level(from._internal_focus_level());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Settings::CopyFrom(const Settings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.camera_server.Settings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Settings::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Settings::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Settings::InternalSwap(Settings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Settings, _impl_.focus_level_)
      + sizeof(Settings::_impl_.focus_level_)
      - PROTOBUF_FIELD_OFFSET(Settings, _impl_.mode_)>(
          reinterpret_cast<char*>(&_impl_.mode_),
          reinterpret_cast<char*>(&other->_impl_.mode_));
}

::google::protobuf::Metadata Settings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_getter, &descriptor_table_camera_5fserver_2fcamera_5fserver_2eproto_once,
      file_level_metadata_camera_5fserver_2fcamera_5fserver_2eproto[67]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace camera_server
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
